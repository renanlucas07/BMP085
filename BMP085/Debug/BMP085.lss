
BMP085.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fc  00800100  000012a6  0000133a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  008001fc  008001fc  00001436  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001436  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001494  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000014d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d1c  00000000  00000000  0000155c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ae  00000000  00000000  00002278  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000089e  00000000  00000000  00002b26  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  000033c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000484  00000000  00000000  00003604  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007b3  00000000  00000000  00003a88  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000423b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 ea       	ldi	r30, 0xA6	; 166
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ac 3f       	cpi	r26, 0xFC	; 252
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	ac ef       	ldi	r26, 0xFC	; 252
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a9 31       	cpi	r26, 0x19	; 25
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 9e 03 	call	0x73c	; 0x73c <main>
      9e:	0c 94 51 09 	jmp	0x12a2	; 0x12a2 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uartPutch>:
*************************************************************************/
unsigned char i2cRepStart(unsigned char address)
{
    return i2cStart( address );

}/* i2cRepStart */
      a6:	cf 93       	push	r28
      a8:	c8 2f       	mov	r28, r24
      aa:	8a 30       	cpi	r24, 0x0A	; 10
      ac:	19 f4       	brne	.+6      	; 0xb4 <uartPutch+0xe>
      ae:	8d e0       	ldi	r24, 0x0D	; 13
      b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uartPutch>
      b4:	e0 ec       	ldi	r30, 0xC0	; 192
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	80 81       	ld	r24, Z
      ba:	85 ff       	sbrs	r24, 5
      bc:	fd cf       	rjmp	.-6      	; 0xb8 <uartPutch+0x12>
      be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      c2:	80 e0       	ldi	r24, 0x00	; 0
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	cf 91       	pop	r28
      c8:	08 95       	ret

000000ca <uartGetch>:
      ca:	cf 93       	push	r28
      cc:	bc 01       	movw	r22, r24
      ce:	e0 ec       	ldi	r30, 0xC0	; 192
      d0:	f0 e0       	ldi	r31, 0x00	; 0
      d2:	90 81       	ld	r25, Z
      d4:	99 23       	and	r25, r25
      d6:	ec f7       	brge	.-6      	; 0xd2 <uartGetch+0x8>
      d8:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      dc:	8c 2f       	mov	r24, r28
      de:	0e 94 53 00 	call	0xa6	; 0xa6 <uartPutch>
      e2:	8c 2f       	mov	r24, r28
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	cf 91       	pop	r28
      e8:	08 95       	ret

000000ea <i2cInit>:
      ea:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      ee:	88 e4       	ldi	r24, 0x48	; 72
      f0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
      f4:	8e e0       	ldi	r24, 0x0E	; 14
      f6:	91 e0       	ldi	r25, 0x01	; 1
      f8:	0e 94 59 06 	call	0xcb2	; 0xcb2 <puts>
      fc:	08 95       	ret

000000fe <i2cStart>:
      fe:	94 ea       	ldi	r25, 0xA4	; 164
     100:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     104:	ec eb       	ldi	r30, 0xBC	; 188
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	90 81       	ld	r25, Z
     10a:	99 23       	and	r25, r25
     10c:	ec f7       	brge	.-6      	; 0x108 <i2cStart+0xa>
     10e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     112:	98 7f       	andi	r25, 0xF8	; 248
     114:	98 30       	cpi	r25, 0x08	; 8
     116:	11 f0       	breq	.+4      	; 0x11c <i2cStart+0x1e>
     118:	90 31       	cpi	r25, 0x10	; 16
     11a:	a1 f4       	brne	.+40     	; 0x144 <i2cStart+0x46>
     11c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     120:	84 e8       	ldi	r24, 0x84	; 132
     122:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     126:	ec eb       	ldi	r30, 0xBC	; 188
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	80 81       	ld	r24, Z
     12c:	88 23       	and	r24, r24
     12e:	ec f7       	brge	.-6      	; 0x12a <i2cStart+0x2c>
     130:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     134:	98 7f       	andi	r25, 0xF8	; 248
     136:	98 31       	cpi	r25, 0x18	; 24
     138:	39 f0       	breq	.+14     	; 0x148 <i2cStart+0x4a>
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	90 34       	cpi	r25, 0x40	; 64
     13e:	29 f4       	brne	.+10     	; 0x14a <i2cStart+0x4c>
     140:	80 e0       	ldi	r24, 0x00	; 0
     142:	08 95       	ret
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	08 95       	ret
     148:	80 e0       	ldi	r24, 0x00	; 0
     14a:	08 95       	ret

0000014c <i2cStop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2cStop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     14c:	84 e9       	ldi	r24, 0x94	; 148
     14e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     152:	ec eb       	ldi	r30, 0xBC	; 188
     154:	f0 e0       	ldi	r31, 0x00	; 0
     156:	80 81       	ld	r24, Z
     158:	84 fd       	sbrc	r24, 4
     15a:	fd cf       	rjmp	.-6      	; 0x156 <i2cStop+0xa>

}/* i2cStop */
     15c:	08 95       	ret

0000015e <i2cWrite>:
unsigned char i2cWrite( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     15e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     162:	84 e8       	ldi	r24, 0x84	; 132
     164:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     168:	ec eb       	ldi	r30, 0xBC	; 188
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	80 81       	ld	r24, Z
     16e:	88 23       	and	r24, r24
     170:	ec f7       	brge	.-6      	; 0x16c <i2cWrite+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     172:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     176:	98 7f       	andi	r25, 0xF8	; 248
     178:	81 e0       	ldi	r24, 0x01	; 1
     17a:	98 32       	cpi	r25, 0x28	; 40
     17c:	09 f4       	brne	.+2      	; 0x180 <i2cWrite+0x22>
     17e:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2cWrite */
     180:	08 95       	ret

00000182 <i2cReadAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2cReadAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     182:	84 ec       	ldi	r24, 0xC4	; 196
     184:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));    
     188:	ec eb       	ldi	r30, 0xBC	; 188
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	80 81       	ld	r24, Z
     18e:	88 23       	and	r24, r24
     190:	ec f7       	brge	.-6      	; 0x18c <i2cReadAck+0xa>

    return TWDR;
     192:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2cReadAck */
     196:	08 95       	ret

00000198 <i2cReadNack>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2cReadNack(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     198:	84 e8       	ldi	r24, 0x84	; 132
     19a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
     19e:	ec eb       	ldi	r30, 0xBC	; 188
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	80 81       	ld	r24, Z
     1a4:	88 23       	and	r24, r24
     1a6:	ec f7       	brge	.-6      	; 0x1a2 <i2cReadNack+0xa>
	
    return TWDR;
     1a8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2cReadNack */
     1ac:	08 95       	ret

000001ae <uartInit>:
#define BAUD_RATE 19200
#endif

void uartInit(void)
{
  UBRR0H = (((F_CPU/BAUD_RATE)/16)-1)>>8;	// set baud rate
     1ae:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  UBRR0L = (((F_CPU/BAUD_RATE)/16)-1);
     1b2:	87 e6       	ldi	r24, 0x67	; 103
     1b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  UCSR0B = (1<<RXEN0)|(1<<TXEN0); 		// enable Rx & Tx
     1b8:	88 e1       	ldi	r24, 0x18	; 24
     1ba:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  UCSR0C=  (1<<UCSZ01)|(1<<UCSZ00);  	       // config USART; 8N1
     1be:	86 e0       	ldi	r24, 0x06	; 6
     1c0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  printf("\nUSART INITIALIZED\n");
     1c4:	8f e1       	ldi	r24, 0x1F	; 31
     1c6:	91 e0       	ldi	r25, 0x01	; 1
     1c8:	0e 94 59 06 	call	0xcb2	; 0xcb2 <puts>
     1cc:	08 95       	ret

000001ce <begin>:

int16_t ac1,ac2,ac3,b1,b2,mb,mc,md;
uint16_t ac4,ac5,ac6;

// Returns 0 if succeeds, 1 if fails
uint8_t begin(uint8_t mode) {
     1ce:	cf 93       	push	r28
	oversampling = mode;
     1d0:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <oversampling>
	i2cInit();
     1d4:	0e 94 75 00 	call	0xea	; 0xea <i2cInit>
	// 
	if(i2cStart(I2CADDR+I2C_WRITE)){
     1d8:	8e ee       	ldi	r24, 0xEE	; 238
     1da:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
     1de:	c8 2f       	mov	r28, r24
     1e0:	88 23       	and	r24, r24
     1e2:	31 f0       	breq	.+12     	; 0x1f0 <begin+0x22>
		printf("\nAddress registering failed\n");
     1e4:	82 e3       	ldi	r24, 0x32	; 50
     1e6:	91 e0       	ldi	r25, 0x01	; 1
     1e8:	0e 94 59 06 	call	0xcb2	; 0xcb2 <puts>
		return 1;
     1ec:	c1 e0       	ldi	r28, 0x01	; 1
     1ee:	db c1       	rjmp	.+950    	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
	}
	i2cWrite(AC1);
     1f0:	8a ea       	ldi	r24, 0xAA	; 170
     1f2:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     1f6:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     1fa:	8f ee       	ldi	r24, 0xEF	; 239
     1fc:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	ac1 = i2cReadAck();
     200:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	ac1 <<= 8;
     204:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <ac1>
     208:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <ac1+0x1>
	ac1 |= i2cReadNack();
     20c:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     210:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <ac1>
     214:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <ac1+0x1>
     218:	28 2b       	or	r18, r24
     21a:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <ac1+0x1>
     21e:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <ac1>
	i2cStop();
     222:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     226:	8e ee       	ldi	r24, 0xEE	; 238
     228:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(AC2);
     22c:	8c ea       	ldi	r24, 0xAC	; 172
     22e:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     232:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     236:	8f ee       	ldi	r24, 0xEF	; 239
     238:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	ac2 = i2cReadAck();
     23c:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	ac2 <<= 8;
     240:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <ac2>
     244:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <ac2+0x1>
	ac2 |= i2cReadNack();
     248:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     24c:	20 91 08 02 	lds	r18, 0x0208	; 0x800208 <ac2>
     250:	30 91 09 02 	lds	r19, 0x0209	; 0x800209 <ac2+0x1>
     254:	28 2b       	or	r18, r24
     256:	30 93 09 02 	sts	0x0209, r19	; 0x800209 <ac2+0x1>
     25a:	20 93 08 02 	sts	0x0208, r18	; 0x800208 <ac2>
	i2cStop();
     25e:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     262:	8e ee       	ldi	r24, 0xEE	; 238
     264:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(AC3);
     268:	8e ea       	ldi	r24, 0xAE	; 174
     26a:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     26e:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     272:	8f ee       	ldi	r24, 0xEF	; 239
     274:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	ac3 = i2cReadAck();
     278:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	ac3 <<= 8;
     27c:	10 92 11 02 	sts	0x0211, r1	; 0x800211 <ac3>
     280:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <ac3+0x1>
	ac3 |= i2cReadNack();
     284:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     288:	20 91 11 02 	lds	r18, 0x0211	; 0x800211 <ac3>
     28c:	30 91 12 02 	lds	r19, 0x0212	; 0x800212 <ac3+0x1>
     290:	28 2b       	or	r18, r24
     292:	30 93 12 02 	sts	0x0212, r19	; 0x800212 <ac3+0x1>
     296:	20 93 11 02 	sts	0x0211, r18	; 0x800211 <ac3>
	i2cStop();
     29a:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	//bugado
	i2cStart(I2CADDR+I2C_WRITE);
     29e:	8e ee       	ldi	r24, 0xEE	; 238
     2a0:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(AC4);
     2a4:	80 eb       	ldi	r24, 0xB0	; 176
     2a6:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     2aa:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     2ae:	8f ee       	ldi	r24, 0xEF	; 239
     2b0:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	ac4 = i2cReadAck();
     2b4:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	ac4 <<= 8;
     2b8:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <ac4>
     2bc:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <ac4+0x1>
	ac4 |= i2cReadNack();
     2c0:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     2c4:	20 91 0c 02 	lds	r18, 0x020C	; 0x80020c <ac4>
     2c8:	30 91 0d 02 	lds	r19, 0x020D	; 0x80020d <ac4+0x1>
     2cc:	28 2b       	or	r18, r24
     2ce:	30 93 0d 02 	sts	0x020D, r19	; 0x80020d <ac4+0x1>
     2d2:	20 93 0c 02 	sts	0x020C, r18	; 0x80020c <ac4>
	
	i2cStop();
     2d6:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     2da:	8e ee       	ldi	r24, 0xEE	; 238
     2dc:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(AC5);
     2e0:	82 eb       	ldi	r24, 0xB2	; 178
     2e2:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     2e6:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     2ea:	8f ee       	ldi	r24, 0xEF	; 239
     2ec:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	ac5 = i2cReadAck();
     2f0:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	ac5 <<= 8;
     2f4:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <ac5>
     2f8:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <ac5+0x1>
	ac5 |= i2cReadNack();
     2fc:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     300:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <ac5>
     304:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <ac5+0x1>
     308:	28 2b       	or	r18, r24
     30a:	30 93 07 02 	sts	0x0207, r19	; 0x800207 <ac5+0x1>
     30e:	20 93 06 02 	sts	0x0206, r18	; 0x800206 <ac5>
	i2cStop();
     312:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     316:	8e ee       	ldi	r24, 0xEE	; 238
     318:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(AC6);
     31c:	84 eb       	ldi	r24, 0xB4	; 180
     31e:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     322:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     326:	8f ee       	ldi	r24, 0xEF	; 239
     328:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	ac6 = i2cReadAck();
     32c:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	ac6 <<= 8;
     330:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <ac6>
     334:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <ac6+0x1>
	ac6 |= i2cReadNack();
     338:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     33c:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <ac6>
     340:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <ac6+0x1>
     344:	28 2b       	or	r18, r24
     346:	30 93 05 02 	sts	0x0205, r19	; 0x800205 <ac6+0x1>
     34a:	20 93 04 02 	sts	0x0204, r18	; 0x800204 <ac6>
	i2cStop();
     34e:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     352:	8e ee       	ldi	r24, 0xEE	; 238
     354:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(B1);
     358:	86 eb       	ldi	r24, 0xB6	; 182
     35a:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     35e:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     362:	8f ee       	ldi	r24, 0xEF	; 239
     364:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	b1 = i2cReadAck();
     368:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	b1 <<= 8;
     36c:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <b1>
     370:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <b1+0x1>
	b1 |= i2cReadNack();
     374:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     378:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <b1>
     37c:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <b1+0x1>
     380:	28 2b       	or	r18, r24
     382:	30 93 03 02 	sts	0x0203, r19	; 0x800203 <b1+0x1>
     386:	20 93 02 02 	sts	0x0202, r18	; 0x800202 <b1>
	i2cStop();
     38a:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     38e:	8e ee       	ldi	r24, 0xEE	; 238
     390:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(B2);
     394:	88 eb       	ldi	r24, 0xB8	; 184
     396:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     39a:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     39e:	8f ee       	ldi	r24, 0xEF	; 239
     3a0:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	b2 = i2cReadAck();
     3a4:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	b2 <<= 8;
     3a8:	10 92 fc 01 	sts	0x01FC, r1	; 0x8001fc <__data_end>
     3ac:	80 93 fd 01 	sts	0x01FD, r24	; 0x8001fd <__data_end+0x1>
	b2 |= i2cReadNack();
     3b0:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     3b4:	20 91 fc 01 	lds	r18, 0x01FC	; 0x8001fc <__data_end>
     3b8:	30 91 fd 01 	lds	r19, 0x01FD	; 0x8001fd <__data_end+0x1>
     3bc:	28 2b       	or	r18, r24
     3be:	30 93 fd 01 	sts	0x01FD, r19	; 0x8001fd <__data_end+0x1>
     3c2:	20 93 fc 01 	sts	0x01FC, r18	; 0x8001fc <__data_end>
	i2cStop();
     3c6:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     3ca:	8e ee       	ldi	r24, 0xEE	; 238
     3cc:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(MB);
     3d0:	8a eb       	ldi	r24, 0xBA	; 186
     3d2:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     3d6:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     3da:	8f ee       	ldi	r24, 0xEF	; 239
     3dc:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	mb = i2cReadAck();
     3e0:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	mb <<= 8;
     3e4:	10 92 fe 01 	sts	0x01FE, r1	; 0x8001fe <mb>
     3e8:	80 93 ff 01 	sts	0x01FF, r24	; 0x8001ff <mb+0x1>
	mb |= i2cReadNack();
     3ec:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     3f0:	20 91 fe 01 	lds	r18, 0x01FE	; 0x8001fe <mb>
     3f4:	30 91 ff 01 	lds	r19, 0x01FF	; 0x8001ff <mb+0x1>
     3f8:	28 2b       	or	r18, r24
     3fa:	30 93 ff 01 	sts	0x01FF, r19	; 0x8001ff <mb+0x1>
     3fe:	20 93 fe 01 	sts	0x01FE, r18	; 0x8001fe <mb>
	i2cStop();
     402:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     406:	8e ee       	ldi	r24, 0xEE	; 238
     408:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(MC);
     40c:	8c eb       	ldi	r24, 0xBC	; 188
     40e:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     412:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     416:	8f ee       	ldi	r24, 0xEF	; 239
     418:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	mc = i2cReadAck();
     41c:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	mc <<= 8;
     420:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <mc>
     424:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <mc+0x1>
	mc |= i2cReadNack();
     428:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     42c:	20 91 0f 02 	lds	r18, 0x020F	; 0x80020f <mc>
     430:	30 91 10 02 	lds	r19, 0x0210	; 0x800210 <mc+0x1>
     434:	28 2b       	or	r18, r24
     436:	30 93 10 02 	sts	0x0210, r19	; 0x800210 <mc+0x1>
     43a:	20 93 0f 02 	sts	0x020F, r18	; 0x80020f <mc>
	i2cStop();
     43e:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     442:	8e ee       	ldi	r24, 0xEE	; 238
     444:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(MD);
     448:	8e eb       	ldi	r24, 0xBE	; 190
     44a:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     44e:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     452:	8f ee       	ldi	r24, 0xEF	; 239
     454:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	md = i2cReadAck();
     458:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
	md <<= 8;
     45c:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <md>
     460:	80 93 0b 02 	sts	0x020B, r24	; 0x80020b <md+0x1>
	md |= i2cReadNack();
     464:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     468:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <md>
     46c:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <md+0x1>
     470:	28 2b       	or	r18, r24
     472:	30 93 0b 02 	sts	0x020B, r19	; 0x80020b <md+0x1>
     476:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <md>
	i2cStop();
     47a:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	
	printf ("\nAC1 = %d\n",ac1);
     47e:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <ac1+0x1>
     482:	8f 93       	push	r24
     484:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <ac1>
     488:	8f 93       	push	r24
     48a:	8e e4       	ldi	r24, 0x4E	; 78
     48c:	91 e0       	ldi	r25, 0x01	; 1
     48e:	9f 93       	push	r25
     490:	8f 93       	push	r24
     492:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nAC2 = %d\n",ac2);
     496:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <ac2+0x1>
     49a:	8f 93       	push	r24
     49c:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <ac2>
     4a0:	8f 93       	push	r24
     4a2:	89 e5       	ldi	r24, 0x59	; 89
     4a4:	91 e0       	ldi	r25, 0x01	; 1
     4a6:	9f 93       	push	r25
     4a8:	8f 93       	push	r24
     4aa:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nAC3 = %d\n",ac3);
     4ae:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <ac3+0x1>
     4b2:	8f 93       	push	r24
     4b4:	80 91 11 02 	lds	r24, 0x0211	; 0x800211 <ac3>
     4b8:	8f 93       	push	r24
     4ba:	84 e6       	ldi	r24, 0x64	; 100
     4bc:	91 e0       	ldi	r25, 0x01	; 1
     4be:	9f 93       	push	r25
     4c0:	8f 93       	push	r24
     4c2:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nAC4 = %u\n",ac4);
     4c6:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <ac4+0x1>
     4ca:	8f 93       	push	r24
     4cc:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <ac4>
     4d0:	8f 93       	push	r24
     4d2:	8f e6       	ldi	r24, 0x6F	; 111
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	9f 93       	push	r25
     4d8:	8f 93       	push	r24
     4da:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nAC5 = %u\n",ac5);
     4de:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <ac5+0x1>
     4e2:	8f 93       	push	r24
     4e4:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ac5>
     4e8:	8f 93       	push	r24
     4ea:	8a e7       	ldi	r24, 0x7A	; 122
     4ec:	91 e0       	ldi	r25, 0x01	; 1
     4ee:	9f 93       	push	r25
     4f0:	8f 93       	push	r24
     4f2:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nAC6 = %u\n",ac6);
     4f6:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <ac6+0x1>
     4fa:	8f 93       	push	r24
     4fc:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <ac6>
     500:	8f 93       	push	r24
     502:	85 e8       	ldi	r24, 0x85	; 133
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	9f 93       	push	r25
     508:	8f 93       	push	r24
     50a:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nB1 = %d\n",b1);
     50e:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <b1+0x1>
     512:	8f 93       	push	r24
     514:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <b1>
     518:	8f 93       	push	r24
     51a:	80 e9       	ldi	r24, 0x90	; 144
     51c:	91 e0       	ldi	r25, 0x01	; 1
     51e:	9f 93       	push	r25
     520:	8f 93       	push	r24
     522:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nB2 = %d\n",b2);
     526:	80 91 fd 01 	lds	r24, 0x01FD	; 0x8001fd <__data_end+0x1>
     52a:	8f 93       	push	r24
     52c:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <__data_end>
     530:	8f 93       	push	r24
     532:	8a e9       	ldi	r24, 0x9A	; 154
     534:	91 e0       	ldi	r25, 0x01	; 1
     536:	9f 93       	push	r25
     538:	8f 93       	push	r24
     53a:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nMB = %d\n",mb);
     53e:	8d b7       	in	r24, 0x3d	; 61
     540:	9e b7       	in	r25, 0x3e	; 62
     542:	80 96       	adiw	r24, 0x20	; 32
     544:	0f b6       	in	r0, 0x3f	; 63
     546:	f8 94       	cli
     548:	9e bf       	out	0x3e, r25	; 62
     54a:	0f be       	out	0x3f, r0	; 63
     54c:	8d bf       	out	0x3d, r24	; 61
     54e:	80 91 ff 01 	lds	r24, 0x01FF	; 0x8001ff <mb+0x1>
     552:	8f 93       	push	r24
     554:	80 91 fe 01 	lds	r24, 0x01FE	; 0x8001fe <mb>
     558:	8f 93       	push	r24
     55a:	84 ea       	ldi	r24, 0xA4	; 164
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	9f 93       	push	r25
     560:	8f 93       	push	r24
     562:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nMC = %d\n",mc);
     566:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <mc+0x1>
     56a:	8f 93       	push	r24
     56c:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <mc>
     570:	8f 93       	push	r24
     572:	8e ea       	ldi	r24, 0xAE	; 174
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	9f 93       	push	r25
     578:	8f 93       	push	r24
     57a:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf ("\nMD = %d\n",md);
     57e:	80 91 0b 02 	lds	r24, 0x020B	; 0x80020b <md+0x1>
     582:	8f 93       	push	r24
     584:	80 91 0a 02 	lds	r24, 0x020A	; 0x80020a <md>
     588:	8f 93       	push	r24
     58a:	88 eb       	ldi	r24, 0xB8	; 184
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	9f 93       	push	r25
     590:	8f 93       	push	r24
     592:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	
	return 0;
     596:	8d b7       	in	r24, 0x3d	; 61
     598:	9e b7       	in	r25, 0x3e	; 62
     59a:	0c 96       	adiw	r24, 0x0c	; 12
     59c:	0f b6       	in	r0, 0x3f	; 63
     59e:	f8 94       	cli
     5a0:	9e bf       	out	0x3e, r25	; 62
     5a2:	0f be       	out	0x3f, r0	; 63
     5a4:	8d bf       	out	0x3d, r24	; 61
}
     5a6:	8c 2f       	mov	r24, r28
     5a8:	cf 91       	pop	r28
     5aa:	08 95       	ret

000005ac <readTemperature>:

float readTemperature() {
     5ac:	8f 92       	push	r8
     5ae:	9f 92       	push	r9
     5b0:	af 92       	push	r10
     5b2:	bf 92       	push	r11
     5b4:	cf 92       	push	r12
     5b6:	df 92       	push	r13
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
	int32_t UT,X1,X2;
	float temp;
	i2cStart(I2CADDR+I2C_WRITE);
     5c0:	8e ee       	ldi	r24, 0xEE	; 238
     5c2:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(CONTROL);
     5c6:	84 ef       	ldi	r24, 0xF4	; 244
     5c8:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cWrite(READTEMPCMD);
     5cc:	8e e2       	ldi	r24, 0x2E	; 46
     5ce:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     5d2:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     5d6:	8f e4       	ldi	r24, 0x4F	; 79
     5d8:	96 e4       	ldi	r25, 0x46	; 70
     5da:	01 97       	sbiw	r24, 0x01	; 1
     5dc:	f1 f7       	brne	.-4      	; 0x5da <readTemperature+0x2e>
     5de:	00 c0       	rjmp	.+0      	; 0x5e0 <readTemperature+0x34>
     5e0:	00 00       	nop
	_delay_us(4500);
	i2cStart(I2CADDR+I2C_WRITE);
     5e2:	8e ee       	ldi	r24, 0xEE	; 238
     5e4:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	i2cWrite(DATA);
     5e8:	86 ef       	ldi	r24, 0xF6	; 246
     5ea:	0e 94 af 00 	call	0x15e	; 0x15e <i2cWrite>
	i2cStop();
     5ee:	0e 94 a6 00 	call	0x14c	; 0x14c <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     5f2:	8f ee       	ldi	r24, 0xEF	; 239
     5f4:	0e 94 7f 00 	call	0xfe	; 0xfe <i2cStart>
	UT = i2cReadAck();
     5f8:	0e 94 c1 00 	call	0x182	; 0x182 <i2cReadAck>
     5fc:	c8 2e       	mov	r12, r24
     5fe:	d1 2c       	mov	r13, r1
     600:	e1 2c       	mov	r14, r1
     602:	f1 2c       	mov	r15, r1
	UT <<= 8;
     604:	fe 2c       	mov	r15, r14
     606:	ed 2c       	mov	r14, r13
     608:	dc 2c       	mov	r13, r12
     60a:	cc 24       	eor	r12, r12
	UT |= i2cReadNack();
     60c:	0e 94 cc 00 	call	0x198	; 0x198 <i2cReadNack>
     610:	c8 2a       	or	r12, r24
	printf("\nUT = %ld",UT);
     612:	ff 92       	push	r15
     614:	ef 92       	push	r14
     616:	df 92       	push	r13
     618:	cf 92       	push	r12
     61a:	82 ec       	ldi	r24, 0xC2	; 194
     61c:	91 e0       	ldi	r25, 0x01	; 1
     61e:	9f 93       	push	r25
     620:	8f 93       	push	r24
     622:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	X1 = ((UT - (int32_t)ac6) * ((int32_t)ac5) >> 15);
     626:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <ac6>
     62a:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <ac6+0x1>
     62e:	a7 01       	movw	r20, r14
     630:	96 01       	movw	r18, r12
     632:	28 1b       	sub	r18, r24
     634:	39 0b       	sbc	r19, r25
     636:	41 09       	sbc	r20, r1
     638:	51 09       	sbc	r21, r1
     63a:	a0 91 06 02 	lds	r26, 0x0206	; 0x800206 <ac5>
     63e:	b0 91 07 02 	lds	r27, 0x0207	; 0x800207 <ac5+0x1>
     642:	0e 94 07 06 	call	0xc0e	; 0xc0e <__muluhisi3>
     646:	4b 01       	movw	r8, r22
     648:	5c 01       	movw	r10, r24
     64a:	07 2e       	mov	r0, r23
     64c:	7f e0       	ldi	r23, 0x0F	; 15
     64e:	b5 94       	asr	r11
     650:	a7 94       	ror	r10
     652:	97 94       	ror	r9
     654:	87 94       	ror	r8
     656:	7a 95       	dec	r23
     658:	d1 f7       	brne	.-12     	; 0x64e <readTemperature+0xa2>
     65a:	70 2d       	mov	r23, r0
	X2 = (((int32_t)mc << 11) / (X1 + (int32_t)md));
     65c:	60 91 0f 02 	lds	r22, 0x020F	; 0x80020f <mc>
     660:	70 91 10 02 	lds	r23, 0x0210	; 0x800210 <mc+0x1>
     664:	cb 01       	movw	r24, r22
     666:	77 0f       	add	r23, r23
     668:	aa 0b       	sbc	r26, r26
     66a:	bb 0b       	sbc	r27, r27
     66c:	bc 01       	movw	r22, r24
     66e:	cd 01       	movw	r24, r26
     670:	05 2e       	mov	r0, r21
     672:	5b e0       	ldi	r21, 0x0B	; 11
     674:	66 0f       	add	r22, r22
     676:	77 1f       	adc	r23, r23
     678:	88 1f       	adc	r24, r24
     67a:	99 1f       	adc	r25, r25
     67c:	5a 95       	dec	r21
     67e:	d1 f7       	brne	.-12     	; 0x674 <readTemperature+0xc8>
     680:	50 2d       	mov	r21, r0
     682:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <md>
     686:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <md+0x1>
     68a:	89 01       	movw	r16, r18
     68c:	33 0f       	add	r19, r19
     68e:	22 0b       	sbc	r18, r18
     690:	33 0b       	sbc	r19, r19
     692:	a9 01       	movw	r20, r18
     694:	98 01       	movw	r18, r16
     696:	28 0d       	add	r18, r8
     698:	39 1d       	adc	r19, r9
     69a:	4a 1d       	adc	r20, r10
     69c:	5b 1d       	adc	r21, r11
     69e:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <__divmodsi4>
	printf("\nx1 = %ld, x2= %ld, B5 = %ld",X1, X2,X1+X2);
     6a2:	75 01       	movw	r14, r10
     6a4:	64 01       	movw	r12, r8
     6a6:	c2 0e       	add	r12, r18
     6a8:	d3 1e       	adc	r13, r19
     6aa:	e4 1e       	adc	r14, r20
     6ac:	f5 1e       	adc	r15, r21
     6ae:	ff 92       	push	r15
     6b0:	ef 92       	push	r14
     6b2:	df 92       	push	r13
     6b4:	cf 92       	push	r12
     6b6:	5f 93       	push	r21
     6b8:	4f 93       	push	r20
     6ba:	3f 93       	push	r19
     6bc:	2f 93       	push	r18
     6be:	bf 92       	push	r11
     6c0:	af 92       	push	r10
     6c2:	9f 92       	push	r9
     6c4:	8f 92       	push	r8
     6c6:	8c ec       	ldi	r24, 0xCC	; 204
     6c8:	91 e0       	ldi	r25, 0x01	; 1
     6ca:	9f 93       	push	r25
     6cc:	8f 93       	push	r24
     6ce:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	printf("\nTemp = %ld",((X1 + X2 + 8) >> 4));
     6d2:	98 e0       	ldi	r25, 0x08	; 8
     6d4:	c9 0e       	add	r12, r25
     6d6:	d1 1c       	adc	r13, r1
     6d8:	e1 1c       	adc	r14, r1
     6da:	f1 1c       	adc	r15, r1
     6dc:	68 94       	set
     6de:	13 f8       	bld	r1, 3
     6e0:	f5 94       	asr	r15
     6e2:	e7 94       	ror	r14
     6e4:	d7 94       	ror	r13
     6e6:	c7 94       	ror	r12
     6e8:	16 94       	lsr	r1
     6ea:	d1 f7       	brne	.-12     	; 0x6e0 <readTemperature+0x134>
     6ec:	ff 92       	push	r15
     6ee:	ef 92       	push	r14
     6f0:	df 92       	push	r13
     6f2:	cf 92       	push	r12
     6f4:	89 ee       	ldi	r24, 0xE9	; 233
     6f6:	91 e0       	ldi	r25, 0x01	; 1
     6f8:	9f 93       	push	r25
     6fa:	8f 93       	push	r24
     6fc:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
	temp = ((X1 + X2 + 8) >> 4);
     700:	c7 01       	movw	r24, r14
     702:	b6 01       	movw	r22, r12
     704:	0e 94 ef 04 	call	0x9de	; 0x9de <__floatsisf>
	temp /= 10.0;
	return temp;
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	40 e2       	ldi	r20, 0x20	; 32
     70e:	51 e4       	ldi	r21, 0x41	; 65
     710:	0e 94 45 04 	call	0x88a	; 0x88a <__divsf3>
     714:	2d b7       	in	r18, 0x3d	; 61
     716:	3e b7       	in	r19, 0x3e	; 62
     718:	26 5e       	subi	r18, 0xE6	; 230
     71a:	3f 4f       	sbci	r19, 0xFF	; 255
     71c:	0f b6       	in	r0, 0x3f	; 63
     71e:	f8 94       	cli
     720:	3e bf       	out	0x3e, r19	; 62
     722:	0f be       	out	0x3f, r0	; 63
     724:	2d bf       	out	0x3d, r18	; 61
} 
     726:	1f 91       	pop	r17
     728:	0f 91       	pop	r16
     72a:	ff 90       	pop	r15
     72c:	ef 90       	pop	r14
     72e:	df 90       	pop	r13
     730:	cf 90       	pop	r12
     732:	bf 90       	pop	r11
     734:	af 90       	pop	r10
     736:	9f 90       	pop	r9
     738:	8f 90       	pop	r8
     73a:	08 95       	ret

0000073c <main>:

int main()
{
	float temp;
	int pi, pd;
	stdout = stdin = &uart_str;
     73c:	e3 e1       	ldi	r30, 0x13	; 19
     73e:	f2 e0       	ldi	r31, 0x02	; 2
     740:	80 e0       	ldi	r24, 0x00	; 0
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	91 83       	std	Z+1, r25	; 0x01
     746:	80 83       	st	Z, r24
     748:	93 83       	std	Z+3, r25	; 0x03
     74a:	82 83       	std	Z+2, r24	; 0x02
    uartInit();
     74c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <uartInit>
	begin(ULTRAHIGHRES);
     750:	83 e0       	ldi	r24, 0x03	; 3
     752:	0e 94 e7 00 	call	0x1ce	; 0x1ce <begin>
    while (1) 
    {
		temp = readTemperature();
		pi = temp;
		pd = (temp - pi)*10;
		printf("\n%d.%d",pi,pd);
     756:	c5 ef       	ldi	r28, 0xF5	; 245
     758:	d1 e0       	ldi	r29, 0x01	; 1
	stdout = stdin = &uart_str;
    uartInit();
	begin(ULTRAHIGHRES);
    while (1) 
    {
		temp = readTemperature();
     75a:	0e 94 d6 02 	call	0x5ac	; 0x5ac <readTemperature>
     75e:	4b 01       	movw	r8, r22
     760:	5c 01       	movw	r10, r24
		pi = temp;
     762:	0e 94 b7 04 	call	0x96e	; 0x96e <__fixsfsi>
     766:	6b 01       	movw	r12, r22
     768:	7c 01       	movw	r14, r24
		pd = (temp - pi)*10;
		printf("\n%d.%d",pi,pd);
     76a:	07 2e       	mov	r0, r23
     76c:	00 0c       	add	r0, r0
     76e:	88 0b       	sbc	r24, r24
     770:	99 0b       	sbc	r25, r25
     772:	0e 94 ef 04 	call	0x9de	; 0x9de <__floatsisf>
     776:	9b 01       	movw	r18, r22
     778:	ac 01       	movw	r20, r24
     77a:	c5 01       	movw	r24, r10
     77c:	b4 01       	movw	r22, r8
     77e:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <__subsf3>
     782:	20 e0       	ldi	r18, 0x00	; 0
     784:	30 e0       	ldi	r19, 0x00	; 0
     786:	40 e2       	ldi	r20, 0x20	; 32
     788:	51 e4       	ldi	r21, 0x41	; 65
     78a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__mulsf3>
     78e:	0e 94 b7 04 	call	0x96e	; 0x96e <__fixsfsi>
     792:	7f 93       	push	r23
     794:	6f 93       	push	r22
     796:	df 92       	push	r13
     798:	cf 92       	push	r12
     79a:	df 93       	push	r29
     79c:	cf 93       	push	r28
     79e:	0e 94 43 06 	call	0xc86	; 0xc86 <printf>
     7a2:	0f 90       	pop	r0
     7a4:	0f 90       	pop	r0
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	d5 cf       	rjmp	.-86     	; 0x75a <main+0x1e>

000007b0 <__subsf3>:
     7b0:	50 58       	subi	r21, 0x80	; 128

000007b2 <__addsf3>:
     7b2:	bb 27       	eor	r27, r27
     7b4:	aa 27       	eor	r26, r26
     7b6:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__addsf3x>
     7ba:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__fp_round>
     7be:	0e 94 33 05 	call	0xa66	; 0xa66 <__fp_pscA>
     7c2:	38 f0       	brcs	.+14     	; 0x7d2 <__addsf3+0x20>
     7c4:	0e 94 3a 05 	call	0xa74	; 0xa74 <__fp_pscB>
     7c8:	20 f0       	brcs	.+8      	; 0x7d2 <__addsf3+0x20>
     7ca:	39 f4       	brne	.+14     	; 0x7da <__addsf3+0x28>
     7cc:	9f 3f       	cpi	r25, 0xFF	; 255
     7ce:	19 f4       	brne	.+6      	; 0x7d6 <__addsf3+0x24>
     7d0:	26 f4       	brtc	.+8      	; 0x7da <__addsf3+0x28>
     7d2:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_nan>
     7d6:	0e f4       	brtc	.+2      	; 0x7da <__addsf3+0x28>
     7d8:	e0 95       	com	r30
     7da:	e7 fb       	bst	r30, 7
     7dc:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_inf>

000007e0 <__addsf3x>:
     7e0:	e9 2f       	mov	r30, r25
     7e2:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__fp_split3>
     7e6:	58 f3       	brcs	.-42     	; 0x7be <__addsf3+0xc>
     7e8:	ba 17       	cp	r27, r26
     7ea:	62 07       	cpc	r22, r18
     7ec:	73 07       	cpc	r23, r19
     7ee:	84 07       	cpc	r24, r20
     7f0:	95 07       	cpc	r25, r21
     7f2:	20 f0       	brcs	.+8      	; 0x7fc <__addsf3x+0x1c>
     7f4:	79 f4       	brne	.+30     	; 0x814 <__addsf3x+0x34>
     7f6:	a6 f5       	brtc	.+104    	; 0x860 <__addsf3x+0x80>
     7f8:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__fp_zero>
     7fc:	0e f4       	brtc	.+2      	; 0x800 <__addsf3x+0x20>
     7fe:	e0 95       	com	r30
     800:	0b 2e       	mov	r0, r27
     802:	ba 2f       	mov	r27, r26
     804:	a0 2d       	mov	r26, r0
     806:	0b 01       	movw	r0, r22
     808:	b9 01       	movw	r22, r18
     80a:	90 01       	movw	r18, r0
     80c:	0c 01       	movw	r0, r24
     80e:	ca 01       	movw	r24, r20
     810:	a0 01       	movw	r20, r0
     812:	11 24       	eor	r1, r1
     814:	ff 27       	eor	r31, r31
     816:	59 1b       	sub	r21, r25
     818:	99 f0       	breq	.+38     	; 0x840 <__addsf3x+0x60>
     81a:	59 3f       	cpi	r21, 0xF9	; 249
     81c:	50 f4       	brcc	.+20     	; 0x832 <__addsf3x+0x52>
     81e:	50 3e       	cpi	r21, 0xE0	; 224
     820:	68 f1       	brcs	.+90     	; 0x87c <__addsf3x+0x9c>
     822:	1a 16       	cp	r1, r26
     824:	f0 40       	sbci	r31, 0x00	; 0
     826:	a2 2f       	mov	r26, r18
     828:	23 2f       	mov	r18, r19
     82a:	34 2f       	mov	r19, r20
     82c:	44 27       	eor	r20, r20
     82e:	58 5f       	subi	r21, 0xF8	; 248
     830:	f3 cf       	rjmp	.-26     	; 0x818 <__addsf3x+0x38>
     832:	46 95       	lsr	r20
     834:	37 95       	ror	r19
     836:	27 95       	ror	r18
     838:	a7 95       	ror	r26
     83a:	f0 40       	sbci	r31, 0x00	; 0
     83c:	53 95       	inc	r21
     83e:	c9 f7       	brne	.-14     	; 0x832 <__addsf3x+0x52>
     840:	7e f4       	brtc	.+30     	; 0x860 <__addsf3x+0x80>
     842:	1f 16       	cp	r1, r31
     844:	ba 0b       	sbc	r27, r26
     846:	62 0b       	sbc	r22, r18
     848:	73 0b       	sbc	r23, r19
     84a:	84 0b       	sbc	r24, r20
     84c:	ba f0       	brmi	.+46     	; 0x87c <__addsf3x+0x9c>
     84e:	91 50       	subi	r25, 0x01	; 1
     850:	a1 f0       	breq	.+40     	; 0x87a <__addsf3x+0x9a>
     852:	ff 0f       	add	r31, r31
     854:	bb 1f       	adc	r27, r27
     856:	66 1f       	adc	r22, r22
     858:	77 1f       	adc	r23, r23
     85a:	88 1f       	adc	r24, r24
     85c:	c2 f7       	brpl	.-16     	; 0x84e <__addsf3x+0x6e>
     85e:	0e c0       	rjmp	.+28     	; 0x87c <__addsf3x+0x9c>
     860:	ba 0f       	add	r27, r26
     862:	62 1f       	adc	r22, r18
     864:	73 1f       	adc	r23, r19
     866:	84 1f       	adc	r24, r20
     868:	48 f4       	brcc	.+18     	; 0x87c <__addsf3x+0x9c>
     86a:	87 95       	ror	r24
     86c:	77 95       	ror	r23
     86e:	67 95       	ror	r22
     870:	b7 95       	ror	r27
     872:	f7 95       	ror	r31
     874:	9e 3f       	cpi	r25, 0xFE	; 254
     876:	08 f0       	brcs	.+2      	; 0x87a <__addsf3x+0x9a>
     878:	b0 cf       	rjmp	.-160    	; 0x7da <__addsf3+0x28>
     87a:	93 95       	inc	r25
     87c:	88 0f       	add	r24, r24
     87e:	08 f0       	brcs	.+2      	; 0x882 <__addsf3x+0xa2>
     880:	99 27       	eor	r25, r25
     882:	ee 0f       	add	r30, r30
     884:	97 95       	ror	r25
     886:	87 95       	ror	r24
     888:	08 95       	ret

0000088a <__divsf3>:
     88a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <__divsf3x>
     88e:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__fp_round>
     892:	0e 94 3a 05 	call	0xa74	; 0xa74 <__fp_pscB>
     896:	58 f0       	brcs	.+22     	; 0x8ae <__divsf3+0x24>
     898:	0e 94 33 05 	call	0xa66	; 0xa66 <__fp_pscA>
     89c:	40 f0       	brcs	.+16     	; 0x8ae <__divsf3+0x24>
     89e:	29 f4       	brne	.+10     	; 0x8aa <__divsf3+0x20>
     8a0:	5f 3f       	cpi	r21, 0xFF	; 255
     8a2:	29 f0       	breq	.+10     	; 0x8ae <__divsf3+0x24>
     8a4:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_inf>
     8a8:	51 11       	cpse	r21, r1
     8aa:	0c 94 75 05 	jmp	0xaea	; 0xaea <__fp_szero>
     8ae:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_nan>

000008b2 <__divsf3x>:
     8b2:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__fp_split3>
     8b6:	68 f3       	brcs	.-38     	; 0x892 <__divsf3+0x8>

000008b8 <__divsf3_pse>:
     8b8:	99 23       	and	r25, r25
     8ba:	b1 f3       	breq	.-20     	; 0x8a8 <__divsf3+0x1e>
     8bc:	55 23       	and	r21, r21
     8be:	91 f3       	breq	.-28     	; 0x8a4 <__divsf3+0x1a>
     8c0:	95 1b       	sub	r25, r21
     8c2:	55 0b       	sbc	r21, r21
     8c4:	bb 27       	eor	r27, r27
     8c6:	aa 27       	eor	r26, r26
     8c8:	62 17       	cp	r22, r18
     8ca:	73 07       	cpc	r23, r19
     8cc:	84 07       	cpc	r24, r20
     8ce:	38 f0       	brcs	.+14     	; 0x8de <__divsf3_pse+0x26>
     8d0:	9f 5f       	subi	r25, 0xFF	; 255
     8d2:	5f 4f       	sbci	r21, 0xFF	; 255
     8d4:	22 0f       	add	r18, r18
     8d6:	33 1f       	adc	r19, r19
     8d8:	44 1f       	adc	r20, r20
     8da:	aa 1f       	adc	r26, r26
     8dc:	a9 f3       	breq	.-22     	; 0x8c8 <__divsf3_pse+0x10>
     8de:	35 d0       	rcall	.+106    	; 0x94a <__stack+0x4b>
     8e0:	0e 2e       	mov	r0, r30
     8e2:	3a f0       	brmi	.+14     	; 0x8f2 <__divsf3_pse+0x3a>
     8e4:	e0 e8       	ldi	r30, 0x80	; 128
     8e6:	32 d0       	rcall	.+100    	; 0x94c <__stack+0x4d>
     8e8:	91 50       	subi	r25, 0x01	; 1
     8ea:	50 40       	sbci	r21, 0x00	; 0
     8ec:	e6 95       	lsr	r30
     8ee:	00 1c       	adc	r0, r0
     8f0:	ca f7       	brpl	.-14     	; 0x8e4 <__divsf3_pse+0x2c>
     8f2:	2b d0       	rcall	.+86     	; 0x94a <__stack+0x4b>
     8f4:	fe 2f       	mov	r31, r30
     8f6:	29 d0       	rcall	.+82     	; 0x94a <__stack+0x4b>
     8f8:	66 0f       	add	r22, r22
     8fa:	77 1f       	adc	r23, r23
     8fc:	88 1f       	adc	r24, r24
     8fe:	bb 1f       	adc	r27, r27
     900:	26 17       	cp	r18, r22
     902:	37 07       	cpc	r19, r23
     904:	48 07       	cpc	r20, r24
     906:	ab 07       	cpc	r26, r27
     908:	b0 e8       	ldi	r27, 0x80	; 128
     90a:	09 f0       	breq	.+2      	; 0x90e <__stack+0xf>
     90c:	bb 0b       	sbc	r27, r27
     90e:	80 2d       	mov	r24, r0
     910:	bf 01       	movw	r22, r30
     912:	ff 27       	eor	r31, r31
     914:	93 58       	subi	r25, 0x83	; 131
     916:	5f 4f       	sbci	r21, 0xFF	; 255
     918:	3a f0       	brmi	.+14     	; 0x928 <__stack+0x29>
     91a:	9e 3f       	cpi	r25, 0xFE	; 254
     91c:	51 05       	cpc	r21, r1
     91e:	78 f0       	brcs	.+30     	; 0x93e <__stack+0x3f>
     920:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_inf>
     924:	0c 94 75 05 	jmp	0xaea	; 0xaea <__fp_szero>
     928:	5f 3f       	cpi	r21, 0xFF	; 255
     92a:	e4 f3       	brlt	.-8      	; 0x924 <__stack+0x25>
     92c:	98 3e       	cpi	r25, 0xE8	; 232
     92e:	d4 f3       	brlt	.-12     	; 0x924 <__stack+0x25>
     930:	86 95       	lsr	r24
     932:	77 95       	ror	r23
     934:	67 95       	ror	r22
     936:	b7 95       	ror	r27
     938:	f7 95       	ror	r31
     93a:	9f 5f       	subi	r25, 0xFF	; 255
     93c:	c9 f7       	brne	.-14     	; 0x930 <__stack+0x31>
     93e:	88 0f       	add	r24, r24
     940:	91 1d       	adc	r25, r1
     942:	96 95       	lsr	r25
     944:	87 95       	ror	r24
     946:	97 f9       	bld	r25, 7
     948:	08 95       	ret
     94a:	e1 e0       	ldi	r30, 0x01	; 1
     94c:	66 0f       	add	r22, r22
     94e:	77 1f       	adc	r23, r23
     950:	88 1f       	adc	r24, r24
     952:	bb 1f       	adc	r27, r27
     954:	62 17       	cp	r22, r18
     956:	73 07       	cpc	r23, r19
     958:	84 07       	cpc	r24, r20
     95a:	ba 07       	cpc	r27, r26
     95c:	20 f0       	brcs	.+8      	; 0x966 <__stack+0x67>
     95e:	62 1b       	sub	r22, r18
     960:	73 0b       	sbc	r23, r19
     962:	84 0b       	sbc	r24, r20
     964:	ba 0b       	sbc	r27, r26
     966:	ee 1f       	adc	r30, r30
     968:	88 f7       	brcc	.-30     	; 0x94c <__stack+0x4d>
     96a:	e0 95       	com	r30
     96c:	08 95       	ret

0000096e <__fixsfsi>:
     96e:	0e 94 be 04 	call	0x97c	; 0x97c <__fixunssfsi>
     972:	68 94       	set
     974:	b1 11       	cpse	r27, r1
     976:	0c 94 75 05 	jmp	0xaea	; 0xaea <__fp_szero>
     97a:	08 95       	ret

0000097c <__fixunssfsi>:
     97c:	0e 94 5a 05 	call	0xab4	; 0xab4 <__fp_splitA>
     980:	88 f0       	brcs	.+34     	; 0x9a4 <__fixunssfsi+0x28>
     982:	9f 57       	subi	r25, 0x7F	; 127
     984:	98 f0       	brcs	.+38     	; 0x9ac <__fixunssfsi+0x30>
     986:	b9 2f       	mov	r27, r25
     988:	99 27       	eor	r25, r25
     98a:	b7 51       	subi	r27, 0x17	; 23
     98c:	b0 f0       	brcs	.+44     	; 0x9ba <__fixunssfsi+0x3e>
     98e:	e1 f0       	breq	.+56     	; 0x9c8 <__fixunssfsi+0x4c>
     990:	66 0f       	add	r22, r22
     992:	77 1f       	adc	r23, r23
     994:	88 1f       	adc	r24, r24
     996:	99 1f       	adc	r25, r25
     998:	1a f0       	brmi	.+6      	; 0x9a0 <__fixunssfsi+0x24>
     99a:	ba 95       	dec	r27
     99c:	c9 f7       	brne	.-14     	; 0x990 <__fixunssfsi+0x14>
     99e:	14 c0       	rjmp	.+40     	; 0x9c8 <__fixunssfsi+0x4c>
     9a0:	b1 30       	cpi	r27, 0x01	; 1
     9a2:	91 f0       	breq	.+36     	; 0x9c8 <__fixunssfsi+0x4c>
     9a4:	0e 94 74 05 	call	0xae8	; 0xae8 <__fp_zero>
     9a8:	b1 e0       	ldi	r27, 0x01	; 1
     9aa:	08 95       	ret
     9ac:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__fp_zero>
     9b0:	67 2f       	mov	r22, r23
     9b2:	78 2f       	mov	r23, r24
     9b4:	88 27       	eor	r24, r24
     9b6:	b8 5f       	subi	r27, 0xF8	; 248
     9b8:	39 f0       	breq	.+14     	; 0x9c8 <__fixunssfsi+0x4c>
     9ba:	b9 3f       	cpi	r27, 0xF9	; 249
     9bc:	cc f3       	brlt	.-14     	; 0x9b0 <__fixunssfsi+0x34>
     9be:	86 95       	lsr	r24
     9c0:	77 95       	ror	r23
     9c2:	67 95       	ror	r22
     9c4:	b3 95       	inc	r27
     9c6:	d9 f7       	brne	.-10     	; 0x9be <__fixunssfsi+0x42>
     9c8:	3e f4       	brtc	.+14     	; 0x9d8 <__fixunssfsi+0x5c>
     9ca:	90 95       	com	r25
     9cc:	80 95       	com	r24
     9ce:	70 95       	com	r23
     9d0:	61 95       	neg	r22
     9d2:	7f 4f       	sbci	r23, 0xFF	; 255
     9d4:	8f 4f       	sbci	r24, 0xFF	; 255
     9d6:	9f 4f       	sbci	r25, 0xFF	; 255
     9d8:	08 95       	ret

000009da <__floatunsisf>:
     9da:	e8 94       	clt
     9dc:	09 c0       	rjmp	.+18     	; 0x9f0 <__floatsisf+0x12>

000009de <__floatsisf>:
     9de:	97 fb       	bst	r25, 7
     9e0:	3e f4       	brtc	.+14     	; 0x9f0 <__floatsisf+0x12>
     9e2:	90 95       	com	r25
     9e4:	80 95       	com	r24
     9e6:	70 95       	com	r23
     9e8:	61 95       	neg	r22
     9ea:	7f 4f       	sbci	r23, 0xFF	; 255
     9ec:	8f 4f       	sbci	r24, 0xFF	; 255
     9ee:	9f 4f       	sbci	r25, 0xFF	; 255
     9f0:	99 23       	and	r25, r25
     9f2:	a9 f0       	breq	.+42     	; 0xa1e <__floatsisf+0x40>
     9f4:	f9 2f       	mov	r31, r25
     9f6:	96 e9       	ldi	r25, 0x96	; 150
     9f8:	bb 27       	eor	r27, r27
     9fa:	93 95       	inc	r25
     9fc:	f6 95       	lsr	r31
     9fe:	87 95       	ror	r24
     a00:	77 95       	ror	r23
     a02:	67 95       	ror	r22
     a04:	b7 95       	ror	r27
     a06:	f1 11       	cpse	r31, r1
     a08:	f8 cf       	rjmp	.-16     	; 0x9fa <__floatsisf+0x1c>
     a0a:	fa f4       	brpl	.+62     	; 0xa4a <__floatsisf+0x6c>
     a0c:	bb 0f       	add	r27, r27
     a0e:	11 f4       	brne	.+4      	; 0xa14 <__floatsisf+0x36>
     a10:	60 ff       	sbrs	r22, 0
     a12:	1b c0       	rjmp	.+54     	; 0xa4a <__floatsisf+0x6c>
     a14:	6f 5f       	subi	r22, 0xFF	; 255
     a16:	7f 4f       	sbci	r23, 0xFF	; 255
     a18:	8f 4f       	sbci	r24, 0xFF	; 255
     a1a:	9f 4f       	sbci	r25, 0xFF	; 255
     a1c:	16 c0       	rjmp	.+44     	; 0xa4a <__floatsisf+0x6c>
     a1e:	88 23       	and	r24, r24
     a20:	11 f0       	breq	.+4      	; 0xa26 <__floatsisf+0x48>
     a22:	96 e9       	ldi	r25, 0x96	; 150
     a24:	11 c0       	rjmp	.+34     	; 0xa48 <__floatsisf+0x6a>
     a26:	77 23       	and	r23, r23
     a28:	21 f0       	breq	.+8      	; 0xa32 <__floatsisf+0x54>
     a2a:	9e e8       	ldi	r25, 0x8E	; 142
     a2c:	87 2f       	mov	r24, r23
     a2e:	76 2f       	mov	r23, r22
     a30:	05 c0       	rjmp	.+10     	; 0xa3c <__floatsisf+0x5e>
     a32:	66 23       	and	r22, r22
     a34:	71 f0       	breq	.+28     	; 0xa52 <__floatsisf+0x74>
     a36:	96 e8       	ldi	r25, 0x86	; 134
     a38:	86 2f       	mov	r24, r22
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	60 e0       	ldi	r22, 0x00	; 0
     a3e:	2a f0       	brmi	.+10     	; 0xa4a <__floatsisf+0x6c>
     a40:	9a 95       	dec	r25
     a42:	66 0f       	add	r22, r22
     a44:	77 1f       	adc	r23, r23
     a46:	88 1f       	adc	r24, r24
     a48:	da f7       	brpl	.-10     	; 0xa40 <__floatsisf+0x62>
     a4a:	88 0f       	add	r24, r24
     a4c:	96 95       	lsr	r25
     a4e:	87 95       	ror	r24
     a50:	97 f9       	bld	r25, 7
     a52:	08 95       	ret

00000a54 <__fp_inf>:
     a54:	97 f9       	bld	r25, 7
     a56:	9f 67       	ori	r25, 0x7F	; 127
     a58:	80 e8       	ldi	r24, 0x80	; 128
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	60 e0       	ldi	r22, 0x00	; 0
     a5e:	08 95       	ret

00000a60 <__fp_nan>:
     a60:	9f ef       	ldi	r25, 0xFF	; 255
     a62:	80 ec       	ldi	r24, 0xC0	; 192
     a64:	08 95       	ret

00000a66 <__fp_pscA>:
     a66:	00 24       	eor	r0, r0
     a68:	0a 94       	dec	r0
     a6a:	16 16       	cp	r1, r22
     a6c:	17 06       	cpc	r1, r23
     a6e:	18 06       	cpc	r1, r24
     a70:	09 06       	cpc	r0, r25
     a72:	08 95       	ret

00000a74 <__fp_pscB>:
     a74:	00 24       	eor	r0, r0
     a76:	0a 94       	dec	r0
     a78:	12 16       	cp	r1, r18
     a7a:	13 06       	cpc	r1, r19
     a7c:	14 06       	cpc	r1, r20
     a7e:	05 06       	cpc	r0, r21
     a80:	08 95       	ret

00000a82 <__fp_round>:
     a82:	09 2e       	mov	r0, r25
     a84:	03 94       	inc	r0
     a86:	00 0c       	add	r0, r0
     a88:	11 f4       	brne	.+4      	; 0xa8e <__fp_round+0xc>
     a8a:	88 23       	and	r24, r24
     a8c:	52 f0       	brmi	.+20     	; 0xaa2 <__fp_round+0x20>
     a8e:	bb 0f       	add	r27, r27
     a90:	40 f4       	brcc	.+16     	; 0xaa2 <__fp_round+0x20>
     a92:	bf 2b       	or	r27, r31
     a94:	11 f4       	brne	.+4      	; 0xa9a <__fp_round+0x18>
     a96:	60 ff       	sbrs	r22, 0
     a98:	04 c0       	rjmp	.+8      	; 0xaa2 <__fp_round+0x20>
     a9a:	6f 5f       	subi	r22, 0xFF	; 255
     a9c:	7f 4f       	sbci	r23, 0xFF	; 255
     a9e:	8f 4f       	sbci	r24, 0xFF	; 255
     aa0:	9f 4f       	sbci	r25, 0xFF	; 255
     aa2:	08 95       	ret

00000aa4 <__fp_split3>:
     aa4:	57 fd       	sbrc	r21, 7
     aa6:	90 58       	subi	r25, 0x80	; 128
     aa8:	44 0f       	add	r20, r20
     aaa:	55 1f       	adc	r21, r21
     aac:	59 f0       	breq	.+22     	; 0xac4 <__fp_splitA+0x10>
     aae:	5f 3f       	cpi	r21, 0xFF	; 255
     ab0:	71 f0       	breq	.+28     	; 0xace <__fp_splitA+0x1a>
     ab2:	47 95       	ror	r20

00000ab4 <__fp_splitA>:
     ab4:	88 0f       	add	r24, r24
     ab6:	97 fb       	bst	r25, 7
     ab8:	99 1f       	adc	r25, r25
     aba:	61 f0       	breq	.+24     	; 0xad4 <__fp_splitA+0x20>
     abc:	9f 3f       	cpi	r25, 0xFF	; 255
     abe:	79 f0       	breq	.+30     	; 0xade <__fp_splitA+0x2a>
     ac0:	87 95       	ror	r24
     ac2:	08 95       	ret
     ac4:	12 16       	cp	r1, r18
     ac6:	13 06       	cpc	r1, r19
     ac8:	14 06       	cpc	r1, r20
     aca:	55 1f       	adc	r21, r21
     acc:	f2 cf       	rjmp	.-28     	; 0xab2 <__fp_split3+0xe>
     ace:	46 95       	lsr	r20
     ad0:	f1 df       	rcall	.-30     	; 0xab4 <__fp_splitA>
     ad2:	08 c0       	rjmp	.+16     	; 0xae4 <__fp_splitA+0x30>
     ad4:	16 16       	cp	r1, r22
     ad6:	17 06       	cpc	r1, r23
     ad8:	18 06       	cpc	r1, r24
     ada:	99 1f       	adc	r25, r25
     adc:	f1 cf       	rjmp	.-30     	; 0xac0 <__fp_splitA+0xc>
     ade:	86 95       	lsr	r24
     ae0:	71 05       	cpc	r23, r1
     ae2:	61 05       	cpc	r22, r1
     ae4:	08 94       	sec
     ae6:	08 95       	ret

00000ae8 <__fp_zero>:
     ae8:	e8 94       	clt

00000aea <__fp_szero>:
     aea:	bb 27       	eor	r27, r27
     aec:	66 27       	eor	r22, r22
     aee:	77 27       	eor	r23, r23
     af0:	cb 01       	movw	r24, r22
     af2:	97 f9       	bld	r25, 7
     af4:	08 95       	ret

00000af6 <__mulsf3>:
     af6:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__mulsf3x>
     afa:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__fp_round>
     afe:	0e 94 33 05 	call	0xa66	; 0xa66 <__fp_pscA>
     b02:	38 f0       	brcs	.+14     	; 0xb12 <__mulsf3+0x1c>
     b04:	0e 94 3a 05 	call	0xa74	; 0xa74 <__fp_pscB>
     b08:	20 f0       	brcs	.+8      	; 0xb12 <__mulsf3+0x1c>
     b0a:	95 23       	and	r25, r21
     b0c:	11 f0       	breq	.+4      	; 0xb12 <__mulsf3+0x1c>
     b0e:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_inf>
     b12:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_nan>
     b16:	11 24       	eor	r1, r1
     b18:	0c 94 75 05 	jmp	0xaea	; 0xaea <__fp_szero>

00000b1c <__mulsf3x>:
     b1c:	0e 94 52 05 	call	0xaa4	; 0xaa4 <__fp_split3>
     b20:	70 f3       	brcs	.-36     	; 0xafe <__mulsf3+0x8>

00000b22 <__mulsf3_pse>:
     b22:	95 9f       	mul	r25, r21
     b24:	c1 f3       	breq	.-16     	; 0xb16 <__mulsf3+0x20>
     b26:	95 0f       	add	r25, r21
     b28:	50 e0       	ldi	r21, 0x00	; 0
     b2a:	55 1f       	adc	r21, r21
     b2c:	62 9f       	mul	r22, r18
     b2e:	f0 01       	movw	r30, r0
     b30:	72 9f       	mul	r23, r18
     b32:	bb 27       	eor	r27, r27
     b34:	f0 0d       	add	r31, r0
     b36:	b1 1d       	adc	r27, r1
     b38:	63 9f       	mul	r22, r19
     b3a:	aa 27       	eor	r26, r26
     b3c:	f0 0d       	add	r31, r0
     b3e:	b1 1d       	adc	r27, r1
     b40:	aa 1f       	adc	r26, r26
     b42:	64 9f       	mul	r22, r20
     b44:	66 27       	eor	r22, r22
     b46:	b0 0d       	add	r27, r0
     b48:	a1 1d       	adc	r26, r1
     b4a:	66 1f       	adc	r22, r22
     b4c:	82 9f       	mul	r24, r18
     b4e:	22 27       	eor	r18, r18
     b50:	b0 0d       	add	r27, r0
     b52:	a1 1d       	adc	r26, r1
     b54:	62 1f       	adc	r22, r18
     b56:	73 9f       	mul	r23, r19
     b58:	b0 0d       	add	r27, r0
     b5a:	a1 1d       	adc	r26, r1
     b5c:	62 1f       	adc	r22, r18
     b5e:	83 9f       	mul	r24, r19
     b60:	a0 0d       	add	r26, r0
     b62:	61 1d       	adc	r22, r1
     b64:	22 1f       	adc	r18, r18
     b66:	74 9f       	mul	r23, r20
     b68:	33 27       	eor	r19, r19
     b6a:	a0 0d       	add	r26, r0
     b6c:	61 1d       	adc	r22, r1
     b6e:	23 1f       	adc	r18, r19
     b70:	84 9f       	mul	r24, r20
     b72:	60 0d       	add	r22, r0
     b74:	21 1d       	adc	r18, r1
     b76:	82 2f       	mov	r24, r18
     b78:	76 2f       	mov	r23, r22
     b7a:	6a 2f       	mov	r22, r26
     b7c:	11 24       	eor	r1, r1
     b7e:	9f 57       	subi	r25, 0x7F	; 127
     b80:	50 40       	sbci	r21, 0x00	; 0
     b82:	9a f0       	brmi	.+38     	; 0xbaa <__mulsf3_pse+0x88>
     b84:	f1 f0       	breq	.+60     	; 0xbc2 <__mulsf3_pse+0xa0>
     b86:	88 23       	and	r24, r24
     b88:	4a f0       	brmi	.+18     	; 0xb9c <__mulsf3_pse+0x7a>
     b8a:	ee 0f       	add	r30, r30
     b8c:	ff 1f       	adc	r31, r31
     b8e:	bb 1f       	adc	r27, r27
     b90:	66 1f       	adc	r22, r22
     b92:	77 1f       	adc	r23, r23
     b94:	88 1f       	adc	r24, r24
     b96:	91 50       	subi	r25, 0x01	; 1
     b98:	50 40       	sbci	r21, 0x00	; 0
     b9a:	a9 f7       	brne	.-22     	; 0xb86 <__mulsf3_pse+0x64>
     b9c:	9e 3f       	cpi	r25, 0xFE	; 254
     b9e:	51 05       	cpc	r21, r1
     ba0:	80 f0       	brcs	.+32     	; 0xbc2 <__mulsf3_pse+0xa0>
     ba2:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_inf>
     ba6:	0c 94 75 05 	jmp	0xaea	; 0xaea <__fp_szero>
     baa:	5f 3f       	cpi	r21, 0xFF	; 255
     bac:	e4 f3       	brlt	.-8      	; 0xba6 <__mulsf3_pse+0x84>
     bae:	98 3e       	cpi	r25, 0xE8	; 232
     bb0:	d4 f3       	brlt	.-12     	; 0xba6 <__mulsf3_pse+0x84>
     bb2:	86 95       	lsr	r24
     bb4:	77 95       	ror	r23
     bb6:	67 95       	ror	r22
     bb8:	b7 95       	ror	r27
     bba:	f7 95       	ror	r31
     bbc:	e7 95       	ror	r30
     bbe:	9f 5f       	subi	r25, 0xFF	; 255
     bc0:	c1 f7       	brne	.-16     	; 0xbb2 <__mulsf3_pse+0x90>
     bc2:	fe 2b       	or	r31, r30
     bc4:	88 0f       	add	r24, r24
     bc6:	91 1d       	adc	r25, r1
     bc8:	96 95       	lsr	r25
     bca:	87 95       	ror	r24
     bcc:	97 f9       	bld	r25, 7
     bce:	08 95       	ret

00000bd0 <__divmodsi4>:
     bd0:	05 2e       	mov	r0, r21
     bd2:	97 fb       	bst	r25, 7
     bd4:	1e f4       	brtc	.+6      	; 0xbdc <__divmodsi4+0xc>
     bd6:	00 94       	com	r0
     bd8:	0e 94 ff 05 	call	0xbfe	; 0xbfe <__negsi2>
     bdc:	57 fd       	sbrc	r21, 7
     bde:	07 d0       	rcall	.+14     	; 0xbee <__divmodsi4_neg2>
     be0:	0e 94 12 06 	call	0xc24	; 0xc24 <__udivmodsi4>
     be4:	07 fc       	sbrc	r0, 7
     be6:	03 d0       	rcall	.+6      	; 0xbee <__divmodsi4_neg2>
     be8:	4e f4       	brtc	.+18     	; 0xbfc <__divmodsi4_exit>
     bea:	0c 94 ff 05 	jmp	0xbfe	; 0xbfe <__negsi2>

00000bee <__divmodsi4_neg2>:
     bee:	50 95       	com	r21
     bf0:	40 95       	com	r20
     bf2:	30 95       	com	r19
     bf4:	21 95       	neg	r18
     bf6:	3f 4f       	sbci	r19, 0xFF	; 255
     bf8:	4f 4f       	sbci	r20, 0xFF	; 255
     bfa:	5f 4f       	sbci	r21, 0xFF	; 255

00000bfc <__divmodsi4_exit>:
     bfc:	08 95       	ret

00000bfe <__negsi2>:
     bfe:	90 95       	com	r25
     c00:	80 95       	com	r24
     c02:	70 95       	com	r23
     c04:	61 95       	neg	r22
     c06:	7f 4f       	sbci	r23, 0xFF	; 255
     c08:	8f 4f       	sbci	r24, 0xFF	; 255
     c0a:	9f 4f       	sbci	r25, 0xFF	; 255
     c0c:	08 95       	ret

00000c0e <__muluhisi3>:
     c0e:	0e 94 34 06 	call	0xc68	; 0xc68 <__umulhisi3>
     c12:	a5 9f       	mul	r26, r21
     c14:	90 0d       	add	r25, r0
     c16:	b4 9f       	mul	r27, r20
     c18:	90 0d       	add	r25, r0
     c1a:	a4 9f       	mul	r26, r20
     c1c:	80 0d       	add	r24, r0
     c1e:	91 1d       	adc	r25, r1
     c20:	11 24       	eor	r1, r1
     c22:	08 95       	ret

00000c24 <__udivmodsi4>:
     c24:	a1 e2       	ldi	r26, 0x21	; 33
     c26:	1a 2e       	mov	r1, r26
     c28:	aa 1b       	sub	r26, r26
     c2a:	bb 1b       	sub	r27, r27
     c2c:	fd 01       	movw	r30, r26
     c2e:	0d c0       	rjmp	.+26     	; 0xc4a <__udivmodsi4_ep>

00000c30 <__udivmodsi4_loop>:
     c30:	aa 1f       	adc	r26, r26
     c32:	bb 1f       	adc	r27, r27
     c34:	ee 1f       	adc	r30, r30
     c36:	ff 1f       	adc	r31, r31
     c38:	a2 17       	cp	r26, r18
     c3a:	b3 07       	cpc	r27, r19
     c3c:	e4 07       	cpc	r30, r20
     c3e:	f5 07       	cpc	r31, r21
     c40:	20 f0       	brcs	.+8      	; 0xc4a <__udivmodsi4_ep>
     c42:	a2 1b       	sub	r26, r18
     c44:	b3 0b       	sbc	r27, r19
     c46:	e4 0b       	sbc	r30, r20
     c48:	f5 0b       	sbc	r31, r21

00000c4a <__udivmodsi4_ep>:
     c4a:	66 1f       	adc	r22, r22
     c4c:	77 1f       	adc	r23, r23
     c4e:	88 1f       	adc	r24, r24
     c50:	99 1f       	adc	r25, r25
     c52:	1a 94       	dec	r1
     c54:	69 f7       	brne	.-38     	; 0xc30 <__udivmodsi4_loop>
     c56:	60 95       	com	r22
     c58:	70 95       	com	r23
     c5a:	80 95       	com	r24
     c5c:	90 95       	com	r25
     c5e:	9b 01       	movw	r18, r22
     c60:	ac 01       	movw	r20, r24
     c62:	bd 01       	movw	r22, r26
     c64:	cf 01       	movw	r24, r30
     c66:	08 95       	ret

00000c68 <__umulhisi3>:
     c68:	a2 9f       	mul	r26, r18
     c6a:	b0 01       	movw	r22, r0
     c6c:	b3 9f       	mul	r27, r19
     c6e:	c0 01       	movw	r24, r0
     c70:	a3 9f       	mul	r26, r19
     c72:	70 0d       	add	r23, r0
     c74:	81 1d       	adc	r24, r1
     c76:	11 24       	eor	r1, r1
     c78:	91 1d       	adc	r25, r1
     c7a:	b2 9f       	mul	r27, r18
     c7c:	70 0d       	add	r23, r0
     c7e:	81 1d       	adc	r24, r1
     c80:	11 24       	eor	r1, r1
     c82:	91 1d       	adc	r25, r1
     c84:	08 95       	ret

00000c86 <printf>:
     c86:	a0 e0       	ldi	r26, 0x00	; 0
     c88:	b0 e0       	ldi	r27, 0x00	; 0
     c8a:	e9 e4       	ldi	r30, 0x49	; 73
     c8c:	f6 e0       	ldi	r31, 0x06	; 6
     c8e:	0c 94 2a 09 	jmp	0x1254	; 0x1254 <__prologue_saves__+0x20>
     c92:	ae 01       	movw	r20, r28
     c94:	4b 5f       	subi	r20, 0xFB	; 251
     c96:	5f 4f       	sbci	r21, 0xFF	; 255
     c98:	fa 01       	movw	r30, r20
     c9a:	61 91       	ld	r22, Z+
     c9c:	71 91       	ld	r23, Z+
     c9e:	af 01       	movw	r20, r30
     ca0:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <__iob+0x2>
     ca4:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <__iob+0x3>
     ca8:	0e 94 89 06 	call	0xd12	; 0xd12 <vfprintf>
     cac:	e2 e0       	ldi	r30, 0x02	; 2
     cae:	0c 94 46 09 	jmp	0x128c	; 0x128c <__epilogue_restores__+0x20>

00000cb2 <puts>:
     cb2:	0f 93       	push	r16
     cb4:	1f 93       	push	r17
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	e0 91 15 02 	lds	r30, 0x0215	; 0x800215 <__iob+0x2>
     cbe:	f0 91 16 02 	lds	r31, 0x0216	; 0x800216 <__iob+0x3>
     cc2:	23 81       	ldd	r18, Z+3	; 0x03
     cc4:	21 ff       	sbrs	r18, 1
     cc6:	1b c0       	rjmp	.+54     	; 0xcfe <puts+0x4c>
     cc8:	8c 01       	movw	r16, r24
     cca:	d0 e0       	ldi	r29, 0x00	; 0
     ccc:	c0 e0       	ldi	r28, 0x00	; 0
     cce:	f8 01       	movw	r30, r16
     cd0:	81 91       	ld	r24, Z+
     cd2:	8f 01       	movw	r16, r30
     cd4:	60 91 15 02 	lds	r22, 0x0215	; 0x800215 <__iob+0x2>
     cd8:	70 91 16 02 	lds	r23, 0x0216	; 0x800216 <__iob+0x3>
     cdc:	db 01       	movw	r26, r22
     cde:	18 96       	adiw	r26, 0x08	; 8
     ce0:	ed 91       	ld	r30, X+
     ce2:	fc 91       	ld	r31, X
     ce4:	19 97       	sbiw	r26, 0x09	; 9
     ce6:	88 23       	and	r24, r24
     ce8:	31 f0       	breq	.+12     	; 0xcf6 <puts+0x44>
     cea:	09 95       	icall
     cec:	89 2b       	or	r24, r25
     cee:	79 f3       	breq	.-34     	; 0xcce <puts+0x1c>
     cf0:	df ef       	ldi	r29, 0xFF	; 255
     cf2:	cf ef       	ldi	r28, 0xFF	; 255
     cf4:	ec cf       	rjmp	.-40     	; 0xcce <puts+0x1c>
     cf6:	8a e0       	ldi	r24, 0x0A	; 10
     cf8:	09 95       	icall
     cfa:	89 2b       	or	r24, r25
     cfc:	19 f0       	breq	.+6      	; 0xd04 <puts+0x52>
     cfe:	8f ef       	ldi	r24, 0xFF	; 255
     d00:	9f ef       	ldi	r25, 0xFF	; 255
     d02:	02 c0       	rjmp	.+4      	; 0xd08 <puts+0x56>
     d04:	8d 2f       	mov	r24, r29
     d06:	9c 2f       	mov	r25, r28
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
     d0c:	1f 91       	pop	r17
     d0e:	0f 91       	pop	r16
     d10:	08 95       	ret

00000d12 <vfprintf>:
     d12:	ab e0       	ldi	r26, 0x0B	; 11
     d14:	b0 e0       	ldi	r27, 0x00	; 0
     d16:	ef e8       	ldi	r30, 0x8F	; 143
     d18:	f6 e0       	ldi	r31, 0x06	; 6
     d1a:	0c 94 1a 09 	jmp	0x1234	; 0x1234 <__prologue_saves__>
     d1e:	6c 01       	movw	r12, r24
     d20:	7b 01       	movw	r14, r22
     d22:	8a 01       	movw	r16, r20
     d24:	fc 01       	movw	r30, r24
     d26:	17 82       	std	Z+7, r1	; 0x07
     d28:	16 82       	std	Z+6, r1	; 0x06
     d2a:	83 81       	ldd	r24, Z+3	; 0x03
     d2c:	81 ff       	sbrs	r24, 1
     d2e:	cc c1       	rjmp	.+920    	; 0x10c8 <vfprintf+0x3b6>
     d30:	ce 01       	movw	r24, r28
     d32:	01 96       	adiw	r24, 0x01	; 1
     d34:	3c 01       	movw	r6, r24
     d36:	f6 01       	movw	r30, r12
     d38:	93 81       	ldd	r25, Z+3	; 0x03
     d3a:	f7 01       	movw	r30, r14
     d3c:	93 fd       	sbrc	r25, 3
     d3e:	85 91       	lpm	r24, Z+
     d40:	93 ff       	sbrs	r25, 3
     d42:	81 91       	ld	r24, Z+
     d44:	7f 01       	movw	r14, r30
     d46:	88 23       	and	r24, r24
     d48:	09 f4       	brne	.+2      	; 0xd4c <vfprintf+0x3a>
     d4a:	ba c1       	rjmp	.+884    	; 0x10c0 <vfprintf+0x3ae>
     d4c:	85 32       	cpi	r24, 0x25	; 37
     d4e:	39 f4       	brne	.+14     	; 0xd5e <vfprintf+0x4c>
     d50:	93 fd       	sbrc	r25, 3
     d52:	85 91       	lpm	r24, Z+
     d54:	93 ff       	sbrs	r25, 3
     d56:	81 91       	ld	r24, Z+
     d58:	7f 01       	movw	r14, r30
     d5a:	85 32       	cpi	r24, 0x25	; 37
     d5c:	29 f4       	brne	.+10     	; 0xd68 <vfprintf+0x56>
     d5e:	b6 01       	movw	r22, r12
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     d66:	e7 cf       	rjmp	.-50     	; 0xd36 <vfprintf+0x24>
     d68:	91 2c       	mov	r9, r1
     d6a:	21 2c       	mov	r2, r1
     d6c:	31 2c       	mov	r3, r1
     d6e:	ff e1       	ldi	r31, 0x1F	; 31
     d70:	f3 15       	cp	r31, r3
     d72:	d8 f0       	brcs	.+54     	; 0xdaa <vfprintf+0x98>
     d74:	8b 32       	cpi	r24, 0x2B	; 43
     d76:	79 f0       	breq	.+30     	; 0xd96 <vfprintf+0x84>
     d78:	38 f4       	brcc	.+14     	; 0xd88 <vfprintf+0x76>
     d7a:	80 32       	cpi	r24, 0x20	; 32
     d7c:	79 f0       	breq	.+30     	; 0xd9c <vfprintf+0x8a>
     d7e:	83 32       	cpi	r24, 0x23	; 35
     d80:	a1 f4       	brne	.+40     	; 0xdaa <vfprintf+0x98>
     d82:	23 2d       	mov	r18, r3
     d84:	20 61       	ori	r18, 0x10	; 16
     d86:	1d c0       	rjmp	.+58     	; 0xdc2 <vfprintf+0xb0>
     d88:	8d 32       	cpi	r24, 0x2D	; 45
     d8a:	61 f0       	breq	.+24     	; 0xda4 <vfprintf+0x92>
     d8c:	80 33       	cpi	r24, 0x30	; 48
     d8e:	69 f4       	brne	.+26     	; 0xdaa <vfprintf+0x98>
     d90:	23 2d       	mov	r18, r3
     d92:	21 60       	ori	r18, 0x01	; 1
     d94:	16 c0       	rjmp	.+44     	; 0xdc2 <vfprintf+0xb0>
     d96:	83 2d       	mov	r24, r3
     d98:	82 60       	ori	r24, 0x02	; 2
     d9a:	38 2e       	mov	r3, r24
     d9c:	e3 2d       	mov	r30, r3
     d9e:	e4 60       	ori	r30, 0x04	; 4
     da0:	3e 2e       	mov	r3, r30
     da2:	2a c0       	rjmp	.+84     	; 0xdf8 <vfprintf+0xe6>
     da4:	f3 2d       	mov	r31, r3
     da6:	f8 60       	ori	r31, 0x08	; 8
     da8:	1d c0       	rjmp	.+58     	; 0xde4 <vfprintf+0xd2>
     daa:	37 fc       	sbrc	r3, 7
     dac:	2d c0       	rjmp	.+90     	; 0xe08 <vfprintf+0xf6>
     dae:	20 ed       	ldi	r18, 0xD0	; 208
     db0:	28 0f       	add	r18, r24
     db2:	2a 30       	cpi	r18, 0x0A	; 10
     db4:	40 f0       	brcs	.+16     	; 0xdc6 <vfprintf+0xb4>
     db6:	8e 32       	cpi	r24, 0x2E	; 46
     db8:	b9 f4       	brne	.+46     	; 0xde8 <vfprintf+0xd6>
     dba:	36 fc       	sbrc	r3, 6
     dbc:	81 c1       	rjmp	.+770    	; 0x10c0 <vfprintf+0x3ae>
     dbe:	23 2d       	mov	r18, r3
     dc0:	20 64       	ori	r18, 0x40	; 64
     dc2:	32 2e       	mov	r3, r18
     dc4:	19 c0       	rjmp	.+50     	; 0xdf8 <vfprintf+0xe6>
     dc6:	36 fe       	sbrs	r3, 6
     dc8:	06 c0       	rjmp	.+12     	; 0xdd6 <vfprintf+0xc4>
     dca:	8a e0       	ldi	r24, 0x0A	; 10
     dcc:	98 9e       	mul	r9, r24
     dce:	20 0d       	add	r18, r0
     dd0:	11 24       	eor	r1, r1
     dd2:	92 2e       	mov	r9, r18
     dd4:	11 c0       	rjmp	.+34     	; 0xdf8 <vfprintf+0xe6>
     dd6:	ea e0       	ldi	r30, 0x0A	; 10
     dd8:	2e 9e       	mul	r2, r30
     dda:	20 0d       	add	r18, r0
     ddc:	11 24       	eor	r1, r1
     dde:	22 2e       	mov	r2, r18
     de0:	f3 2d       	mov	r31, r3
     de2:	f0 62       	ori	r31, 0x20	; 32
     de4:	3f 2e       	mov	r3, r31
     de6:	08 c0       	rjmp	.+16     	; 0xdf8 <vfprintf+0xe6>
     de8:	8c 36       	cpi	r24, 0x6C	; 108
     dea:	21 f4       	brne	.+8      	; 0xdf4 <vfprintf+0xe2>
     dec:	83 2d       	mov	r24, r3
     dee:	80 68       	ori	r24, 0x80	; 128
     df0:	38 2e       	mov	r3, r24
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <vfprintf+0xe6>
     df4:	88 36       	cpi	r24, 0x68	; 104
     df6:	41 f4       	brne	.+16     	; 0xe08 <vfprintf+0xf6>
     df8:	f7 01       	movw	r30, r14
     dfa:	93 fd       	sbrc	r25, 3
     dfc:	85 91       	lpm	r24, Z+
     dfe:	93 ff       	sbrs	r25, 3
     e00:	81 91       	ld	r24, Z+
     e02:	7f 01       	movw	r14, r30
     e04:	81 11       	cpse	r24, r1
     e06:	b3 cf       	rjmp	.-154    	; 0xd6e <vfprintf+0x5c>
     e08:	98 2f       	mov	r25, r24
     e0a:	9f 7d       	andi	r25, 0xDF	; 223
     e0c:	95 54       	subi	r25, 0x45	; 69
     e0e:	93 30       	cpi	r25, 0x03	; 3
     e10:	28 f4       	brcc	.+10     	; 0xe1c <vfprintf+0x10a>
     e12:	0c 5f       	subi	r16, 0xFC	; 252
     e14:	1f 4f       	sbci	r17, 0xFF	; 255
     e16:	9f e3       	ldi	r25, 0x3F	; 63
     e18:	99 83       	std	Y+1, r25	; 0x01
     e1a:	0d c0       	rjmp	.+26     	; 0xe36 <vfprintf+0x124>
     e1c:	83 36       	cpi	r24, 0x63	; 99
     e1e:	31 f0       	breq	.+12     	; 0xe2c <vfprintf+0x11a>
     e20:	83 37       	cpi	r24, 0x73	; 115
     e22:	71 f0       	breq	.+28     	; 0xe40 <vfprintf+0x12e>
     e24:	83 35       	cpi	r24, 0x53	; 83
     e26:	09 f0       	breq	.+2      	; 0xe2a <vfprintf+0x118>
     e28:	59 c0       	rjmp	.+178    	; 0xedc <vfprintf+0x1ca>
     e2a:	21 c0       	rjmp	.+66     	; 0xe6e <vfprintf+0x15c>
     e2c:	f8 01       	movw	r30, r16
     e2e:	80 81       	ld	r24, Z
     e30:	89 83       	std	Y+1, r24	; 0x01
     e32:	0e 5f       	subi	r16, 0xFE	; 254
     e34:	1f 4f       	sbci	r17, 0xFF	; 255
     e36:	88 24       	eor	r8, r8
     e38:	83 94       	inc	r8
     e3a:	91 2c       	mov	r9, r1
     e3c:	53 01       	movw	r10, r6
     e3e:	13 c0       	rjmp	.+38     	; 0xe66 <vfprintf+0x154>
     e40:	28 01       	movw	r4, r16
     e42:	f2 e0       	ldi	r31, 0x02	; 2
     e44:	4f 0e       	add	r4, r31
     e46:	51 1c       	adc	r5, r1
     e48:	f8 01       	movw	r30, r16
     e4a:	a0 80       	ld	r10, Z
     e4c:	b1 80       	ldd	r11, Z+1	; 0x01
     e4e:	36 fe       	sbrs	r3, 6
     e50:	03 c0       	rjmp	.+6      	; 0xe58 <vfprintf+0x146>
     e52:	69 2d       	mov	r22, r9
     e54:	70 e0       	ldi	r23, 0x00	; 0
     e56:	02 c0       	rjmp	.+4      	; 0xe5c <vfprintf+0x14a>
     e58:	6f ef       	ldi	r22, 0xFF	; 255
     e5a:	7f ef       	ldi	r23, 0xFF	; 255
     e5c:	c5 01       	movw	r24, r10
     e5e:	0e 94 75 08 	call	0x10ea	; 0x10ea <strnlen>
     e62:	4c 01       	movw	r8, r24
     e64:	82 01       	movw	r16, r4
     e66:	f3 2d       	mov	r31, r3
     e68:	ff 77       	andi	r31, 0x7F	; 127
     e6a:	3f 2e       	mov	r3, r31
     e6c:	16 c0       	rjmp	.+44     	; 0xe9a <vfprintf+0x188>
     e6e:	28 01       	movw	r4, r16
     e70:	22 e0       	ldi	r18, 0x02	; 2
     e72:	42 0e       	add	r4, r18
     e74:	51 1c       	adc	r5, r1
     e76:	f8 01       	movw	r30, r16
     e78:	a0 80       	ld	r10, Z
     e7a:	b1 80       	ldd	r11, Z+1	; 0x01
     e7c:	36 fe       	sbrs	r3, 6
     e7e:	03 c0       	rjmp	.+6      	; 0xe86 <vfprintf+0x174>
     e80:	69 2d       	mov	r22, r9
     e82:	70 e0       	ldi	r23, 0x00	; 0
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <vfprintf+0x178>
     e86:	6f ef       	ldi	r22, 0xFF	; 255
     e88:	7f ef       	ldi	r23, 0xFF	; 255
     e8a:	c5 01       	movw	r24, r10
     e8c:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <strnlen_P>
     e90:	4c 01       	movw	r8, r24
     e92:	f3 2d       	mov	r31, r3
     e94:	f0 68       	ori	r31, 0x80	; 128
     e96:	3f 2e       	mov	r3, r31
     e98:	82 01       	movw	r16, r4
     e9a:	33 fc       	sbrc	r3, 3
     e9c:	1b c0       	rjmp	.+54     	; 0xed4 <vfprintf+0x1c2>
     e9e:	82 2d       	mov	r24, r2
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	88 16       	cp	r8, r24
     ea4:	99 06       	cpc	r9, r25
     ea6:	b0 f4       	brcc	.+44     	; 0xed4 <vfprintf+0x1c2>
     ea8:	b6 01       	movw	r22, r12
     eaa:	80 e2       	ldi	r24, 0x20	; 32
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     eb2:	2a 94       	dec	r2
     eb4:	f4 cf       	rjmp	.-24     	; 0xe9e <vfprintf+0x18c>
     eb6:	f5 01       	movw	r30, r10
     eb8:	37 fc       	sbrc	r3, 7
     eba:	85 91       	lpm	r24, Z+
     ebc:	37 fe       	sbrs	r3, 7
     ebe:	81 91       	ld	r24, Z+
     ec0:	5f 01       	movw	r10, r30
     ec2:	b6 01       	movw	r22, r12
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
     eca:	21 10       	cpse	r2, r1
     ecc:	2a 94       	dec	r2
     ece:	21 e0       	ldi	r18, 0x01	; 1
     ed0:	82 1a       	sub	r8, r18
     ed2:	91 08       	sbc	r9, r1
     ed4:	81 14       	cp	r8, r1
     ed6:	91 04       	cpc	r9, r1
     ed8:	71 f7       	brne	.-36     	; 0xeb6 <vfprintf+0x1a4>
     eda:	e8 c0       	rjmp	.+464    	; 0x10ac <vfprintf+0x39a>
     edc:	84 36       	cpi	r24, 0x64	; 100
     ede:	11 f0       	breq	.+4      	; 0xee4 <vfprintf+0x1d2>
     ee0:	89 36       	cpi	r24, 0x69	; 105
     ee2:	41 f5       	brne	.+80     	; 0xf34 <vfprintf+0x222>
     ee4:	f8 01       	movw	r30, r16
     ee6:	37 fe       	sbrs	r3, 7
     ee8:	07 c0       	rjmp	.+14     	; 0xef8 <vfprintf+0x1e6>
     eea:	60 81       	ld	r22, Z
     eec:	71 81       	ldd	r23, Z+1	; 0x01
     eee:	82 81       	ldd	r24, Z+2	; 0x02
     ef0:	93 81       	ldd	r25, Z+3	; 0x03
     ef2:	0c 5f       	subi	r16, 0xFC	; 252
     ef4:	1f 4f       	sbci	r17, 0xFF	; 255
     ef6:	08 c0       	rjmp	.+16     	; 0xf08 <vfprintf+0x1f6>
     ef8:	60 81       	ld	r22, Z
     efa:	71 81       	ldd	r23, Z+1	; 0x01
     efc:	07 2e       	mov	r0, r23
     efe:	00 0c       	add	r0, r0
     f00:	88 0b       	sbc	r24, r24
     f02:	99 0b       	sbc	r25, r25
     f04:	0e 5f       	subi	r16, 0xFE	; 254
     f06:	1f 4f       	sbci	r17, 0xFF	; 255
     f08:	f3 2d       	mov	r31, r3
     f0a:	ff 76       	andi	r31, 0x6F	; 111
     f0c:	3f 2e       	mov	r3, r31
     f0e:	97 ff       	sbrs	r25, 7
     f10:	09 c0       	rjmp	.+18     	; 0xf24 <vfprintf+0x212>
     f12:	90 95       	com	r25
     f14:	80 95       	com	r24
     f16:	70 95       	com	r23
     f18:	61 95       	neg	r22
     f1a:	7f 4f       	sbci	r23, 0xFF	; 255
     f1c:	8f 4f       	sbci	r24, 0xFF	; 255
     f1e:	9f 4f       	sbci	r25, 0xFF	; 255
     f20:	f0 68       	ori	r31, 0x80	; 128
     f22:	3f 2e       	mov	r3, r31
     f24:	2a e0       	ldi	r18, 0x0A	; 10
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	a3 01       	movw	r20, r6
     f2a:	0e 94 bc 08 	call	0x1178	; 0x1178 <__ultoa_invert>
     f2e:	88 2e       	mov	r8, r24
     f30:	86 18       	sub	r8, r6
     f32:	45 c0       	rjmp	.+138    	; 0xfbe <vfprintf+0x2ac>
     f34:	85 37       	cpi	r24, 0x75	; 117
     f36:	31 f4       	brne	.+12     	; 0xf44 <vfprintf+0x232>
     f38:	23 2d       	mov	r18, r3
     f3a:	2f 7e       	andi	r18, 0xEF	; 239
     f3c:	b2 2e       	mov	r11, r18
     f3e:	2a e0       	ldi	r18, 0x0A	; 10
     f40:	30 e0       	ldi	r19, 0x00	; 0
     f42:	25 c0       	rjmp	.+74     	; 0xf8e <vfprintf+0x27c>
     f44:	93 2d       	mov	r25, r3
     f46:	99 7f       	andi	r25, 0xF9	; 249
     f48:	b9 2e       	mov	r11, r25
     f4a:	8f 36       	cpi	r24, 0x6F	; 111
     f4c:	c1 f0       	breq	.+48     	; 0xf7e <vfprintf+0x26c>
     f4e:	18 f4       	brcc	.+6      	; 0xf56 <vfprintf+0x244>
     f50:	88 35       	cpi	r24, 0x58	; 88
     f52:	79 f0       	breq	.+30     	; 0xf72 <vfprintf+0x260>
     f54:	b5 c0       	rjmp	.+362    	; 0x10c0 <vfprintf+0x3ae>
     f56:	80 37       	cpi	r24, 0x70	; 112
     f58:	19 f0       	breq	.+6      	; 0xf60 <vfprintf+0x24e>
     f5a:	88 37       	cpi	r24, 0x78	; 120
     f5c:	21 f0       	breq	.+8      	; 0xf66 <vfprintf+0x254>
     f5e:	b0 c0       	rjmp	.+352    	; 0x10c0 <vfprintf+0x3ae>
     f60:	e9 2f       	mov	r30, r25
     f62:	e0 61       	ori	r30, 0x10	; 16
     f64:	be 2e       	mov	r11, r30
     f66:	b4 fe       	sbrs	r11, 4
     f68:	0d c0       	rjmp	.+26     	; 0xf84 <vfprintf+0x272>
     f6a:	fb 2d       	mov	r31, r11
     f6c:	f4 60       	ori	r31, 0x04	; 4
     f6e:	bf 2e       	mov	r11, r31
     f70:	09 c0       	rjmp	.+18     	; 0xf84 <vfprintf+0x272>
     f72:	34 fe       	sbrs	r3, 4
     f74:	0a c0       	rjmp	.+20     	; 0xf8a <vfprintf+0x278>
     f76:	29 2f       	mov	r18, r25
     f78:	26 60       	ori	r18, 0x06	; 6
     f7a:	b2 2e       	mov	r11, r18
     f7c:	06 c0       	rjmp	.+12     	; 0xf8a <vfprintf+0x278>
     f7e:	28 e0       	ldi	r18, 0x08	; 8
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	05 c0       	rjmp	.+10     	; 0xf8e <vfprintf+0x27c>
     f84:	20 e1       	ldi	r18, 0x10	; 16
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <vfprintf+0x27c>
     f8a:	20 e1       	ldi	r18, 0x10	; 16
     f8c:	32 e0       	ldi	r19, 0x02	; 2
     f8e:	f8 01       	movw	r30, r16
     f90:	b7 fe       	sbrs	r11, 7
     f92:	07 c0       	rjmp	.+14     	; 0xfa2 <vfprintf+0x290>
     f94:	60 81       	ld	r22, Z
     f96:	71 81       	ldd	r23, Z+1	; 0x01
     f98:	82 81       	ldd	r24, Z+2	; 0x02
     f9a:	93 81       	ldd	r25, Z+3	; 0x03
     f9c:	0c 5f       	subi	r16, 0xFC	; 252
     f9e:	1f 4f       	sbci	r17, 0xFF	; 255
     fa0:	06 c0       	rjmp	.+12     	; 0xfae <vfprintf+0x29c>
     fa2:	60 81       	ld	r22, Z
     fa4:	71 81       	ldd	r23, Z+1	; 0x01
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	0e 5f       	subi	r16, 0xFE	; 254
     fac:	1f 4f       	sbci	r17, 0xFF	; 255
     fae:	a3 01       	movw	r20, r6
     fb0:	0e 94 bc 08 	call	0x1178	; 0x1178 <__ultoa_invert>
     fb4:	88 2e       	mov	r8, r24
     fb6:	86 18       	sub	r8, r6
     fb8:	fb 2d       	mov	r31, r11
     fba:	ff 77       	andi	r31, 0x7F	; 127
     fbc:	3f 2e       	mov	r3, r31
     fbe:	36 fe       	sbrs	r3, 6
     fc0:	0d c0       	rjmp	.+26     	; 0xfdc <vfprintf+0x2ca>
     fc2:	23 2d       	mov	r18, r3
     fc4:	2e 7f       	andi	r18, 0xFE	; 254
     fc6:	a2 2e       	mov	r10, r18
     fc8:	89 14       	cp	r8, r9
     fca:	58 f4       	brcc	.+22     	; 0xfe2 <vfprintf+0x2d0>
     fcc:	34 fe       	sbrs	r3, 4
     fce:	0b c0       	rjmp	.+22     	; 0xfe6 <vfprintf+0x2d4>
     fd0:	32 fc       	sbrc	r3, 2
     fd2:	09 c0       	rjmp	.+18     	; 0xfe6 <vfprintf+0x2d4>
     fd4:	83 2d       	mov	r24, r3
     fd6:	8e 7e       	andi	r24, 0xEE	; 238
     fd8:	a8 2e       	mov	r10, r24
     fda:	05 c0       	rjmp	.+10     	; 0xfe6 <vfprintf+0x2d4>
     fdc:	b8 2c       	mov	r11, r8
     fde:	a3 2c       	mov	r10, r3
     fe0:	03 c0       	rjmp	.+6      	; 0xfe8 <vfprintf+0x2d6>
     fe2:	b8 2c       	mov	r11, r8
     fe4:	01 c0       	rjmp	.+2      	; 0xfe8 <vfprintf+0x2d6>
     fe6:	b9 2c       	mov	r11, r9
     fe8:	a4 fe       	sbrs	r10, 4
     fea:	0f c0       	rjmp	.+30     	; 0x100a <vfprintf+0x2f8>
     fec:	fe 01       	movw	r30, r28
     fee:	e8 0d       	add	r30, r8
     ff0:	f1 1d       	adc	r31, r1
     ff2:	80 81       	ld	r24, Z
     ff4:	80 33       	cpi	r24, 0x30	; 48
     ff6:	21 f4       	brne	.+8      	; 0x1000 <vfprintf+0x2ee>
     ff8:	9a 2d       	mov	r25, r10
     ffa:	99 7e       	andi	r25, 0xE9	; 233
     ffc:	a9 2e       	mov	r10, r25
     ffe:	09 c0       	rjmp	.+18     	; 0x1012 <vfprintf+0x300>
    1000:	a2 fe       	sbrs	r10, 2
    1002:	06 c0       	rjmp	.+12     	; 0x1010 <vfprintf+0x2fe>
    1004:	b3 94       	inc	r11
    1006:	b3 94       	inc	r11
    1008:	04 c0       	rjmp	.+8      	; 0x1012 <vfprintf+0x300>
    100a:	8a 2d       	mov	r24, r10
    100c:	86 78       	andi	r24, 0x86	; 134
    100e:	09 f0       	breq	.+2      	; 0x1012 <vfprintf+0x300>
    1010:	b3 94       	inc	r11
    1012:	a3 fc       	sbrc	r10, 3
    1014:	11 c0       	rjmp	.+34     	; 0x1038 <vfprintf+0x326>
    1016:	a0 fe       	sbrs	r10, 0
    1018:	06 c0       	rjmp	.+12     	; 0x1026 <vfprintf+0x314>
    101a:	b2 14       	cp	r11, r2
    101c:	88 f4       	brcc	.+34     	; 0x1040 <vfprintf+0x32e>
    101e:	28 0c       	add	r2, r8
    1020:	92 2c       	mov	r9, r2
    1022:	9b 18       	sub	r9, r11
    1024:	0e c0       	rjmp	.+28     	; 0x1042 <vfprintf+0x330>
    1026:	b2 14       	cp	r11, r2
    1028:	60 f4       	brcc	.+24     	; 0x1042 <vfprintf+0x330>
    102a:	b6 01       	movw	r22, r12
    102c:	80 e2       	ldi	r24, 0x20	; 32
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
    1034:	b3 94       	inc	r11
    1036:	f7 cf       	rjmp	.-18     	; 0x1026 <vfprintf+0x314>
    1038:	b2 14       	cp	r11, r2
    103a:	18 f4       	brcc	.+6      	; 0x1042 <vfprintf+0x330>
    103c:	2b 18       	sub	r2, r11
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0x332>
    1040:	98 2c       	mov	r9, r8
    1042:	21 2c       	mov	r2, r1
    1044:	a4 fe       	sbrs	r10, 4
    1046:	10 c0       	rjmp	.+32     	; 0x1068 <vfprintf+0x356>
    1048:	b6 01       	movw	r22, r12
    104a:	80 e3       	ldi	r24, 0x30	; 48
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
    1052:	a2 fe       	sbrs	r10, 2
    1054:	17 c0       	rjmp	.+46     	; 0x1084 <vfprintf+0x372>
    1056:	a1 fc       	sbrc	r10, 1
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <vfprintf+0x34e>
    105a:	88 e7       	ldi	r24, 0x78	; 120
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	02 c0       	rjmp	.+4      	; 0x1064 <vfprintf+0x352>
    1060:	88 e5       	ldi	r24, 0x58	; 88
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	b6 01       	movw	r22, r12
    1066:	0c c0       	rjmp	.+24     	; 0x1080 <vfprintf+0x36e>
    1068:	8a 2d       	mov	r24, r10
    106a:	86 78       	andi	r24, 0x86	; 134
    106c:	59 f0       	breq	.+22     	; 0x1084 <vfprintf+0x372>
    106e:	a1 fe       	sbrs	r10, 1
    1070:	02 c0       	rjmp	.+4      	; 0x1076 <vfprintf+0x364>
    1072:	8b e2       	ldi	r24, 0x2B	; 43
    1074:	01 c0       	rjmp	.+2      	; 0x1078 <vfprintf+0x366>
    1076:	80 e2       	ldi	r24, 0x20	; 32
    1078:	a7 fc       	sbrc	r10, 7
    107a:	8d e2       	ldi	r24, 0x2D	; 45
    107c:	b6 01       	movw	r22, r12
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
    1084:	89 14       	cp	r8, r9
    1086:	38 f4       	brcc	.+14     	; 0x1096 <vfprintf+0x384>
    1088:	b6 01       	movw	r22, r12
    108a:	80 e3       	ldi	r24, 0x30	; 48
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
    1092:	9a 94       	dec	r9
    1094:	f7 cf       	rjmp	.-18     	; 0x1084 <vfprintf+0x372>
    1096:	8a 94       	dec	r8
    1098:	f3 01       	movw	r30, r6
    109a:	e8 0d       	add	r30, r8
    109c:	f1 1d       	adc	r31, r1
    109e:	80 81       	ld	r24, Z
    10a0:	b6 01       	movw	r22, r12
    10a2:	90 e0       	ldi	r25, 0x00	; 0
    10a4:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
    10a8:	81 10       	cpse	r8, r1
    10aa:	f5 cf       	rjmp	.-22     	; 0x1096 <vfprintf+0x384>
    10ac:	22 20       	and	r2, r2
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <vfprintf+0x3a0>
    10b0:	42 ce       	rjmp	.-892    	; 0xd36 <vfprintf+0x24>
    10b2:	b6 01       	movw	r22, r12
    10b4:	80 e2       	ldi	r24, 0x20	; 32
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	0e 94 80 08 	call	0x1100	; 0x1100 <fputc>
    10bc:	2a 94       	dec	r2
    10be:	f6 cf       	rjmp	.-20     	; 0x10ac <vfprintf+0x39a>
    10c0:	f6 01       	movw	r30, r12
    10c2:	86 81       	ldd	r24, Z+6	; 0x06
    10c4:	97 81       	ldd	r25, Z+7	; 0x07
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <vfprintf+0x3ba>
    10c8:	8f ef       	ldi	r24, 0xFF	; 255
    10ca:	9f ef       	ldi	r25, 0xFF	; 255
    10cc:	2b 96       	adiw	r28, 0x0b	; 11
    10ce:	e2 e1       	ldi	r30, 0x12	; 18
    10d0:	0c 94 36 09 	jmp	0x126c	; 0x126c <__epilogue_restores__>

000010d4 <strnlen_P>:
    10d4:	fc 01       	movw	r30, r24
    10d6:	05 90       	lpm	r0, Z+
    10d8:	61 50       	subi	r22, 0x01	; 1
    10da:	70 40       	sbci	r23, 0x00	; 0
    10dc:	01 10       	cpse	r0, r1
    10de:	d8 f7       	brcc	.-10     	; 0x10d6 <strnlen_P+0x2>
    10e0:	80 95       	com	r24
    10e2:	90 95       	com	r25
    10e4:	8e 0f       	add	r24, r30
    10e6:	9f 1f       	adc	r25, r31
    10e8:	08 95       	ret

000010ea <strnlen>:
    10ea:	fc 01       	movw	r30, r24
    10ec:	61 50       	subi	r22, 0x01	; 1
    10ee:	70 40       	sbci	r23, 0x00	; 0
    10f0:	01 90       	ld	r0, Z+
    10f2:	01 10       	cpse	r0, r1
    10f4:	d8 f7       	brcc	.-10     	; 0x10ec <strnlen+0x2>
    10f6:	80 95       	com	r24
    10f8:	90 95       	com	r25
    10fa:	8e 0f       	add	r24, r30
    10fc:	9f 1f       	adc	r25, r31
    10fe:	08 95       	ret

00001100 <fputc>:
    1100:	0f 93       	push	r16
    1102:	1f 93       	push	r17
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	fb 01       	movw	r30, r22
    110a:	23 81       	ldd	r18, Z+3	; 0x03
    110c:	21 fd       	sbrc	r18, 1
    110e:	03 c0       	rjmp	.+6      	; 0x1116 <fputc+0x16>
    1110:	8f ef       	ldi	r24, 0xFF	; 255
    1112:	9f ef       	ldi	r25, 0xFF	; 255
    1114:	2c c0       	rjmp	.+88     	; 0x116e <fputc+0x6e>
    1116:	22 ff       	sbrs	r18, 2
    1118:	16 c0       	rjmp	.+44     	; 0x1146 <fputc+0x46>
    111a:	46 81       	ldd	r20, Z+6	; 0x06
    111c:	57 81       	ldd	r21, Z+7	; 0x07
    111e:	24 81       	ldd	r18, Z+4	; 0x04
    1120:	35 81       	ldd	r19, Z+5	; 0x05
    1122:	42 17       	cp	r20, r18
    1124:	53 07       	cpc	r21, r19
    1126:	44 f4       	brge	.+16     	; 0x1138 <fputc+0x38>
    1128:	a0 81       	ld	r26, Z
    112a:	b1 81       	ldd	r27, Z+1	; 0x01
    112c:	9d 01       	movw	r18, r26
    112e:	2f 5f       	subi	r18, 0xFF	; 255
    1130:	3f 4f       	sbci	r19, 0xFF	; 255
    1132:	31 83       	std	Z+1, r19	; 0x01
    1134:	20 83       	st	Z, r18
    1136:	8c 93       	st	X, r24
    1138:	26 81       	ldd	r18, Z+6	; 0x06
    113a:	37 81       	ldd	r19, Z+7	; 0x07
    113c:	2f 5f       	subi	r18, 0xFF	; 255
    113e:	3f 4f       	sbci	r19, 0xFF	; 255
    1140:	37 83       	std	Z+7, r19	; 0x07
    1142:	26 83       	std	Z+6, r18	; 0x06
    1144:	14 c0       	rjmp	.+40     	; 0x116e <fputc+0x6e>
    1146:	8b 01       	movw	r16, r22
    1148:	ec 01       	movw	r28, r24
    114a:	fb 01       	movw	r30, r22
    114c:	00 84       	ldd	r0, Z+8	; 0x08
    114e:	f1 85       	ldd	r31, Z+9	; 0x09
    1150:	e0 2d       	mov	r30, r0
    1152:	09 95       	icall
    1154:	89 2b       	or	r24, r25
    1156:	e1 f6       	brne	.-72     	; 0x1110 <fputc+0x10>
    1158:	d8 01       	movw	r26, r16
    115a:	16 96       	adiw	r26, 0x06	; 6
    115c:	8d 91       	ld	r24, X+
    115e:	9c 91       	ld	r25, X
    1160:	17 97       	sbiw	r26, 0x07	; 7
    1162:	01 96       	adiw	r24, 0x01	; 1
    1164:	17 96       	adiw	r26, 0x07	; 7
    1166:	9c 93       	st	X, r25
    1168:	8e 93       	st	-X, r24
    116a:	16 97       	sbiw	r26, 0x06	; 6
    116c:	ce 01       	movw	r24, r28
    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	1f 91       	pop	r17
    1174:	0f 91       	pop	r16
    1176:	08 95       	ret

00001178 <__ultoa_invert>:
    1178:	fa 01       	movw	r30, r20
    117a:	aa 27       	eor	r26, r26
    117c:	28 30       	cpi	r18, 0x08	; 8
    117e:	51 f1       	breq	.+84     	; 0x11d4 <__ultoa_invert+0x5c>
    1180:	20 31       	cpi	r18, 0x10	; 16
    1182:	81 f1       	breq	.+96     	; 0x11e4 <__ultoa_invert+0x6c>
    1184:	e8 94       	clt
    1186:	6f 93       	push	r22
    1188:	6e 7f       	andi	r22, 0xFE	; 254
    118a:	6e 5f       	subi	r22, 0xFE	; 254
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	8f 4f       	sbci	r24, 0xFF	; 255
    1190:	9f 4f       	sbci	r25, 0xFF	; 255
    1192:	af 4f       	sbci	r26, 0xFF	; 255
    1194:	b1 e0       	ldi	r27, 0x01	; 1
    1196:	3e d0       	rcall	.+124    	; 0x1214 <__ultoa_invert+0x9c>
    1198:	b4 e0       	ldi	r27, 0x04	; 4
    119a:	3c d0       	rcall	.+120    	; 0x1214 <__ultoa_invert+0x9c>
    119c:	67 0f       	add	r22, r23
    119e:	78 1f       	adc	r23, r24
    11a0:	89 1f       	adc	r24, r25
    11a2:	9a 1f       	adc	r25, r26
    11a4:	a1 1d       	adc	r26, r1
    11a6:	68 0f       	add	r22, r24
    11a8:	79 1f       	adc	r23, r25
    11aa:	8a 1f       	adc	r24, r26
    11ac:	91 1d       	adc	r25, r1
    11ae:	a1 1d       	adc	r26, r1
    11b0:	6a 0f       	add	r22, r26
    11b2:	71 1d       	adc	r23, r1
    11b4:	81 1d       	adc	r24, r1
    11b6:	91 1d       	adc	r25, r1
    11b8:	a1 1d       	adc	r26, r1
    11ba:	20 d0       	rcall	.+64     	; 0x11fc <__ultoa_invert+0x84>
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <__ultoa_invert+0x48>
    11be:	68 94       	set
    11c0:	3f 91       	pop	r19
    11c2:	2a e0       	ldi	r18, 0x0A	; 10
    11c4:	26 9f       	mul	r18, r22
    11c6:	11 24       	eor	r1, r1
    11c8:	30 19       	sub	r19, r0
    11ca:	30 5d       	subi	r19, 0xD0	; 208
    11cc:	31 93       	st	Z+, r19
    11ce:	de f6       	brtc	.-74     	; 0x1186 <__ultoa_invert+0xe>
    11d0:	cf 01       	movw	r24, r30
    11d2:	08 95       	ret
    11d4:	46 2f       	mov	r20, r22
    11d6:	47 70       	andi	r20, 0x07	; 7
    11d8:	40 5d       	subi	r20, 0xD0	; 208
    11da:	41 93       	st	Z+, r20
    11dc:	b3 e0       	ldi	r27, 0x03	; 3
    11de:	0f d0       	rcall	.+30     	; 0x11fe <__ultoa_invert+0x86>
    11e0:	c9 f7       	brne	.-14     	; 0x11d4 <__ultoa_invert+0x5c>
    11e2:	f6 cf       	rjmp	.-20     	; 0x11d0 <__ultoa_invert+0x58>
    11e4:	46 2f       	mov	r20, r22
    11e6:	4f 70       	andi	r20, 0x0F	; 15
    11e8:	40 5d       	subi	r20, 0xD0	; 208
    11ea:	4a 33       	cpi	r20, 0x3A	; 58
    11ec:	18 f0       	brcs	.+6      	; 0x11f4 <__ultoa_invert+0x7c>
    11ee:	49 5d       	subi	r20, 0xD9	; 217
    11f0:	31 fd       	sbrc	r19, 1
    11f2:	40 52       	subi	r20, 0x20	; 32
    11f4:	41 93       	st	Z+, r20
    11f6:	02 d0       	rcall	.+4      	; 0x11fc <__ultoa_invert+0x84>
    11f8:	a9 f7       	brne	.-22     	; 0x11e4 <__ultoa_invert+0x6c>
    11fa:	ea cf       	rjmp	.-44     	; 0x11d0 <__ultoa_invert+0x58>
    11fc:	b4 e0       	ldi	r27, 0x04	; 4
    11fe:	a6 95       	lsr	r26
    1200:	97 95       	ror	r25
    1202:	87 95       	ror	r24
    1204:	77 95       	ror	r23
    1206:	67 95       	ror	r22
    1208:	ba 95       	dec	r27
    120a:	c9 f7       	brne	.-14     	; 0x11fe <__ultoa_invert+0x86>
    120c:	00 97       	sbiw	r24, 0x00	; 0
    120e:	61 05       	cpc	r22, r1
    1210:	71 05       	cpc	r23, r1
    1212:	08 95       	ret
    1214:	9b 01       	movw	r18, r22
    1216:	ac 01       	movw	r20, r24
    1218:	0a 2e       	mov	r0, r26
    121a:	06 94       	lsr	r0
    121c:	57 95       	ror	r21
    121e:	47 95       	ror	r20
    1220:	37 95       	ror	r19
    1222:	27 95       	ror	r18
    1224:	ba 95       	dec	r27
    1226:	c9 f7       	brne	.-14     	; 0x121a <__ultoa_invert+0xa2>
    1228:	62 0f       	add	r22, r18
    122a:	73 1f       	adc	r23, r19
    122c:	84 1f       	adc	r24, r20
    122e:	95 1f       	adc	r25, r21
    1230:	a0 1d       	adc	r26, r0
    1232:	08 95       	ret

00001234 <__prologue_saves__>:
    1234:	2f 92       	push	r2
    1236:	3f 92       	push	r3
    1238:	4f 92       	push	r4
    123a:	5f 92       	push	r5
    123c:	6f 92       	push	r6
    123e:	7f 92       	push	r7
    1240:	8f 92       	push	r8
    1242:	9f 92       	push	r9
    1244:	af 92       	push	r10
    1246:	bf 92       	push	r11
    1248:	cf 92       	push	r12
    124a:	df 92       	push	r13
    124c:	ef 92       	push	r14
    124e:	ff 92       	push	r15
    1250:	0f 93       	push	r16
    1252:	1f 93       	push	r17
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	cd b7       	in	r28, 0x3d	; 61
    125a:	de b7       	in	r29, 0x3e	; 62
    125c:	ca 1b       	sub	r28, r26
    125e:	db 0b       	sbc	r29, r27
    1260:	0f b6       	in	r0, 0x3f	; 63
    1262:	f8 94       	cli
    1264:	de bf       	out	0x3e, r29	; 62
    1266:	0f be       	out	0x3f, r0	; 63
    1268:	cd bf       	out	0x3d, r28	; 61
    126a:	09 94       	ijmp

0000126c <__epilogue_restores__>:
    126c:	2a 88       	ldd	r2, Y+18	; 0x12
    126e:	39 88       	ldd	r3, Y+17	; 0x11
    1270:	48 88       	ldd	r4, Y+16	; 0x10
    1272:	5f 84       	ldd	r5, Y+15	; 0x0f
    1274:	6e 84       	ldd	r6, Y+14	; 0x0e
    1276:	7d 84       	ldd	r7, Y+13	; 0x0d
    1278:	8c 84       	ldd	r8, Y+12	; 0x0c
    127a:	9b 84       	ldd	r9, Y+11	; 0x0b
    127c:	aa 84       	ldd	r10, Y+10	; 0x0a
    127e:	b9 84       	ldd	r11, Y+9	; 0x09
    1280:	c8 84       	ldd	r12, Y+8	; 0x08
    1282:	df 80       	ldd	r13, Y+7	; 0x07
    1284:	ee 80       	ldd	r14, Y+6	; 0x06
    1286:	fd 80       	ldd	r15, Y+5	; 0x05
    1288:	0c 81       	ldd	r16, Y+4	; 0x04
    128a:	1b 81       	ldd	r17, Y+3	; 0x03
    128c:	aa 81       	ldd	r26, Y+2	; 0x02
    128e:	b9 81       	ldd	r27, Y+1	; 0x01
    1290:	ce 0f       	add	r28, r30
    1292:	d1 1d       	adc	r29, r1
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	de bf       	out	0x3e, r29	; 62
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	cd bf       	out	0x3d, r28	; 61
    129e:	ed 01       	movw	r28, r26
    12a0:	08 95       	ret

000012a2 <_exit>:
    12a2:	f8 94       	cli

000012a4 <__stop_program>:
    12a4:	ff cf       	rjmp	.-2      	; 0x12a4 <__stop_program>
