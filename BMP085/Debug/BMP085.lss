
BMP085.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000015e  00800100  00001cd8  00001d6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cd8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  0080025e  0080025e  00001eca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001eca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ce3  00000000  00000000  000020e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c88  00000000  00000000  00003dc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001664  00000000  00000000  00004a4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004e8  00000000  00000000  000060b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00007e35  00000000  00000000  00006598  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002054  00000000  00000000  0000e3cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00010421  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000306b  00000000  00000000  00010569  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	94 c0       	rjmp	.+296    	; 0x12a <__ctors_end>
       2:	00 00       	nop
       4:	ae c0       	rjmp	.+348    	; 0x162 <__bad_interrupt>
       6:	00 00       	nop
       8:	ac c0       	rjmp	.+344    	; 0x162 <__bad_interrupt>
       a:	00 00       	nop
       c:	aa c0       	rjmp	.+340    	; 0x162 <__bad_interrupt>
       e:	00 00       	nop
      10:	a8 c0       	rjmp	.+336    	; 0x162 <__bad_interrupt>
      12:	00 00       	nop
      14:	a6 c0       	rjmp	.+332    	; 0x162 <__bad_interrupt>
      16:	00 00       	nop
      18:	a4 c0       	rjmp	.+328    	; 0x162 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a2 c0       	rjmp	.+324    	; 0x162 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a0 c0       	rjmp	.+320    	; 0x162 <__bad_interrupt>
      22:	00 00       	nop
      24:	9e c0       	rjmp	.+316    	; 0x162 <__bad_interrupt>
      26:	00 00       	nop
      28:	9c c0       	rjmp	.+312    	; 0x162 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9a c0       	rjmp	.+308    	; 0x162 <__bad_interrupt>
      2e:	00 00       	nop
      30:	98 c0       	rjmp	.+304    	; 0x162 <__bad_interrupt>
      32:	00 00       	nop
      34:	96 c0       	rjmp	.+300    	; 0x162 <__bad_interrupt>
      36:	00 00       	nop
      38:	94 c0       	rjmp	.+296    	; 0x162 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	92 c0       	rjmp	.+292    	; 0x162 <__bad_interrupt>
      3e:	00 00       	nop
      40:	90 c0       	rjmp	.+288    	; 0x162 <__bad_interrupt>
      42:	00 00       	nop
      44:	8e c0       	rjmp	.+284    	; 0x162 <__bad_interrupt>
      46:	00 00       	nop
      48:	8c c0       	rjmp	.+280    	; 0x162 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8a c0       	rjmp	.+276    	; 0x162 <__bad_interrupt>
      4e:	00 00       	nop
      50:	88 c0       	rjmp	.+272    	; 0x162 <__bad_interrupt>
      52:	00 00       	nop
      54:	86 c0       	rjmp	.+268    	; 0x162 <__bad_interrupt>
      56:	00 00       	nop
      58:	84 c0       	rjmp	.+264    	; 0x162 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	82 c0       	rjmp	.+260    	; 0x162 <__bad_interrupt>
      5e:	00 00       	nop
      60:	80 c0       	rjmp	.+256    	; 0x162 <__bad_interrupt>
      62:	00 00       	nop
      64:	7e c0       	rjmp	.+252    	; 0x162 <__bad_interrupt>
      66:	00 00       	nop
      68:	be 01       	movw	r22, r28
      6a:	c1 01       	movw	r24, r2
      6c:	c4 01       	movw	r24, r8
      6e:	c7 01       	movw	r24, r14
      70:	ca 01       	movw	r24, r20
      72:	cd 01       	movw	r24, r26
      74:	d0 01       	movw	r26, r0
      76:	d3 01       	movw	r26, r6
      78:	d6 01       	movw	r26, r12
      7a:	d9 01       	movw	r26, r18
      7c:	dc 01       	movw	r26, r24
      7e:	df 01       	movw	r26, r30
      80:	e2 01       	movw	r28, r4
      82:	e5 01       	movw	r28, r10
      84:	e8 01       	movw	r28, r16
      86:	eb 01       	movw	r28, r22
      88:	f7 01       	movw	r30, r14
      8a:	fa 01       	movw	r30, r20
      8c:	fd 01       	movw	r30, r26
      8e:	00 02       	muls	r16, r16
      90:	03 02       	muls	r16, r19
      92:	06 02       	muls	r16, r22
      94:	09 02       	muls	r16, r25
      96:	0c 02       	muls	r16, r28
      98:	0f 02       	muls	r16, r31
      9a:	12 02       	muls	r17, r18
      9c:	15 02       	muls	r17, r21
      9e:	18 02       	muls	r17, r24
      a0:	1b 02       	muls	r17, r27
      a2:	1e 02       	muls	r17, r30
      a4:	21 02       	muls	r18, r17
      a6:	24 02       	muls	r18, r20
      a8:	07 63       	ori	r16, 0x37	; 55
      aa:	42 36       	cpi	r20, 0x62	; 98
      ac:	b7 9b       	sbis	0x16, 7	; 22
      ae:	d8 a7       	std	Y+40, r29	; 0x28
      b0:	1a 39       	cpi	r17, 0x9A	; 154
      b2:	68 56       	subi	r22, 0x68	; 104
      b4:	18 ae       	std	Y+56, r1	; 0x38
      b6:	ba ab       	std	Y+50, r27	; 0x32
      b8:	55 8c       	ldd	r5, Z+29	; 0x1d
      ba:	1d 3c       	cpi	r17, 0xCD	; 205
      bc:	b7 cc       	rjmp	.-1682   	; 0xfffffa2c <__eeprom_end+0xff7efa2c>
      be:	57 63       	ori	r21, 0x37	; 55
      c0:	bd 6d       	ori	r27, 0xDD	; 221
      c2:	ed fd       	.word	0xfded	; ????
      c4:	75 3e       	cpi	r23, 0xE5	; 229
      c6:	f6 17       	cp	r31, r22
      c8:	72 31       	cpi	r23, 0x12	; 18
      ca:	bf 00       	.word	0x00bf	; ????
      cc:	00 00       	nop
      ce:	80 3f       	cpi	r24, 0xF0	; 240
      d0:	08 00       	.word	0x0008	; ????
      d2:	00 00       	nop
      d4:	be 92       	st	-X, r11
      d6:	24 49       	sbci	r18, 0x94	; 148
      d8:	12 3e       	cpi	r17, 0xE2	; 226
      da:	ab aa       	std	Y+51, r10	; 0x33
      dc:	aa 2a       	or	r10, r26
      de:	be cd       	rjmp	.-1156   	; 0xfffffc5c <__eeprom_end+0xff7efc5c>
      e0:	cc cc       	rjmp	.-1640   	; 0xfffffa7a <__eeprom_end+0xff7efa7a>
      e2:	4c 3e       	cpi	r20, 0xEC	; 236
      e4:	00 00       	nop
      e6:	00 80       	ld	r0, Z
      e8:	be ab       	std	Y+54, r27	; 0x36
      ea:	aa aa       	std	Y+50, r10	; 0x32
      ec:	aa 3e       	cpi	r26, 0xEA	; 234
      ee:	00 00       	nop
      f0:	00 00       	nop
      f2:	bf 00       	.word	0x00bf	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	00 00       	nop
      fa:	00 00       	nop
      fc:	00 08       	sbc	r0, r0
      fe:	41 78       	andi	r20, 0x81	; 129
     100:	d3 bb       	out	0x13, r29	; 19
     102:	43 87       	std	Z+11, r20	; 0x0b
     104:	d1 13       	cpse	r29, r17
     106:	3d 19       	sub	r19, r13
     108:	0e 3c       	cpi	r16, 0xCE	; 206
     10a:	c3 bd       	out	0x23, r28	; 35
     10c:	42 82       	std	Z+2, r4	; 0x02
     10e:	ad 2b       	or	r26, r29
     110:	3e 68       	ori	r19, 0x8E	; 142
     112:	ec 82       	std	Y+4, r14	; 0x04
     114:	76 be       	out	0x36, r7	; 54
     116:	d9 8f       	std	Y+25, r29	; 0x19
     118:	e1 a9       	ldd	r30, Z+49	; 0x31
     11a:	3e 4c       	sbci	r19, 0xCE	; 206
     11c:	80 ef       	ldi	r24, 0xF0	; 240
     11e:	ff be       	out	0x3f, r15	; 63
     120:	01 c4       	rjmp	.+2050   	; 0x924 <__stack+0x25>
     122:	ff 7f       	andi	r31, 0xFF	; 255
     124:	3f 00       	.word	0x003f	; ????
     126:	00 00       	nop
	...

0000012a <__ctors_end>:
     12a:	11 24       	eor	r1, r1
     12c:	1f be       	out	0x3f, r1	; 63
     12e:	cf ef       	ldi	r28, 0xFF	; 255
     130:	d8 e0       	ldi	r29, 0x08	; 8
     132:	de bf       	out	0x3e, r29	; 62
     134:	cd bf       	out	0x3d, r28	; 61

00000136 <__do_copy_data>:
     136:	12 e0       	ldi	r17, 0x02	; 2
     138:	a0 e0       	ldi	r26, 0x00	; 0
     13a:	b1 e0       	ldi	r27, 0x01	; 1
     13c:	e8 ed       	ldi	r30, 0xD8	; 216
     13e:	fc e1       	ldi	r31, 0x1C	; 28
     140:	02 c0       	rjmp	.+4      	; 0x146 <__do_copy_data+0x10>
     142:	05 90       	lpm	r0, Z+
     144:	0d 92       	st	X+, r0
     146:	ae 35       	cpi	r26, 0x5E	; 94
     148:	b1 07       	cpc	r27, r17
     14a:	d9 f7       	brne	.-10     	; 0x142 <__do_copy_data+0xc>

0000014c <__do_clear_bss>:
     14c:	22 e0       	ldi	r18, 0x02	; 2
     14e:	ae e5       	ldi	r26, 0x5E	; 94
     150:	b2 e0       	ldi	r27, 0x02	; 2
     152:	01 c0       	rjmp	.+2      	; 0x156 <.do_clear_bss_start>

00000154 <.do_clear_bss_loop>:
     154:	1d 92       	st	X+, r1

00000156 <.do_clear_bss_start>:
     156:	ab 37       	cpi	r26, 0x7B	; 123
     158:	b2 07       	cpc	r27, r18
     15a:	e1 f7       	brne	.-8      	; 0x154 <.do_clear_bss_loop>
     15c:	1a d6       	rcall	.+3124   	; 0xd92 <main>
     15e:	0c 94 6a 0e 	jmp	0x1cd4	; 0x1cd4 <_exit>

00000162 <__bad_interrupt>:
     162:	4e cf       	rjmp	.-356    	; 0x0 <__vectors>

00000164 <i2cInit>:
*************************************************************************/
unsigned char i2cRepStart(unsigned char address)
{
    return i2cStart( address );

}/* i2cRepStart */
     164:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     168:	8c e0       	ldi	r24, 0x0C	; 12
     16a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
     16e:	8e e0       	ldi	r24, 0x0E	; 14
     170:	91 e0       	ldi	r25, 0x01	; 1
     172:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <puts>
     176:	08 95       	ret

00000178 <i2cStart>:
     178:	94 ea       	ldi	r25, 0xA4	; 164
     17a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     17e:	ec eb       	ldi	r30, 0xBC	; 188
     180:	f0 e0       	ldi	r31, 0x00	; 0
     182:	90 81       	ld	r25, Z
     184:	99 23       	and	r25, r25
     186:	ec f7       	brge	.-6      	; 0x182 <i2cStart+0xa>
     188:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     18c:	98 7f       	andi	r25, 0xF8	; 248
     18e:	98 30       	cpi	r25, 0x08	; 8
     190:	11 f0       	breq	.+4      	; 0x196 <i2cStart+0x1e>
     192:	90 31       	cpi	r25, 0x10	; 16
     194:	a1 f4       	brne	.+40     	; 0x1be <i2cStart+0x46>
     196:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     19a:	84 e8       	ldi	r24, 0x84	; 132
     19c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1a0:	ec eb       	ldi	r30, 0xBC	; 188
     1a2:	f0 e0       	ldi	r31, 0x00	; 0
     1a4:	80 81       	ld	r24, Z
     1a6:	88 23       	and	r24, r24
     1a8:	ec f7       	brge	.-6      	; 0x1a4 <i2cStart+0x2c>
     1aa:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1ae:	98 7f       	andi	r25, 0xF8	; 248
     1b0:	98 31       	cpi	r25, 0x18	; 24
     1b2:	39 f0       	breq	.+14     	; 0x1c2 <i2cStart+0x4a>
     1b4:	81 e0       	ldi	r24, 0x01	; 1
     1b6:	90 34       	cpi	r25, 0x40	; 64
     1b8:	29 f4       	brne	.+10     	; 0x1c4 <i2cStart+0x4c>
     1ba:	80 e0       	ldi	r24, 0x00	; 0
     1bc:	08 95       	ret
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	08 95       	ret
     1c2:	80 e0       	ldi	r24, 0x00	; 0
     1c4:	08 95       	ret

000001c6 <i2cStop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2cStop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     1c6:	84 e9       	ldi	r24, 0x94	; 148
     1c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
     1cc:	ec eb       	ldi	r30, 0xBC	; 188
     1ce:	f0 e0       	ldi	r31, 0x00	; 0
     1d0:	80 81       	ld	r24, Z
     1d2:	84 fd       	sbrc	r24, 4
     1d4:	fd cf       	rjmp	.-6      	; 0x1d0 <i2cStop+0xa>

}/* i2cStop */
     1d6:	08 95       	ret

000001d8 <i2cWrite>:
unsigned char i2cWrite( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
     1d8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     1dc:	84 e8       	ldi	r24, 0x84	; 132
     1de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
     1e2:	ec eb       	ldi	r30, 0xBC	; 188
     1e4:	f0 e0       	ldi	r31, 0x00	; 0
     1e6:	80 81       	ld	r24, Z
     1e8:	88 23       	and	r24, r24
     1ea:	ec f7       	brge	.-6      	; 0x1e6 <i2cWrite+0xe>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     1ec:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     1f0:	98 7f       	andi	r25, 0xF8	; 248
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	98 32       	cpi	r25, 0x28	; 40
     1f6:	09 f4       	brne	.+2      	; 0x1fa <i2cWrite+0x22>
     1f8:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2cWrite */
     1fa:	08 95       	ret

000001fc <i2cReadAck>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2cReadAck(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     1fc:	84 ec       	ldi	r24, 0xC4	; 196
     1fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));    
     202:	ec eb       	ldi	r30, 0xBC	; 188
     204:	f0 e0       	ldi	r31, 0x00	; 0
     206:	80 81       	ld	r24, Z
     208:	88 23       	and	r24, r24
     20a:	ec f7       	brge	.-6      	; 0x206 <i2cReadAck+0xa>

    return TWDR;
     20c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2cReadAck */
     210:	08 95       	ret

00000212 <i2cReadNack>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2cReadNack(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     212:	84 e8       	ldi	r24, 0x84	; 132
     214:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
     218:	ec eb       	ldi	r30, 0xBC	; 188
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	80 81       	ld	r24, Z
     21e:	88 23       	and	r24, r24
     220:	ec f7       	brge	.-6      	; 0x21c <i2cReadNack+0xa>
	
    return TWDR;
     222:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>

}/* i2cReadNack */
     226:	08 95       	ret

00000228 <command>:
{
	command(0x0E);
}
void noCursor()            // Hides the cursor
{
	command(0x0C);
     228:	9b b1       	in	r25, 0x0b	; 11
     22a:	9f 70       	andi	r25, 0x0F	; 15
     22c:	9b b9       	out	0x0b, r25	; 11
     22e:	9b b1       	in	r25, 0x0b	; 11
     230:	28 2f       	mov	r18, r24
     232:	20 7f       	andi	r18, 0xF0	; 240
     234:	92 2b       	or	r25, r18
     236:	9b b9       	out	0x0b, r25	; 11
     238:	28 98       	cbi	0x05, 0	; 5
     23a:	29 9a       	sbi	0x05, 1	; 5
     23c:	ef e3       	ldi	r30, 0x3F	; 63
     23e:	fc e9       	ldi	r31, 0x9C	; 156
     240:	31 97       	sbiw	r30, 0x01	; 1
     242:	f1 f7       	brne	.-4      	; 0x240 <command+0x18>
     244:	00 c0       	rjmp	.+0      	; 0x246 <command+0x1e>
     246:	00 00       	nop
     248:	29 98       	cbi	0x05, 1	; 5
     24a:	ef e3       	ldi	r30, 0x3F	; 63
     24c:	fc e9       	ldi	r31, 0x9C	; 156
     24e:	31 97       	sbiw	r30, 0x01	; 1
     250:	f1 f7       	brne	.-4      	; 0x24e <command+0x26>
     252:	00 c0       	rjmp	.+0      	; 0x254 <command+0x2c>
     254:	00 00       	nop
     256:	9b b1       	in	r25, 0x0b	; 11
     258:	9f 70       	andi	r25, 0x0F	; 15
     25a:	9b b9       	out	0x0b, r25	; 11
     25c:	2b b1       	in	r18, 0x0b	; 11
     25e:	f0 e1       	ldi	r31, 0x10	; 16
     260:	8f 02       	muls	r24, r31
     262:	c0 01       	movw	r24, r0
     264:	11 24       	eor	r1, r1
     266:	82 2b       	or	r24, r18
     268:	8b b9       	out	0x0b, r24	; 11
     26a:	28 98       	cbi	0x05, 0	; 5
     26c:	29 9a       	sbi	0x05, 1	; 5
     26e:	8f e3       	ldi	r24, 0x3F	; 63
     270:	9c e9       	ldi	r25, 0x9C	; 156
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <command+0x4a>
     276:	00 c0       	rjmp	.+0      	; 0x278 <command+0x50>
     278:	00 00       	nop
     27a:	29 98       	cbi	0x05, 1	; 5
     27c:	ef e3       	ldi	r30, 0x3F	; 63
     27e:	fc e9       	ldi	r31, 0x9C	; 156
     280:	31 97       	sbiw	r30, 0x01	; 1
     282:	f1 f7       	brne	.-4      	; 0x280 <command+0x58>
     284:	00 c0       	rjmp	.+0      	; 0x286 <command+0x5e>
     286:	00 00       	nop
     288:	08 95       	ret

0000028a <start>:
     28a:	83 e0       	ldi	r24, 0x03	; 3
     28c:	84 b9       	out	0x04, r24	; 4
     28e:	80 ef       	ldi	r24, 0xF0	; 240
     290:	8a b9       	out	0x0a, r24	; 10
     292:	88 e2       	ldi	r24, 0x28	; 40
     294:	c9 df       	rcall	.-110    	; 0x228 <command>
     296:	8c e0       	ldi	r24, 0x0C	; 12
     298:	c7 df       	rcall	.-114    	; 0x228 <command>
     29a:	86 e0       	ldi	r24, 0x06	; 6
     29c:	c5 df       	rcall	.-118    	; 0x228 <command>
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	c3 df       	rcall	.-122    	; 0x228 <command>
     2a2:	80 e8       	ldi	r24, 0x80	; 128
     2a4:	c1 cf       	rjmp	.-126    	; 0x228 <command>
     2a6:	08 95       	ret

000002a8 <data>:
     2a8:	9b b1       	in	r25, 0x0b	; 11
     2aa:	9f 70       	andi	r25, 0x0F	; 15
     2ac:	9b b9       	out	0x0b, r25	; 11
     2ae:	9b b1       	in	r25, 0x0b	; 11
     2b0:	28 2f       	mov	r18, r24
     2b2:	20 7f       	andi	r18, 0xF0	; 240
     2b4:	92 2b       	or	r25, r18
     2b6:	9b b9       	out	0x0b, r25	; 11
     2b8:	28 9a       	sbi	0x05, 0	; 5
     2ba:	29 9a       	sbi	0x05, 1	; 5
     2bc:	ef e3       	ldi	r30, 0x3F	; 63
     2be:	fc e9       	ldi	r31, 0x9C	; 156
     2c0:	31 97       	sbiw	r30, 0x01	; 1
     2c2:	f1 f7       	brne	.-4      	; 0x2c0 <data+0x18>
     2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <data+0x1e>
     2c6:	00 00       	nop
     2c8:	29 98       	cbi	0x05, 1	; 5
     2ca:	ef e3       	ldi	r30, 0x3F	; 63
     2cc:	f6 e0       	ldi	r31, 0x06	; 6
     2ce:	31 97       	sbiw	r30, 0x01	; 1
     2d0:	f1 f7       	brne	.-4      	; 0x2ce <data+0x26>
     2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <data+0x2c>
     2d4:	00 00       	nop
     2d6:	9b b1       	in	r25, 0x0b	; 11
     2d8:	9f 70       	andi	r25, 0x0F	; 15
     2da:	9b b9       	out	0x0b, r25	; 11
     2dc:	2b b1       	in	r18, 0x0b	; 11
     2de:	f0 e1       	ldi	r31, 0x10	; 16
     2e0:	8f 02       	muls	r24, r31
     2e2:	c0 01       	movw	r24, r0
     2e4:	11 24       	eor	r1, r1
     2e6:	82 2b       	or	r24, r18
     2e8:	8b b9       	out	0x0b, r24	; 11
     2ea:	28 9a       	sbi	0x05, 0	; 5
     2ec:	29 9a       	sbi	0x05, 1	; 5
     2ee:	8f e3       	ldi	r24, 0x3F	; 63
     2f0:	9c e9       	ldi	r25, 0x9C	; 156
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	f1 f7       	brne	.-4      	; 0x2f2 <data+0x4a>
     2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <data+0x50>
     2f8:	00 00       	nop
     2fa:	29 98       	cbi	0x05, 1	; 5
     2fc:	ef e3       	ldi	r30, 0x3F	; 63
     2fe:	f6 e0       	ldi	r31, 0x06	; 6
     300:	31 97       	sbiw	r30, 0x01	; 1
     302:	f1 f7       	brne	.-4      	; 0x300 <data+0x58>
     304:	00 c0       	rjmp	.+0      	; 0x306 <data+0x5e>
     306:	00 00       	nop
     308:	08 95       	ret

0000030a <sendString>:
     30a:	cf 93       	push	r28
     30c:	df 93       	push	r29
     30e:	ec 01       	movw	r28, r24
     310:	88 81       	ld	r24, Y
     312:	18 16       	cp	r1, r24
     314:	2c f4       	brge	.+10     	; 0x320 <sendString+0x16>
     316:	21 96       	adiw	r28, 0x01	; 1
     318:	c7 df       	rcall	.-114    	; 0x2a8 <data>
     31a:	89 91       	ld	r24, Y+
     31c:	18 16       	cp	r1, r24
     31e:	e4 f3       	brlt	.-8      	; 0x318 <sendString+0xe>
     320:	df 91       	pop	r29
     322:	cf 91       	pop	r28
     324:	08 95       	ret

00000326 <sendInteger>:
     326:	cf 93       	push	r28
     328:	df 93       	push	r29
     32a:	cd b7       	in	r28, 0x3d	; 61
     32c:	de b7       	in	r29, 0x3e	; 62
     32e:	28 97       	sbiw	r28, 0x08	; 8
     330:	0f b6       	in	r0, 0x3f	; 63
     332:	f8 94       	cli
     334:	de bf       	out	0x3e, r29	; 62
     336:	0f be       	out	0x3f, r0	; 63
     338:	cd bf       	out	0x3d, r28	; 61
     33a:	4a e0       	ldi	r20, 0x0A	; 10
     33c:	be 01       	movw	r22, r28
     33e:	6f 5f       	subi	r22, 0xFF	; 255
     340:	7f 4f       	sbci	r23, 0xFF	; 255
     342:	0e 94 3b 0b 	call	0x1676	; 0x1676 <__itoa_ncheck>
     346:	ce 01       	movw	r24, r28
     348:	01 96       	adiw	r24, 0x01	; 1
     34a:	df df       	rcall	.-66     	; 0x30a <sendString>
     34c:	28 96       	adiw	r28, 0x08	; 8
     34e:	0f b6       	in	r0, 0x3f	; 63
     350:	f8 94       	cli
     352:	de bf       	out	0x3e, r29	; 62
     354:	0f be       	out	0x3f, r0	; 63
     356:	cd bf       	out	0x3d, r28	; 61
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <setCursor>:
     35e:	00 97       	sbiw	r24, 0x00	; 0
     360:	21 f0       	breq	.+8      	; 0x36a <setCursor+0xc>
     362:	01 97       	sbiw	r24, 0x01	; 1
     364:	09 f4       	brne	.+2      	; 0x368 <setCursor+0xa>
     366:	3a c0       	rjmp	.+116    	; 0x3dc <setCursor+0x7e>
     368:	08 95       	ret
     36a:	60 31       	cpi	r22, 0x10	; 16
     36c:	71 05       	cpc	r23, r1
     36e:	08 f0       	brcs	.+2      	; 0x372 <setCursor+0x14>
     370:	6d c0       	rjmp	.+218    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     372:	fb 01       	movw	r30, r22
     374:	ec 5c       	subi	r30, 0xCC	; 204
     376:	ff 4f       	sbci	r31, 0xFF	; 255
     378:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__tablejump2__>
     37c:	80 e8       	ldi	r24, 0x80	; 128
     37e:	54 cf       	rjmp	.-344    	; 0x228 <command>
     380:	08 95       	ret
     382:	81 e8       	ldi	r24, 0x81	; 129
     384:	51 cf       	rjmp	.-350    	; 0x228 <command>
     386:	08 95       	ret
     388:	82 e8       	ldi	r24, 0x82	; 130
     38a:	4e cf       	rjmp	.-356    	; 0x228 <command>
     38c:	08 95       	ret
     38e:	83 e8       	ldi	r24, 0x83	; 131
     390:	4b cf       	rjmp	.-362    	; 0x228 <command>
     392:	08 95       	ret
     394:	84 e8       	ldi	r24, 0x84	; 132
     396:	48 cf       	rjmp	.-368    	; 0x228 <command>
     398:	08 95       	ret
     39a:	85 e8       	ldi	r24, 0x85	; 133
     39c:	45 cf       	rjmp	.-374    	; 0x228 <command>
     39e:	08 95       	ret
     3a0:	86 e8       	ldi	r24, 0x86	; 134
     3a2:	42 cf       	rjmp	.-380    	; 0x228 <command>
     3a4:	08 95       	ret
     3a6:	87 e8       	ldi	r24, 0x87	; 135
     3a8:	3f cf       	rjmp	.-386    	; 0x228 <command>
     3aa:	08 95       	ret
     3ac:	88 e8       	ldi	r24, 0x88	; 136
     3ae:	3c cf       	rjmp	.-392    	; 0x228 <command>
     3b0:	08 95       	ret
     3b2:	89 e8       	ldi	r24, 0x89	; 137
     3b4:	39 cf       	rjmp	.-398    	; 0x228 <command>
     3b6:	08 95       	ret
     3b8:	8a e8       	ldi	r24, 0x8A	; 138
     3ba:	36 cf       	rjmp	.-404    	; 0x228 <command>
     3bc:	08 95       	ret
     3be:	8b e8       	ldi	r24, 0x8B	; 139
     3c0:	33 cf       	rjmp	.-410    	; 0x228 <command>
     3c2:	08 95       	ret
     3c4:	8c e8       	ldi	r24, 0x8C	; 140
     3c6:	30 cf       	rjmp	.-416    	; 0x228 <command>
     3c8:	08 95       	ret
     3ca:	8d e8       	ldi	r24, 0x8D	; 141
     3cc:	2d cf       	rjmp	.-422    	; 0x228 <command>
     3ce:	08 95       	ret
     3d0:	8e e8       	ldi	r24, 0x8E	; 142
     3d2:	2a cf       	rjmp	.-428    	; 0x228 <command>
     3d4:	08 95       	ret
     3d6:	8f e8       	ldi	r24, 0x8F	; 143
     3d8:	27 cf       	rjmp	.-434    	; 0x228 <command>
     3da:	08 95       	ret
     3dc:	60 31       	cpi	r22, 0x10	; 16
     3de:	71 05       	cpc	r23, r1
     3e0:	08 f0       	brcs	.+2      	; 0x3e4 <setCursor+0x86>
     3e2:	34 c0       	rjmp	.+104    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     3e4:	fb 01       	movw	r30, r22
     3e6:	ec 5b       	subi	r30, 0xBC	; 188
     3e8:	ff 4f       	sbci	r31, 0xFF	; 255
     3ea:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__tablejump2__>
     3ee:	80 ec       	ldi	r24, 0xC0	; 192
     3f0:	1b cf       	rjmp	.-458    	; 0x228 <command>
     3f2:	08 95       	ret
     3f4:	81 ec       	ldi	r24, 0xC1	; 193
     3f6:	18 cf       	rjmp	.-464    	; 0x228 <command>
     3f8:	08 95       	ret
     3fa:	82 ec       	ldi	r24, 0xC2	; 194
     3fc:	15 cf       	rjmp	.-470    	; 0x228 <command>
     3fe:	08 95       	ret
     400:	83 ec       	ldi	r24, 0xC3	; 195
     402:	12 cf       	rjmp	.-476    	; 0x228 <command>
     404:	08 95       	ret
     406:	84 ec       	ldi	r24, 0xC4	; 196
     408:	0f cf       	rjmp	.-482    	; 0x228 <command>
     40a:	08 95       	ret
     40c:	85 ec       	ldi	r24, 0xC5	; 197
     40e:	0c cf       	rjmp	.-488    	; 0x228 <command>
     410:	08 95       	ret
     412:	86 ec       	ldi	r24, 0xC6	; 198
     414:	09 cf       	rjmp	.-494    	; 0x228 <command>
     416:	08 95       	ret
     418:	87 ec       	ldi	r24, 0xC7	; 199
     41a:	06 cf       	rjmp	.-500    	; 0x228 <command>
     41c:	08 95       	ret
     41e:	88 ec       	ldi	r24, 0xC8	; 200
     420:	03 cf       	rjmp	.-506    	; 0x228 <command>
     422:	08 95       	ret
     424:	89 ec       	ldi	r24, 0xC9	; 201
     426:	00 cf       	rjmp	.-512    	; 0x228 <command>
     428:	08 95       	ret
     42a:	8a ec       	ldi	r24, 0xCA	; 202
     42c:	fd ce       	rjmp	.-518    	; 0x228 <command>
     42e:	08 95       	ret
     430:	8b ec       	ldi	r24, 0xCB	; 203
     432:	fa ce       	rjmp	.-524    	; 0x228 <command>
     434:	08 95       	ret
     436:	8c ec       	ldi	r24, 0xCC	; 204
     438:	f7 ce       	rjmp	.-530    	; 0x228 <command>
     43a:	08 95       	ret
     43c:	8d ec       	ldi	r24, 0xCD	; 205
     43e:	f4 ce       	rjmp	.-536    	; 0x228 <command>
     440:	08 95       	ret
     442:	8e ec       	ldi	r24, 0xCE	; 206
     444:	f1 ce       	rjmp	.-542    	; 0x228 <command>
     446:	08 95       	ret
     448:	8f ec       	ldi	r24, 0xCF	; 207
     44a:	ee ce       	rjmp	.-548    	; 0x228 <command>
     44c:	08 95       	ret

0000044e <clearScreen>:
     44e:	81 e0       	ldi	r24, 0x01	; 1
     450:	eb ce       	rjmp	.-554    	; 0x228 <command>
     452:	08 95       	ret

00000454 <blink>:



void blink()               // Shows cursor as a blinking black spot
{
	command(0x0F);
     454:	8f e0       	ldi	r24, 0x0F	; 15
     456:	e8 ce       	rjmp	.-560    	; 0x228 <command>
     458:	08 95       	ret

0000045a <noBlink>:
			case 13:
			command(0xCD);break;
			case 14:
			command(0xCE);break;
			case 15:
			command(0xCF);break;
     45a:	8c e0       	ldi	r24, 0x0C	; 12
{
	command(0x0F);
}
void noBlink()             // Hides the cursor
{
	command(0x0C);
     45c:	e5 ce       	rjmp	.-566    	; 0x228 <command>
     45e:	08 95       	ret

00000460 <uartPutch>:
  UCSR0B = (1<<RXEN0)|(1<<TXEN0); 		// enable Rx & Tx
  UCSR0C=  (1<<UCSZ01)|(1<<UCSZ00);  	       // config USART; 8N1
  printf("\nUSART INITIALIZED\n");
}

int uartPutch(char ch, FILE *stream) {
     460:	cf 93       	push	r28
     462:	c8 2f       	mov	r28, r24
   if (ch == '\n')
     464:	8a 30       	cpi	r24, 0x0A	; 10
     466:	11 f4       	brne	.+4      	; 0x46c <uartPutch+0xc>
    uartPutch('\r', stream);
     468:	8d e0       	ldi	r24, 0x0D	; 13
     46a:	fa df       	rcall	.-12     	; 0x460 <uartPutch>
   while (!(UCSR0A & (1<<UDRE0)));
     46c:	e0 ec       	ldi	r30, 0xC0	; 192
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	80 81       	ld	r24, Z
     472:	85 ff       	sbrs	r24, 5
     474:	fd cf       	rjmp	.-6      	; 0x470 <uartPutch+0x10>
   UDR0=ch;
     476:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
   return 0;
}
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	cf 91       	pop	r28
     480:	08 95       	ret

00000482 <uartGetch>:

int uartGetch(FILE *stream) {
     482:	cf 93       	push	r28
     484:	bc 01       	movw	r22, r24
   unsigned char ch;
   while (!(UCSR0A & (1<<RXC0)));
     486:	e0 ec       	ldi	r30, 0xC0	; 192
     488:	f0 e0       	ldi	r31, 0x00	; 0
     48a:	90 81       	ld	r25, Z
     48c:	99 23       	and	r25, r25
     48e:	ec f7       	brge	.-6      	; 0x48a <uartGetch+0x8>
   ch=UDR0;
     490:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

   /* Echo the Output Back to terminal */
   uartPutch(ch,stream);
     494:	8c 2f       	mov	r24, r28
     496:	e4 df       	rcall	.-56     	; 0x460 <uartPutch>

   return ch;
}
     498:	8c 2f       	mov	r24, r28
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	cf 91       	pop	r28
     49e:	08 95       	ret

000004a0 <uartInit>:
void uartInit(void);
int uartPutch(char ch, FILE *stream);
int uartGetch(FILE *stream);

void uartInit(void) {
  UBRR0H = (((F_CPU/BAUD_RATE)/16)-1)>>8;	// set baud rate
     4a0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  UBRR0L = (((F_CPU/BAUD_RATE)/16)-1);
     4a4:	87 e6       	ldi	r24, 0x67	; 103
     4a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  UCSR0B = (1<<RXEN0)|(1<<TXEN0); 		// enable Rx & Tx
     4aa:	88 e1       	ldi	r24, 0x18	; 24
     4ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  UCSR0C=  (1<<UCSZ01)|(1<<UCSZ00);  	       // config USART; 8N1
     4b0:	86 e0       	ldi	r24, 0x06	; 6
     4b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  printf("\nUSART INITIALIZED\n");
     4b6:	8f e1       	ldi	r24, 0x1F	; 31
     4b8:	91 e0       	ldi	r25, 0x01	; 1
     4ba:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <puts>
     4be:	08 95       	ret

000004c0 <begin>:
uint32_t readRawPressure(void);
int32_t readPressure(void);
float readAbsAltitude(void);

// Returns 0 if succeeds, 1 if fails
uint8_t begin(uint8_t mode) {
     4c0:	cf 93       	push	r28
	oversampling = mode;
     4c2:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <oversampling>
	i2cInit();
     4c6:	4e de       	rcall	.-868    	; 0x164 <i2cInit>
	// 
	if(i2cStart(I2CADDR+I2C_WRITE)){
     4c8:	8e ee       	ldi	r24, 0xEE	; 238
     4ca:	56 de       	rcall	.-852    	; 0x178 <i2cStart>
     4cc:	c8 2f       	mov	r28, r24
     4ce:	88 23       	and	r24, r24
     4d0:	31 f0       	breq	.+12     	; 0x4de <begin+0x1e>
		printf("\nAddress registering failed\n");
     4d2:	82 e3       	ldi	r24, 0x32	; 50
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <puts>
		return 1;
     4da:	c1 e0       	ldi	r28, 0x01	; 1
	}
	i2cWrite(AC1);
     4dc:	84 c1       	rjmp	.+776    	; 0x7e6 <begin+0x326>
     4de:	8a ea       	ldi	r24, 0xAA	; 170
	i2cStop();
     4e0:	7b de       	rcall	.-778    	; 0x1d8 <i2cWrite>
	i2cStart(I2CADDR+I2C_READ);
     4e2:	71 de       	rcall	.-798    	; 0x1c6 <i2cStop>
     4e4:	8f ee       	ldi	r24, 0xEF	; 239
     4e6:	48 de       	rcall	.-880    	; 0x178 <i2cStart>
	ac1 = i2cReadAck();
     4e8:	89 de       	rcall	.-750    	; 0x1fc <i2cReadAck>
	ac1 <<= 8;
     4ea:	10 92 62 02 	sts	0x0262, r1	; 0x800262 <ac1>
     4ee:	80 93 63 02 	sts	0x0263, r24	; 0x800263 <ac1+0x1>
	ac1 |= i2cReadNack();
     4f2:	8f de       	rcall	.-738    	; 0x212 <i2cReadNack>
     4f4:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <ac1>
     4f8:	30 91 63 02 	lds	r19, 0x0263	; 0x800263 <ac1+0x1>
     4fc:	28 2b       	or	r18, r24
     4fe:	30 93 63 02 	sts	0x0263, r19	; 0x800263 <ac1+0x1>
	i2cStop();
     502:	20 93 62 02 	sts	0x0262, r18	; 0x800262 <ac1>
	
	i2cStart(I2CADDR+I2C_WRITE);
     506:	5f de       	rcall	.-834    	; 0x1c6 <i2cStop>
     508:	8e ee       	ldi	r24, 0xEE	; 238
	i2cWrite(AC2);
     50a:	36 de       	rcall	.-916    	; 0x178 <i2cStart>
     50c:	8c ea       	ldi	r24, 0xAC	; 172
	i2cStop();
     50e:	64 de       	rcall	.-824    	; 0x1d8 <i2cWrite>
     510:	5a de       	rcall	.-844    	; 0x1c6 <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     512:	8f ee       	ldi	r24, 0xEF	; 239
     514:	31 de       	rcall	.-926    	; 0x178 <i2cStart>
     516:	72 de       	rcall	.-796    	; 0x1fc <i2cReadAck>
	ac2 = i2cReadAck();
     518:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <ac2>
	ac2 <<= 8;
     51c:	80 93 6b 02 	sts	0x026B, r24	; 0x80026b <ac2+0x1>
     520:	78 de       	rcall	.-784    	; 0x212 <i2cReadNack>
	ac2 |= i2cReadNack();
     522:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <ac2>
     526:	30 91 6b 02 	lds	r19, 0x026B	; 0x80026b <ac2+0x1>
     52a:	28 2b       	or	r18, r24
     52c:	30 93 6b 02 	sts	0x026B, r19	; 0x80026b <ac2+0x1>
	i2cStop();
     530:	20 93 6a 02 	sts	0x026A, r18	; 0x80026a <ac2>
	
	i2cStart(I2CADDR+I2C_WRITE);
     534:	48 de       	rcall	.-880    	; 0x1c6 <i2cStop>
     536:	8e ee       	ldi	r24, 0xEE	; 238
     538:	1f de       	rcall	.-962    	; 0x178 <i2cStart>
	i2cWrite(AC3);
     53a:	8e ea       	ldi	r24, 0xAE	; 174
     53c:	4d de       	rcall	.-870    	; 0x1d8 <i2cWrite>
     53e:	43 de       	rcall	.-890    	; 0x1c6 <i2cStop>
	i2cStop();
     540:	8f ee       	ldi	r24, 0xEF	; 239
	i2cStart(I2CADDR+I2C_READ);
     542:	1a de       	rcall	.-972    	; 0x178 <i2cStart>
     544:	5b de       	rcall	.-842    	; 0x1fc <i2cReadAck>
	ac3 = i2cReadAck();
     546:	10 92 73 02 	sts	0x0273, r1	; 0x800273 <ac3>
	ac3 <<= 8;
     54a:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <ac3+0x1>
	ac3 |= i2cReadNack();
     54e:	61 de       	rcall	.-830    	; 0x212 <i2cReadNack>
     550:	20 91 73 02 	lds	r18, 0x0273	; 0x800273 <ac3>
     554:	30 91 74 02 	lds	r19, 0x0274	; 0x800274 <ac3+0x1>
     558:	28 2b       	or	r18, r24
     55a:	30 93 74 02 	sts	0x0274, r19	; 0x800274 <ac3+0x1>
     55e:	20 93 73 02 	sts	0x0273, r18	; 0x800273 <ac3>
	i2cStop();
     562:	31 de       	rcall	.-926    	; 0x1c6 <i2cStop>
	
	i2cStart(I2CADDR+I2C_WRITE);
     564:	8e ee       	ldi	r24, 0xEE	; 238
     566:	08 de       	rcall	.-1008   	; 0x178 <i2cStart>
	i2cWrite(AC4);
     568:	80 eb       	ldi	r24, 0xB0	; 176
     56a:	36 de       	rcall	.-916    	; 0x1d8 <i2cWrite>
	i2cStop();
     56c:	2c de       	rcall	.-936    	; 0x1c6 <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     56e:	8f ee       	ldi	r24, 0xEF	; 239
     570:	03 de       	rcall	.-1018   	; 0x178 <i2cStart>
	ac4 = i2cReadAck();
     572:	44 de       	rcall	.-888    	; 0x1fc <i2cReadAck>
     574:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <ac4>
	ac4 <<= 8;
     578:	80 93 6f 02 	sts	0x026F, r24	; 0x80026f <ac4+0x1>
	ac4 |= i2cReadNack();
     57c:	4a de       	rcall	.-876    	; 0x212 <i2cReadNack>
     57e:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <ac4>
     582:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <ac4+0x1>
     586:	28 2b       	or	r18, r24
     588:	30 93 6f 02 	sts	0x026F, r19	; 0x80026f <ac4+0x1>
     58c:	20 93 6e 02 	sts	0x026E, r18	; 0x80026e <ac4>
	i2cStop();
	
	i2cStart(I2CADDR+I2C_WRITE);
     590:	1a de       	rcall	.-972    	; 0x1c6 <i2cStop>
	i2cWrite(AC5);
     592:	8e ee       	ldi	r24, 0xEE	; 238
     594:	f1 dd       	rcall	.-1054   	; 0x178 <i2cStart>
     596:	82 eb       	ldi	r24, 0xB2	; 178
	i2cStop();
     598:	1f de       	rcall	.-962    	; 0x1d8 <i2cWrite>
	i2cStart(I2CADDR+I2C_READ);
     59a:	15 de       	rcall	.-982    	; 0x1c6 <i2cStop>
     59c:	8f ee       	ldi	r24, 0xEF	; 239
     59e:	ec dd       	rcall	.-1064   	; 0x178 <i2cStart>
	ac5 = i2cReadAck();
     5a0:	2d de       	rcall	.-934    	; 0x1fc <i2cReadAck>
     5a2:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <ac5>
	ac5 <<= 8;
     5a6:	80 93 69 02 	sts	0x0269, r24	; 0x800269 <ac5+0x1>
	ac5 |= i2cReadNack();
     5aa:	33 de       	rcall	.-922    	; 0x212 <i2cReadNack>
     5ac:	20 91 68 02 	lds	r18, 0x0268	; 0x800268 <ac5>
     5b0:	30 91 69 02 	lds	r19, 0x0269	; 0x800269 <ac5+0x1>
     5b4:	28 2b       	or	r18, r24
     5b6:	30 93 69 02 	sts	0x0269, r19	; 0x800269 <ac5+0x1>
	i2cStop();
	
	i2cStart(I2CADDR+I2C_WRITE);
     5ba:	20 93 68 02 	sts	0x0268, r18	; 0x800268 <ac5>
     5be:	03 de       	rcall	.-1018   	; 0x1c6 <i2cStop>
	i2cWrite(AC6);
     5c0:	8e ee       	ldi	r24, 0xEE	; 238
     5c2:	da dd       	rcall	.-1100   	; 0x178 <i2cStart>
     5c4:	84 eb       	ldi	r24, 0xB4	; 180
	i2cStop();
     5c6:	08 de       	rcall	.-1008   	; 0x1d8 <i2cWrite>
     5c8:	fe dd       	rcall	.-1028   	; 0x1c6 <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     5ca:	8f ee       	ldi	r24, 0xEF	; 239
     5cc:	d5 dd       	rcall	.-1110   	; 0x178 <i2cStart>
	ac6 = i2cReadAck();
     5ce:	16 de       	rcall	.-980    	; 0x1fc <i2cReadAck>
	ac6 <<= 8;
     5d0:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <ac6>
	ac6 |= i2cReadNack();
     5d4:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <ac6+0x1>
     5d8:	1c de       	rcall	.-968    	; 0x212 <i2cReadNack>
     5da:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <ac6>
     5de:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <ac6+0x1>
     5e2:	28 2b       	or	r18, r24
     5e4:	30 93 67 02 	sts	0x0267, r19	; 0x800267 <ac6+0x1>
	i2cStop();
     5e8:	20 93 66 02 	sts	0x0266, r18	; 0x800266 <ac6>
	
	i2cStart(I2CADDR+I2C_WRITE);
     5ec:	ec dd       	rcall	.-1064   	; 0x1c6 <i2cStop>
	i2cWrite(B1);
     5ee:	8e ee       	ldi	r24, 0xEE	; 238
     5f0:	c3 dd       	rcall	.-1146   	; 0x178 <i2cStart>
	i2cStop();
     5f2:	86 eb       	ldi	r24, 0xB6	; 182
	i2cStart(I2CADDR+I2C_READ);
     5f4:	f1 dd       	rcall	.-1054   	; 0x1d8 <i2cWrite>
     5f6:	e7 dd       	rcall	.-1074   	; 0x1c6 <i2cStop>
	b1 = i2cReadAck();
     5f8:	8f ee       	ldi	r24, 0xEF	; 239
     5fa:	be dd       	rcall	.-1156   	; 0x178 <i2cStart>
	b1 <<= 8;
     5fc:	ff dd       	rcall	.-1026   	; 0x1fc <i2cReadAck>
     5fe:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <b1>
	b1 |= i2cReadNack();
     602:	80 93 65 02 	sts	0x0265, r24	; 0x800265 <b1+0x1>
     606:	05 de       	rcall	.-1014   	; 0x212 <i2cReadNack>
     608:	20 91 64 02 	lds	r18, 0x0264	; 0x800264 <b1>
     60c:	30 91 65 02 	lds	r19, 0x0265	; 0x800265 <b1+0x1>
     610:	28 2b       	or	r18, r24
     612:	30 93 65 02 	sts	0x0265, r19	; 0x800265 <b1+0x1>
	i2cStop();
     616:	20 93 64 02 	sts	0x0264, r18	; 0x800264 <b1>
	
	i2cStart(I2CADDR+I2C_WRITE);
     61a:	d5 dd       	rcall	.-1110   	; 0x1c6 <i2cStop>
	i2cWrite(B2);
     61c:	8e ee       	ldi	r24, 0xEE	; 238
     61e:	ac dd       	rcall	.-1192   	; 0x178 <i2cStart>
	i2cStop();
     620:	88 eb       	ldi	r24, 0xB8	; 184
     622:	da dd       	rcall	.-1100   	; 0x1d8 <i2cWrite>
	i2cStart(I2CADDR+I2C_READ);
     624:	d0 dd       	rcall	.-1120   	; 0x1c6 <i2cStop>
     626:	8f ee       	ldi	r24, 0xEF	; 239
	b2 = i2cReadAck();
     628:	a7 dd       	rcall	.-1202   	; 0x178 <i2cStart>
     62a:	e8 dd       	rcall	.-1072   	; 0x1fc <i2cReadAck>
	b2 <<= 8;
     62c:	10 92 5e 02 	sts	0x025E, r1	; 0x80025e <__data_end>
     630:	80 93 5f 02 	sts	0x025F, r24	; 0x80025f <__data_end+0x1>
	b2 |= i2cReadNack();
     634:	ee dd       	rcall	.-1060   	; 0x212 <i2cReadNack>
     636:	20 91 5e 02 	lds	r18, 0x025E	; 0x80025e <__data_end>
     63a:	30 91 5f 02 	lds	r19, 0x025F	; 0x80025f <__data_end+0x1>
     63e:	28 2b       	or	r18, r24
     640:	30 93 5f 02 	sts	0x025F, r19	; 0x80025f <__data_end+0x1>
	i2cStop();
     644:	20 93 5e 02 	sts	0x025E, r18	; 0x80025e <__data_end>
	
	i2cStart(I2CADDR+I2C_WRITE);
     648:	be dd       	rcall	.-1156   	; 0x1c6 <i2cStop>
	i2cWrite(MB);
     64a:	8e ee       	ldi	r24, 0xEE	; 238
     64c:	95 dd       	rcall	.-1238   	; 0x178 <i2cStart>
     64e:	8a eb       	ldi	r24, 0xBA	; 186
	i2cStop();
     650:	c3 dd       	rcall	.-1146   	; 0x1d8 <i2cWrite>
     652:	b9 dd       	rcall	.-1166   	; 0x1c6 <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     654:	8f ee       	ldi	r24, 0xEF	; 239
     656:	90 dd       	rcall	.-1248   	; 0x178 <i2cStart>
     658:	d1 dd       	rcall	.-1118   	; 0x1fc <i2cReadAck>
	mb = i2cReadAck();
     65a:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <mb>
	mb <<= 8;
     65e:	80 93 61 02 	sts	0x0261, r24	; 0x800261 <mb+0x1>
     662:	d7 dd       	rcall	.-1106   	; 0x212 <i2cReadNack>
	mb |= i2cReadNack();
     664:	20 91 60 02 	lds	r18, 0x0260	; 0x800260 <mb>
     668:	30 91 61 02 	lds	r19, 0x0261	; 0x800261 <mb+0x1>
     66c:	28 2b       	or	r18, r24
     66e:	30 93 61 02 	sts	0x0261, r19	; 0x800261 <mb+0x1>
     672:	20 93 60 02 	sts	0x0260, r18	; 0x800260 <mb>
     676:	a7 dd       	rcall	.-1202   	; 0x1c6 <i2cStop>
	i2cStop();
     678:	8e ee       	ldi	r24, 0xEE	; 238
     67a:	7e dd       	rcall	.-1284   	; 0x178 <i2cStart>
	
	i2cStart(I2CADDR+I2C_WRITE);
     67c:	8c eb       	ldi	r24, 0xBC	; 188
     67e:	ac dd       	rcall	.-1192   	; 0x1d8 <i2cWrite>
     680:	a2 dd       	rcall	.-1212   	; 0x1c6 <i2cStop>
	i2cWrite(MC);
     682:	8f ee       	ldi	r24, 0xEF	; 239
     684:	79 dd       	rcall	.-1294   	; 0x178 <i2cStart>
	i2cStop();
     686:	ba dd       	rcall	.-1164   	; 0x1fc <i2cReadAck>
     688:	10 92 71 02 	sts	0x0271, r1	; 0x800271 <mc>
	i2cStart(I2CADDR+I2C_READ);
     68c:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <mc+0x1>
	mc = i2cReadAck();
     690:	c0 dd       	rcall	.-1152   	; 0x212 <i2cReadNack>
     692:	20 91 71 02 	lds	r18, 0x0271	; 0x800271 <mc>
	mc <<= 8;
     696:	30 91 72 02 	lds	r19, 0x0272	; 0x800272 <mc+0x1>
	mc |= i2cReadNack();
     69a:	28 2b       	or	r18, r24
     69c:	30 93 72 02 	sts	0x0272, r19	; 0x800272 <mc+0x1>
     6a0:	20 93 71 02 	sts	0x0271, r18	; 0x800271 <mc>
     6a4:	90 dd       	rcall	.-1248   	; 0x1c6 <i2cStop>
     6a6:	8e ee       	ldi	r24, 0xEE	; 238
     6a8:	67 dd       	rcall	.-1330   	; 0x178 <i2cStart>
     6aa:	8e eb       	ldi	r24, 0xBE	; 190
     6ac:	95 dd       	rcall	.-1238   	; 0x1d8 <i2cWrite>
	i2cStop();
     6ae:	8b dd       	rcall	.-1258   	; 0x1c6 <i2cStop>
     6b0:	8f ee       	ldi	r24, 0xEF	; 239
	
	i2cStart(I2CADDR+I2C_WRITE);
     6b2:	62 dd       	rcall	.-1340   	; 0x178 <i2cStart>
     6b4:	a3 dd       	rcall	.-1210   	; 0x1fc <i2cReadAck>
     6b6:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <md>
	i2cWrite(MD);
     6ba:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <md+0x1>
	i2cStop();
     6be:	a9 dd       	rcall	.-1198   	; 0x212 <i2cReadNack>
	i2cStart(I2CADDR+I2C_READ);
     6c0:	20 91 6c 02 	lds	r18, 0x026C	; 0x80026c <md>
     6c4:	30 91 6d 02 	lds	r19, 0x026D	; 0x80026d <md+0x1>
	md = i2cReadAck();
     6c8:	28 2b       	or	r18, r24
	md <<= 8;
     6ca:	30 93 6d 02 	sts	0x026D, r19	; 0x80026d <md+0x1>
     6ce:	20 93 6c 02 	sts	0x026C, r18	; 0x80026c <md>
	md |= i2cReadNack();
     6d2:	79 dd       	rcall	.-1294   	; 0x1c6 <i2cStop>
     6d4:	80 91 63 02 	lds	r24, 0x0263	; 0x800263 <ac1+0x1>
     6d8:	8f 93       	push	r24
     6da:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <ac1>
     6de:	8f 93       	push	r24
     6e0:	8e e4       	ldi	r24, 0x4E	; 78
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	9f 93       	push	r25
	i2cStop();
     6e6:	8f 93       	push	r24
	
	printf ("\nAC1 = %d\n",ac1);
     6e8:	e9 d7       	rcall	.+4050   	; 0x16bc <printf>
     6ea:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <ac2+0x1>
     6ee:	8f 93       	push	r24
     6f0:	80 91 6a 02 	lds	r24, 0x026A	; 0x80026a <ac2>
     6f4:	8f 93       	push	r24
     6f6:	89 e5       	ldi	r24, 0x59	; 89
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	9f 93       	push	r25
     6fc:	8f 93       	push	r24
	printf ("\nAC2 = %d\n",ac2);
     6fe:	de d7       	rcall	.+4028   	; 0x16bc <printf>
     700:	80 91 74 02 	lds	r24, 0x0274	; 0x800274 <ac3+0x1>
     704:	8f 93       	push	r24
     706:	80 91 73 02 	lds	r24, 0x0273	; 0x800273 <ac3>
     70a:	8f 93       	push	r24
     70c:	84 e6       	ldi	r24, 0x64	; 100
     70e:	91 e0       	ldi	r25, 0x01	; 1
     710:	9f 93       	push	r25
     712:	8f 93       	push	r24
     714:	d3 d7       	rcall	.+4006   	; 0x16bc <printf>
	printf ("\nAC3 = %d\n",ac3);
     716:	80 91 6f 02 	lds	r24, 0x026F	; 0x80026f <ac4+0x1>
     71a:	8f 93       	push	r24
     71c:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <ac4>
     720:	8f 93       	push	r24
     722:	8f e6       	ldi	r24, 0x6F	; 111
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	9f 93       	push	r25
     728:	8f 93       	push	r24
     72a:	c8 d7       	rcall	.+3984   	; 0x16bc <printf>
	printf ("\nAC4 = %u\n",ac4);
     72c:	80 91 69 02 	lds	r24, 0x0269	; 0x800269 <ac5+0x1>
     730:	8f 93       	push	r24
     732:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <ac5>
     736:	8f 93       	push	r24
     738:	8a e7       	ldi	r24, 0x7A	; 122
     73a:	91 e0       	ldi	r25, 0x01	; 1
     73c:	9f 93       	push	r25
     73e:	8f 93       	push	r24
     740:	bd d7       	rcall	.+3962   	; 0x16bc <printf>
	printf ("\nAC5 = %u\n",ac5);
     742:	80 91 67 02 	lds	r24, 0x0267	; 0x800267 <ac6+0x1>
     746:	8f 93       	push	r24
     748:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <ac6>
     74c:	8f 93       	push	r24
     74e:	85 e8       	ldi	r24, 0x85	; 133
     750:	91 e0       	ldi	r25, 0x01	; 1
     752:	9f 93       	push	r25
     754:	8f 93       	push	r24
     756:	b2 d7       	rcall	.+3940   	; 0x16bc <printf>
	printf ("\nAC6 = %u\n",ac6);
     758:	80 91 65 02 	lds	r24, 0x0265	; 0x800265 <b1+0x1>
     75c:	8f 93       	push	r24
     75e:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <b1>
     762:	8f 93       	push	r24
     764:	80 e9       	ldi	r24, 0x90	; 144
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	9f 93       	push	r25
     76a:	8f 93       	push	r24
     76c:	a7 d7       	rcall	.+3918   	; 0x16bc <printf>
     76e:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <__data_end+0x1>
	printf ("\nB1 = %d\n",b1);
     772:	8f 93       	push	r24
     774:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <__data_end>
     778:	8f 93       	push	r24
     77a:	8a e9       	ldi	r24, 0x9A	; 154
     77c:	91 e0       	ldi	r25, 0x01	; 1
     77e:	9f 93       	push	r25
     780:	8f 93       	push	r24
     782:	9c d7       	rcall	.+3896   	; 0x16bc <printf>
     784:	8d b7       	in	r24, 0x3d	; 61
     786:	9e b7       	in	r25, 0x3e	; 62
	printf ("\nB2 = %d\n",b2);
     788:	80 96       	adiw	r24, 0x20	; 32
     78a:	0f b6       	in	r0, 0x3f	; 63
     78c:	f8 94       	cli
     78e:	9e bf       	out	0x3e, r25	; 62
     790:	0f be       	out	0x3f, r0	; 63
     792:	8d bf       	out	0x3d, r24	; 61
     794:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <mb+0x1>
     798:	8f 93       	push	r24
     79a:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <mb>
     79e:	8f 93       	push	r24
	printf ("\nMB = %d\n",mb);
     7a0:	84 ea       	ldi	r24, 0xA4	; 164
     7a2:	91 e0       	ldi	r25, 0x01	; 1
     7a4:	9f 93       	push	r25
     7a6:	8f 93       	push	r24
     7a8:	89 d7       	rcall	.+3858   	; 0x16bc <printf>
     7aa:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <mc+0x1>
     7ae:	8f 93       	push	r24
     7b0:	80 91 71 02 	lds	r24, 0x0271	; 0x800271 <mc>
     7b4:	8f 93       	push	r24
     7b6:	8e ea       	ldi	r24, 0xAE	; 174
     7b8:	91 e0       	ldi	r25, 0x01	; 1
     7ba:	9f 93       	push	r25
     7bc:	8f 93       	push	r24
     7be:	7e d7       	rcall	.+3836   	; 0x16bc <printf>
     7c0:	80 91 6d 02 	lds	r24, 0x026D	; 0x80026d <md+0x1>
     7c4:	8f 93       	push	r24
     7c6:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <md>
	printf ("\nMC = %d\n",mc);
     7ca:	8f 93       	push	r24
     7cc:	88 eb       	ldi	r24, 0xB8	; 184
     7ce:	91 e0       	ldi	r25, 0x01	; 1
     7d0:	9f 93       	push	r25
     7d2:	8f 93       	push	r24
     7d4:	73 d7       	rcall	.+3814   	; 0x16bc <printf>
     7d6:	8d b7       	in	r24, 0x3d	; 61
     7d8:	9e b7       	in	r25, 0x3e	; 62
     7da:	0c 96       	adiw	r24, 0x0c	; 12
     7dc:	0f b6       	in	r0, 0x3f	; 63
     7de:	f8 94       	cli
	printf ("\nMD = %d\n",md);
     7e0:	9e bf       	out	0x3e, r25	; 62
     7e2:	0f be       	out	0x3f, r0	; 63
     7e4:	8d bf       	out	0x3d, r24	; 61
     7e6:	8c 2f       	mov	r24, r28
     7e8:	cf 91       	pop	r28
     7ea:	08 95       	ret

000007ec <readRawTemperature>:
     7ec:	cf 93       	push	r28
     7ee:	df 93       	push	r29
     7f0:	8e ee       	ldi	r24, 0xEE	; 238
     7f2:	c2 dc       	rcall	.-1660   	; 0x178 <i2cStart>
     7f4:	84 ef       	ldi	r24, 0xF4	; 244
     7f6:	f0 dc       	rcall	.-1568   	; 0x1d8 <i2cWrite>
	
	return 0;
     7f8:	8e e2       	ldi	r24, 0x2E	; 46
     7fa:	ee dc       	rcall	.-1572   	; 0x1d8 <i2cWrite>
     7fc:	e4 dc       	rcall	.-1592   	; 0x1c6 <i2cStop>
     7fe:	8f e4       	ldi	r24, 0x4F	; 79
     800:	96 e4       	ldi	r25, 0x46	; 70
     802:	01 97       	sbiw	r24, 0x01	; 1
     804:	f1 f7       	brne	.-4      	; 0x802 <readRawTemperature+0x16>
     806:	00 c0       	rjmp	.+0      	; 0x808 <readRawTemperature+0x1c>
}
     808:	00 00       	nop
     80a:	8e ee       	ldi	r24, 0xEE	; 238
     80c:	b5 dc       	rcall	.-1686   	; 0x178 <i2cStart>
	i2cWrite(CONTROL);
	i2cWrite(READTEMPCMD);
	i2cStop();
	_delay_us(4500);
	i2cStart(I2CADDR+I2C_WRITE);
	i2cWrite(DATA);
     80e:	86 ef       	ldi	r24, 0xF6	; 246
     810:	e3 dc       	rcall	.-1594   	; 0x1d8 <i2cWrite>
	i2cStop();
     812:	d9 dc       	rcall	.-1614   	; 0x1c6 <i2cStop>
     814:	8f ee       	ldi	r24, 0xEF	; 239
	i2cStart(I2CADDR+I2C_READ);
     816:	b0 dc       	rcall	.-1696   	; 0x178 <i2cStart>
     818:	f1 dc       	rcall	.-1566   	; 0x1fc <i2cReadAck>
	UT = i2cReadAck();
     81a:	c8 2f       	mov	r28, r24
     81c:	d0 e0       	ldi	r29, 0x00	; 0
     81e:	dc 2f       	mov	r29, r28
     820:	cc 27       	eor	r28, r28
	UT <<= 8;
     822:	f7 dc       	rcall	.-1554   	; 0x212 <i2cReadNack>
     824:	9e 01       	movw	r18, r28
	UT |= i2cReadNack();
     826:	28 2b       	or	r18, r24
     828:	c9 01       	movw	r24, r18
	return UT;
}
     82a:	df 91       	pop	r29
     82c:	cf 91       	pop	r28
     82e:	08 95       	ret

00000830 <readTemperature>:
     830:	8f 92       	push	r8
     832:	9f 92       	push	r9
     834:	af 92       	push	r10

float readTemperature(void) {
     836:	bf 92       	push	r11
     838:	cf 92       	push	r12
     83a:	df 92       	push	r13
     83c:	ef 92       	push	r14
     83e:	ff 92       	push	r15
     840:	0f 93       	push	r16
     842:	1f 93       	push	r17
	uint16_t UT;
	int32_t X1,X2;
	float temp;
	UT = readRawTemperature();
     844:	d3 df       	rcall	.-90     	; 0x7ec <readRawTemperature>
     846:	7c 01       	movw	r14, r24
	printf("\nUT = %u",UT);
     848:	ff 92       	push	r15
     84a:	8f 93       	push	r24
     84c:	82 ec       	ldi	r24, 0xC2	; 194
     84e:	91 e0       	ldi	r25, 0x01	; 1
     850:	9f 93       	push	r25
     852:	8f 93       	push	r24
     854:	33 d7       	rcall	.+3686   	; 0x16bc <printf>
	X1 = ((UT - (int32_t)ac6) * ((int32_t)ac5) >> 15);
     856:	a7 01       	movw	r20, r14
     858:	60 e0       	ldi	r22, 0x00	; 0
     85a:	70 e0       	ldi	r23, 0x00	; 0
     85c:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <ac6>
     860:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <ac6+0x1>
     864:	9a 01       	movw	r18, r20
     866:	ab 01       	movw	r20, r22
     868:	28 1b       	sub	r18, r24
     86a:	39 0b       	sbc	r19, r25
     86c:	41 09       	sbc	r20, r1
     86e:	51 09       	sbc	r21, r1
     870:	a0 91 68 02 	lds	r26, 0x0268	; 0x800268 <ac5>
     874:	b0 91 69 02 	lds	r27, 0x0269	; 0x800269 <ac5+0x1>
     878:	df d6       	rcall	.+3518   	; 0x1638 <__muluhisi3>
     87a:	4b 01       	movw	r8, r22
     87c:	5c 01       	movw	r10, r24
     87e:	07 2e       	mov	r0, r23
     880:	7f e0       	ldi	r23, 0x0F	; 15
     882:	b5 94       	asr	r11
     884:	a7 94       	ror	r10
     886:	97 94       	ror	r9
     888:	87 94       	ror	r8
     88a:	7a 95       	dec	r23
     88c:	d1 f7       	brne	.-12     	; 0x882 <readTemperature+0x52>
     88e:	70 2d       	mov	r23, r0
	X2 = (((int32_t)mc << 11) / (X1 + (int32_t)md));
     890:	60 91 71 02 	lds	r22, 0x0271	; 0x800271 <mc>
     894:	70 91 72 02 	lds	r23, 0x0272	; 0x800272 <mc+0x1>
     898:	cb 01       	movw	r24, r22
     89a:	77 0f       	add	r23, r23
     89c:	aa 0b       	sbc	r26, r26
     89e:	bb 0b       	sbc	r27, r27
     8a0:	bc 01       	movw	r22, r24
     8a2:	cd 01       	movw	r24, r26
     8a4:	05 2e       	mov	r0, r21
     8a6:	5b e0       	ldi	r21, 0x0B	; 11
     8a8:	66 0f       	add	r22, r22
     8aa:	77 1f       	adc	r23, r23
     8ac:	88 1f       	adc	r24, r24
     8ae:	99 1f       	adc	r25, r25
     8b0:	5a 95       	dec	r21
     8b2:	d1 f7       	brne	.-12     	; 0x8a8 <readTemperature+0x78>
     8b4:	50 2d       	mov	r21, r0
     8b6:	20 91 6c 02 	lds	r18, 0x026C	; 0x80026c <md>
     8ba:	30 91 6d 02 	lds	r19, 0x026D	; 0x80026d <md+0x1>
     8be:	89 01       	movw	r16, r18
     8c0:	33 0f       	add	r19, r19
     8c2:	22 0b       	sbc	r18, r18
     8c4:	33 0b       	sbc	r19, r19
     8c6:	a9 01       	movw	r20, r18
     8c8:	98 01       	movw	r18, r16
     8ca:	28 0d       	add	r18, r8
     8cc:	39 1d       	adc	r19, r9
     8ce:	4a 1d       	adc	r20, r10
     8d0:	5b 1d       	adc	r21, r11
     8d2:	90 d6       	rcall	.+3360   	; 0x15f4 <__divmodsi4>
	printf("\nx1 = %ld, x2= %ld, B5 = %ld",X1, X2,X1+X2);
     8d4:	75 01       	movw	r14, r10
     8d6:	64 01       	movw	r12, r8
     8d8:	c2 0e       	add	r12, r18
     8da:	d3 1e       	adc	r13, r19
     8dc:	e4 1e       	adc	r14, r20
     8de:	f5 1e       	adc	r15, r21
     8e0:	ff 92       	push	r15
     8e2:	ef 92       	push	r14
     8e4:	df 92       	push	r13
     8e6:	cf 92       	push	r12
     8e8:	5f 93       	push	r21
     8ea:	4f 93       	push	r20
     8ec:	3f 93       	push	r19
     8ee:	2f 93       	push	r18
     8f0:	bf 92       	push	r11
     8f2:	af 92       	push	r10
     8f4:	9f 92       	push	r9
     8f6:	8f 92       	push	r8
     8f8:	8b ec       	ldi	r24, 0xCB	; 203
     8fa:	91 e0       	ldi	r25, 0x01	; 1
     8fc:	9f 93       	push	r25
     8fe:	8f 93       	push	r24
     900:	dd d6       	rcall	.+3514   	; 0x16bc <printf>
	printf("\nRaw Temp = %ld",((X1 + X2 + 8) >> 4));
     902:	28 e0       	ldi	r18, 0x08	; 8
     904:	c2 0e       	add	r12, r18
     906:	d1 1c       	adc	r13, r1
     908:	e1 1c       	adc	r14, r1
     90a:	f1 1c       	adc	r15, r1
     90c:	68 94       	set
     90e:	13 f8       	bld	r1, 3
     910:	f5 94       	asr	r15
     912:	e7 94       	ror	r14
     914:	d7 94       	ror	r13
     916:	c7 94       	ror	r12
     918:	16 94       	lsr	r1
     91a:	d1 f7       	brne	.-12     	; 0x910 <__stack+0x11>
     91c:	ff 92       	push	r15
     91e:	ef 92       	push	r14
     920:	df 92       	push	r13
     922:	cf 92       	push	r12
     924:	88 ee       	ldi	r24, 0xE8	; 232
     926:	91 e0       	ldi	r25, 0x01	; 1
     928:	9f 93       	push	r25
     92a:	8f 93       	push	r24
	temp = ((X1 + X2 + 8) >> 4);
     92c:	c7 d6       	rcall	.+3470   	; 0x16bc <printf>
     92e:	c7 01       	movw	r24, r14
     930:	b6 01       	movw	r22, r12
	temp /= 10.0;
	return temp;
     932:	db d3       	rcall	.+1974   	; 0x10ea <__floatsisf>
     934:	20 e0       	ldi	r18, 0x00	; 0
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	40 e2       	ldi	r20, 0x20	; 32
     93a:	51 e4       	ldi	r21, 0x41	; 65
     93c:	3b d3       	rcall	.+1654   	; 0xfb4 <__divsf3>
     93e:	2d b7       	in	r18, 0x3d	; 61
     940:	3e b7       	in	r19, 0x3e	; 62
     942:	28 5e       	subi	r18, 0xE8	; 232
     944:	3f 4f       	sbci	r19, 0xFF	; 255
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	f8 94       	cli
     94a:	3e bf       	out	0x3e, r19	; 62
     94c:	0f be       	out	0x3f, r0	; 63
     94e:	2d bf       	out	0x3d, r18	; 61
} 
     950:	1f 91       	pop	r17
     952:	0f 91       	pop	r16
     954:	ff 90       	pop	r15
     956:	ef 90       	pop	r14
     958:	df 90       	pop	r13
     95a:	cf 90       	pop	r12
     95c:	bf 90       	pop	r11
     95e:	af 90       	pop	r10
     960:	9f 90       	pop	r9
     962:	8f 90       	pop	r8
     964:	08 95       	ret

00000966 <readRawPressure>:

uint32_t readRawPressure(void) {
     966:	cf 92       	push	r12
     968:	df 92       	push	r13
     96a:	ef 92       	push	r14
     96c:	ff 92       	push	r15
     96e:	cf 93       	push	r28
	uint32_t UP;
	i2cStart(I2CADDR+I2C_WRITE);
     970:	8e ee       	ldi	r24, 0xEE	; 238
     972:	02 dc       	rcall	.-2044   	; 0x178 <i2cStart>
	i2cWrite(CONTROL);
     974:	84 ef       	ldi	r24, 0xF4	; 244
     976:	30 dc       	rcall	.-1952   	; 0x1d8 <i2cWrite>
	i2cWrite(READPRESSURECMD + (oversampling << 6));
     978:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <oversampling>
     97c:	82 95       	swap	r24
     97e:	88 0f       	add	r24, r24
     980:	88 0f       	add	r24, r24
     982:	80 7c       	andi	r24, 0xC0	; 192
     984:	8c 5c       	subi	r24, 0xCC	; 204
	i2cStop();
     986:	28 dc       	rcall	.-1968   	; 0x1d8 <i2cWrite>
     988:	1e dc       	rcall	.-1988   	; 0x1c6 <i2cStop>
	switch (oversampling) {
     98a:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <oversampling>
     98e:	81 30       	cpi	r24, 0x01	; 1
     990:	69 f0       	breq	.+26     	; 0x9ac <readRawPressure+0x46>
     992:	28 f0       	brcs	.+10     	; 0x99e <readRawPressure+0x38>
     994:	82 30       	cpi	r24, 0x02	; 2
     996:	89 f0       	breq	.+34     	; 0x9ba <readRawPressure+0x54>
     998:	83 30       	cpi	r24, 0x03	; 3
     99a:	b1 f0       	breq	.+44     	; 0x9c8 <readRawPressure+0x62>
     99c:	1e c0       	rjmp	.+60     	; 0x9da <readRawPressure+0x74>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     99e:	8f e4       	ldi	r24, 0x4F	; 79
     9a0:	96 e4       	ldi	r25, 0x46	; 70
     9a2:	01 97       	sbiw	r24, 0x01	; 1
     9a4:	f1 f7       	brne	.-4      	; 0x9a2 <readRawPressure+0x3c>
     9a6:	00 c0       	rjmp	.+0      	; 0x9a8 <readRawPressure+0x42>
     9a8:	00 00       	nop
     9aa:	17 c0       	rjmp	.+46     	; 0x9da <readRawPressure+0x74>
     9ac:	8f e2       	ldi	r24, 0x2F	; 47
     9ae:	95 e7       	ldi	r25, 0x75	; 117
     9b0:	01 97       	sbiw	r24, 0x01	; 1
     9b2:	f1 f7       	brne	.-4      	; 0x9b0 <readRawPressure+0x4a>
     9b4:	00 c0       	rjmp	.+0      	; 0x9b6 <readRawPressure+0x50>
     9b6:	00 00       	nop
     9b8:	10 c0       	rjmp	.+32     	; 0x9da <readRawPressure+0x74>
     9ba:	8f ee       	ldi	r24, 0xEF	; 239
     9bc:	92 ed       	ldi	r25, 0xD2	; 210
     9be:	01 97       	sbiw	r24, 0x01	; 1
     9c0:	f1 f7       	brne	.-4      	; 0x9be <readRawPressure+0x58>
     9c2:	00 c0       	rjmp	.+0      	; 0x9c4 <readRawPressure+0x5e>
     9c4:	00 00       	nop
     9c6:	09 c0       	rjmp	.+18     	; 0x9da <readRawPressure+0x74>
     9c8:	9f eb       	ldi	r25, 0xBF	; 191
     9ca:	2e e3       	ldi	r18, 0x3E	; 62
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	91 50       	subi	r25, 0x01	; 1
     9d0:	20 40       	sbci	r18, 0x00	; 0
     9d2:	80 40       	sbci	r24, 0x00	; 0
     9d4:	e1 f7       	brne	.-8      	; 0x9ce <readRawPressure+0x68>
     9d6:	00 c0       	rjmp	.+0      	; 0x9d8 <readRawPressure+0x72>
			_delay_us(25500);
			break;
		default:
			break;
	}
	i2cStart(I2CADDR+I2C_WRITE);
     9d8:	00 00       	nop
     9da:	8e ee       	ldi	r24, 0xEE	; 238
	i2cWrite(DATA);
     9dc:	cd db       	rcall	.-2150   	; 0x178 <i2cStart>
     9de:	86 ef       	ldi	r24, 0xF6	; 246
	i2cStop();
     9e0:	fb db       	rcall	.-2058   	; 0x1d8 <i2cWrite>
     9e2:	f1 db       	rcall	.-2078   	; 0x1c6 <i2cStop>
	i2cStart(I2CADDR+I2C_READ);
     9e4:	8f ee       	ldi	r24, 0xEF	; 239
     9e6:	c8 db       	rcall	.-2160   	; 0x178 <i2cStart>
	UP = i2cReadAck();
     9e8:	09 dc       	rcall	.-2030   	; 0x1fc <i2cReadAck>
     9ea:	c8 2e       	mov	r12, r24
     9ec:	d1 2c       	mov	r13, r1
     9ee:	e1 2c       	mov	r14, r1
     9f0:	f1 2c       	mov	r15, r1
     9f2:	04 dc       	rcall	.-2040   	; 0x1fc <i2cReadAck>
	UP <<= 16;
	UP |= (i2cReadAck() << 8);
     9f4:	c8 2f       	mov	r28, r24
     9f6:	0d dc       	rcall	.-2022   	; 0x212 <i2cReadNack>
     9f8:	76 01       	movw	r14, r12
	UP |= i2cReadNack();
     9fa:	dd 24       	eor	r13, r13
     9fc:	cc 24       	eor	r12, r12
     9fe:	c8 2a       	or	r12, r24
     a00:	6c 2f       	mov	r22, r28
     a02:	70 e0       	ldi	r23, 0x00	; 0
     a04:	76 2f       	mov	r23, r22
     a06:	66 27       	eor	r22, r22
     a08:	cb 01       	movw	r24, r22
     a0a:	77 0f       	add	r23, r23
     a0c:	aa 0b       	sbc	r26, r26
     a0e:	bb 0b       	sbc	r27, r27
     a10:	8c 29       	or	r24, r12
     a12:	9d 29       	or	r25, r13
     a14:	ae 29       	or	r26, r14
     a16:	bf 29       	or	r27, r15
     a18:	40 91 70 02 	lds	r20, 0x0270	; 0x800270 <oversampling>
     a1c:	28 e0       	ldi	r18, 0x08	; 8
	UP >>= (8-oversampling);
	return UP;
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	24 1b       	sub	r18, r20
     a22:	31 09       	sbc	r19, r1
     a24:	bc 01       	movw	r22, r24
     a26:	cd 01       	movw	r24, r26
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <readRawPressure+0xcc>
     a2a:	96 95       	lsr	r25
     a2c:	87 95       	ror	r24
     a2e:	77 95       	ror	r23
     a30:	67 95       	ror	r22
     a32:	2a 95       	dec	r18
     a34:	d2 f7       	brpl	.-12     	; 0xa2a <readRawPressure+0xc4>
     a36:	cf 91       	pop	r28
     a38:	ff 90       	pop	r15
     a3a:	ef 90       	pop	r14
}
     a3c:	df 90       	pop	r13
     a3e:	cf 90       	pop	r12
     a40:	08 95       	ret

00000a42 <readPressure>:
     a42:	4f 92       	push	r4
     a44:	5f 92       	push	r5
     a46:	6f 92       	push	r6

int32_t readPressure(void) {
     a48:	7f 92       	push	r7
     a4a:	8f 92       	push	r8
     a4c:	9f 92       	push	r9
     a4e:	af 92       	push	r10
     a50:	bf 92       	push	r11
     a52:	cf 92       	push	r12
     a54:	df 92       	push	r13
     a56:	ef 92       	push	r14
     a58:	ff 92       	push	r15
     a5a:	0f 93       	push	r16
     a5c:	1f 93       	push	r17
     a5e:	cf 93       	push	r28
     a60:	df 93       	push	r29
     a62:	cd b7       	in	r28, 0x3d	; 61
     a64:	de b7       	in	r29, 0x3e	; 62
     a66:	28 97       	sbiw	r28, 0x08	; 8
     a68:	0f b6       	in	r0, 0x3f	; 63
     a6a:	f8 94       	cli
     a6c:	de bf       	out	0x3e, r29	; 62
     a6e:	0f be       	out	0x3f, r0	; 63
     a70:	cd bf       	out	0x3d, r28	; 61
	int32_t UT, UP, B3, B6, X1, X2, X3, p;
	uint32_t B4, B7;
	
	UT = readRawTemperature();
     a72:	bc de       	rcall	.-648    	; 0x7ec <readRawTemperature>
     a74:	5c 01       	movw	r10, r24
	UP = readRawPressure();
     a76:	77 df       	rcall	.-274    	; 0x966 <readRawPressure>
     a78:	69 83       	std	Y+1, r22	; 0x01
     a7a:	7a 83       	std	Y+2, r23	; 0x02
     a7c:	8b 83       	std	Y+3, r24	; 0x03
     a7e:	9c 83       	std	Y+4, r25	; 0x04
     a80:	a5 01       	movw	r20, r10
	X1 = ((UT - (int32_t)ac6) * ((int32_t)ac5) >> 15);
     a82:	60 e0       	ldi	r22, 0x00	; 0
     a84:	70 e0       	ldi	r23, 0x00	; 0
     a86:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <ac6>
     a8a:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <ac6+0x1>
     a8e:	9a 01       	movw	r18, r20
     a90:	ab 01       	movw	r20, r22
     a92:	28 1b       	sub	r18, r24
     a94:	39 0b       	sbc	r19, r25
     a96:	41 09       	sbc	r20, r1
     a98:	51 09       	sbc	r21, r1
     a9a:	a0 91 68 02 	lds	r26, 0x0268	; 0x800268 <ac5>
     a9e:	b0 91 69 02 	lds	r27, 0x0269	; 0x800269 <ac5+0x1>
     aa2:	ca d5       	rcall	.+2964   	; 0x1638 <__muluhisi3>
     aa4:	2b 01       	movw	r4, r22
     aa6:	3c 01       	movw	r6, r24
     aa8:	03 2e       	mov	r0, r19
     aaa:	3f e0       	ldi	r19, 0x0F	; 15
     aac:	75 94       	asr	r7
     aae:	67 94       	ror	r6
     ab0:	57 94       	ror	r5
     ab2:	47 94       	ror	r4
     ab4:	3a 95       	dec	r19
     ab6:	d1 f7       	brne	.-12     	; 0xaac <readPressure+0x6a>
     ab8:	30 2d       	mov	r19, r0
     aba:	60 91 71 02 	lds	r22, 0x0271	; 0x800271 <mc>
	X2 = (((int32_t)mc << 11) / (X1 + (int32_t)md));
	B6 = (X1 + X2) - 4000;
     abe:	70 91 72 02 	lds	r23, 0x0272	; 0x800272 <mc+0x1>
     ac2:	cb 01       	movw	r24, r22
     ac4:	77 0f       	add	r23, r23
     ac6:	aa 0b       	sbc	r26, r26
     ac8:	bb 0b       	sbc	r27, r27
     aca:	bc 01       	movw	r22, r24
     acc:	cd 01       	movw	r24, r26
     ace:	05 2e       	mov	r0, r21
     ad0:	5b e0       	ldi	r21, 0x0B	; 11
     ad2:	66 0f       	add	r22, r22
     ad4:	77 1f       	adc	r23, r23
     ad6:	88 1f       	adc	r24, r24
     ad8:	99 1f       	adc	r25, r25
     ada:	5a 95       	dec	r21
     adc:	d1 f7       	brne	.-12     	; 0xad2 <readPressure+0x90>
     ade:	50 2d       	mov	r21, r0
     ae0:	20 91 6c 02 	lds	r18, 0x026C	; 0x80026c <md>
     ae4:	30 91 6d 02 	lds	r19, 0x026D	; 0x80026d <md+0x1>
     ae8:	89 01       	movw	r16, r18
     aea:	33 0f       	add	r19, r19
     aec:	22 0b       	sbc	r18, r18
     aee:	33 0b       	sbc	r19, r19
     af0:	a9 01       	movw	r20, r18
     af2:	98 01       	movw	r18, r16
     af4:	24 0d       	add	r18, r4
     af6:	35 1d       	adc	r19, r5
     af8:	46 1d       	adc	r20, r6
     afa:	57 1d       	adc	r21, r7
     afc:	7b d5       	rcall	.+2806   	; 0x15f4 <__divmodsi4>
     afe:	42 0e       	add	r4, r18
     b00:	53 1e       	adc	r5, r19
     b02:	64 1e       	adc	r6, r20
     b04:	75 1e       	adc	r7, r21
     b06:	20 ea       	ldi	r18, 0xA0	; 160
     b08:	42 1a       	sub	r4, r18
     b0a:	2f e0       	ldi	r18, 0x0F	; 15
     b0c:	52 0a       	sbc	r5, r18
     b0e:	61 08       	sbc	r6, r1
     b10:	71 08       	sbc	r7, r1
     b12:	a3 01       	movw	r20, r6
	X1 = ((int32_t)b2 * ((B6 * B6) >> 12 )) >> 11;
     b14:	92 01       	movw	r18, r4
     b16:	c3 01       	movw	r24, r6
     b18:	b2 01       	movw	r22, r4
     b1a:	3b d5       	rcall	.+2678   	; 0x1592 <__mulsi3>
     b1c:	6b 01       	movw	r12, r22
     b1e:	7c 01       	movw	r14, r24
     b20:	0b 2e       	mov	r0, r27
     b22:	bc e0       	ldi	r27, 0x0C	; 12
     b24:	f5 94       	asr	r15
     b26:	e7 94       	ror	r14
     b28:	d7 94       	ror	r13
     b2a:	c7 94       	ror	r12
     b2c:	ba 95       	dec	r27
     b2e:	d1 f7       	brne	.-12     	; 0xb24 <readPressure+0xe2>
     b30:	b0 2d       	mov	r27, r0
     b32:	e0 91 70 02 	lds	r30, 0x0270	; 0x800270 <oversampling>
	X3 = X1 + X2;
	B3 = ((((int32_t)ac1 * 4 + X3) << oversampling) + 2) / 4;
	X1 = ((int32_t) ac3 * B6) >> 13;
	X2 = ((int32_t)b1 * ((B6 * B6) >> 12)) >> 16;
	X3 = ((X1 + X2) + 2) >> 2;
	B4 = ((uint32_t)ac4 * (uint32_t)(X3 + 32768)) >> 15;
     b36:	a0 91 73 02 	lds	r26, 0x0273	; 0x800273 <ac3>
     b3a:	b0 91 74 02 	lds	r27, 0x0274	; 0x800274 <ac3+0x1>
     b3e:	86 d5       	rcall	.+2828   	; 0x164c <__mulshisi3>
     b40:	4b 01       	movw	r8, r22
     b42:	5c 01       	movw	r10, r24
     b44:	07 2e       	mov	r0, r23
     b46:	7d e0       	ldi	r23, 0x0D	; 13
     b48:	b5 94       	asr	r11
     b4a:	a7 94       	ror	r10
     b4c:	97 94       	ror	r9
     b4e:	87 94       	ror	r8
     b50:	7a 95       	dec	r23
     b52:	d1 f7       	brne	.-12     	; 0xb48 <readPressure+0x106>
     b54:	70 2d       	mov	r23, r0
     b56:	a0 91 64 02 	lds	r26, 0x0264	; 0x800264 <b1>
     b5a:	b0 91 65 02 	lds	r27, 0x0265	; 0x800265 <b1+0x1>
     b5e:	a7 01       	movw	r20, r14
     b60:	96 01       	movw	r18, r12
     b62:	74 d5       	rcall	.+2792   	; 0x164c <__mulshisi3>
     b64:	bb 27       	eor	r27, r27
     b66:	97 fd       	sbrc	r25, 7
     b68:	b0 95       	com	r27
     b6a:	ab 2f       	mov	r26, r27
     b6c:	88 0d       	add	r24, r8
     b6e:	99 1d       	adc	r25, r9
     b70:	aa 1d       	adc	r26, r10
     b72:	bb 1d       	adc	r27, r11
     b74:	02 96       	adiw	r24, 0x02	; 2
     b76:	a1 1d       	adc	r26, r1
     b78:	b1 1d       	adc	r27, r1
     b7a:	b5 95       	asr	r27
     b7c:	a7 95       	ror	r26
     b7e:	97 95       	ror	r25
     b80:	87 95       	ror	r24
     b82:	b5 95       	asr	r27
     b84:	a7 95       	ror	r26
     b86:	97 95       	ror	r25
     b88:	87 95       	ror	r24
     b8a:	9c 01       	movw	r18, r24
     b8c:	ad 01       	movw	r20, r26
     b8e:	30 58       	subi	r19, 0x80	; 128
     b90:	4f 4f       	sbci	r20, 0xFF	; 255
     b92:	5f 4f       	sbci	r21, 0xFF	; 255
     b94:	a0 91 6e 02 	lds	r26, 0x026E	; 0x80026e <ac4>
     b98:	b0 91 6f 02 	lds	r27, 0x026F	; 0x80026f <ac4+0x1>
     b9c:	4d d5       	rcall	.+2714   	; 0x1638 <__muluhisi3>
     b9e:	9b 01       	movw	r18, r22
     ba0:	ac 01       	movw	r20, r24
     ba2:	01 2e       	mov	r0, r17
     ba4:	1f e0       	ldi	r17, 0x0F	; 15
     ba6:	56 95       	lsr	r21
     ba8:	47 95       	ror	r20
     baa:	37 95       	ror	r19
     bac:	27 95       	ror	r18
     bae:	1a 95       	dec	r17
     bb0:	d1 f7       	brne	.-12     	; 0xba6 <readPressure+0x164>
     bb2:	10 2d       	mov	r17, r0
     bb4:	2d 83       	std	Y+5, r18	; 0x05
     bb6:	3e 83       	std	Y+6, r19	; 0x06
     bb8:	4f 83       	std	Y+7, r20	; 0x07
     bba:	58 87       	std	Y+8, r21	; 0x08
     bbc:	a0 91 5e 02 	lds	r26, 0x025E	; 0x80025e <__data_end>
	B7 = ((uint32_t)UP - B3) * (uint32_t)(50000UL >> oversampling);
     bc0:	b0 91 5f 02 	lds	r27, 0x025F	; 0x80025f <__data_end+0x1>
     bc4:	a7 01       	movw	r20, r14
     bc6:	96 01       	movw	r18, r12
     bc8:	41 d5       	rcall	.+2690   	; 0x164c <__mulshisi3>
     bca:	4b 01       	movw	r8, r22
     bcc:	5c 01       	movw	r10, r24
     bce:	07 2e       	mov	r0, r23
     bd0:	7b e0       	ldi	r23, 0x0B	; 11
     bd2:	b5 94       	asr	r11
     bd4:	a7 94       	ror	r10
     bd6:	97 94       	ror	r9
     bd8:	87 94       	ror	r8
     bda:	7a 95       	dec	r23
     bdc:	d1 f7       	brne	.-12     	; 0xbd2 <readPressure+0x190>
     bde:	70 2d       	mov	r23, r0
     be0:	a0 91 6a 02 	lds	r26, 0x026A	; 0x80026a <ac2>
     be4:	b0 91 6b 02 	lds	r27, 0x026B	; 0x80026b <ac2+0x1>
     be8:	a3 01       	movw	r20, r6
     bea:	92 01       	movw	r18, r4
     bec:	2f d5       	rcall	.+2654   	; 0x164c <__mulshisi3>
     bee:	dc 01       	movw	r26, r24
     bf0:	cb 01       	movw	r24, r22
     bf2:	07 2e       	mov	r0, r23
     bf4:	7b e0       	ldi	r23, 0x0B	; 11
     bf6:	b5 95       	asr	r27
     bf8:	a7 95       	ror	r26
     bfa:	97 95       	ror	r25
     bfc:	87 95       	ror	r24
     bfe:	7a 95       	dec	r23
     c00:	d1 f7       	brne	.-12     	; 0xbf6 <readPressure+0x1b4>
     c02:	70 2d       	mov	r23, r0
     c04:	88 0d       	add	r24, r8
     c06:	99 1d       	adc	r25, r9
     c08:	aa 1d       	adc	r26, r10
     c0a:	bb 1d       	adc	r27, r11
     c0c:	40 91 62 02 	lds	r20, 0x0262	; 0x800262 <ac1>
     c10:	50 91 63 02 	lds	r21, 0x0263	; 0x800263 <ac1+0x1>
     c14:	05 2e       	mov	r0, r21
     c16:	00 0c       	add	r0, r0
     c18:	66 0b       	sbc	r22, r22
     c1a:	77 0b       	sbc	r23, r23
     c1c:	44 0f       	add	r20, r20
     c1e:	55 1f       	adc	r21, r21
     c20:	66 1f       	adc	r22, r22
     c22:	77 1f       	adc	r23, r23
     c24:	44 0f       	add	r20, r20
     c26:	55 1f       	adc	r21, r21
     c28:	66 1f       	adc	r22, r22
     c2a:	77 1f       	adc	r23, r23
     c2c:	84 0f       	add	r24, r20
     c2e:	95 1f       	adc	r25, r21
     c30:	a6 1f       	adc	r26, r22
     c32:	b7 1f       	adc	r27, r23
     c34:	0e 2e       	mov	r0, r30
     c36:	04 c0       	rjmp	.+8      	; 0xc40 <readPressure+0x1fe>
     c38:	88 0f       	add	r24, r24
     c3a:	99 1f       	adc	r25, r25
     c3c:	aa 1f       	adc	r26, r26
     c3e:	bb 1f       	adc	r27, r27
     c40:	0a 94       	dec	r0
     c42:	d2 f7       	brpl	.-12     	; 0xc38 <readPressure+0x1f6>
     c44:	02 96       	adiw	r24, 0x02	; 2
     c46:	a1 1d       	adc	r26, r1
     c48:	b1 1d       	adc	r27, r1
     c4a:	ac 01       	movw	r20, r24
     c4c:	bd 01       	movw	r22, r26
     c4e:	bb 23       	and	r27, r27
     c50:	24 f4       	brge	.+8      	; 0xc5a <readPressure+0x218>
     c52:	4d 5f       	subi	r20, 0xFD	; 253
     c54:	5f 4f       	sbci	r21, 0xFF	; 255
     c56:	6f 4f       	sbci	r22, 0xFF	; 255
     c58:	7f 4f       	sbci	r23, 0xFF	; 255
     c5a:	75 95       	asr	r23
     c5c:	67 95       	ror	r22
     c5e:	57 95       	ror	r21
     c60:	47 95       	ror	r20
     c62:	75 95       	asr	r23
     c64:	67 95       	ror	r22
     c66:	57 95       	ror	r21
     c68:	47 95       	ror	r20
     c6a:	89 81       	ldd	r24, Y+1	; 0x01
     c6c:	9a 81       	ldd	r25, Y+2	; 0x02
     c6e:	ab 81       	ldd	r26, Y+3	; 0x03
     c70:	bc 81       	ldd	r27, Y+4	; 0x04
     c72:	84 1b       	sub	r24, r20
     c74:	95 0b       	sbc	r25, r21
     c76:	a6 0b       	sbc	r26, r22
     c78:	b7 0b       	sbc	r27, r23
     c7a:	9c 01       	movw	r18, r24
     c7c:	ad 01       	movw	r20, r26
     c7e:	80 e5       	ldi	r24, 0x50	; 80
     c80:	93 ec       	ldi	r25, 0xC3	; 195
     c82:	a0 e0       	ldi	r26, 0x00	; 0
     c84:	b0 e0       	ldi	r27, 0x00	; 0
     c86:	bc 01       	movw	r22, r24
     c88:	cd 01       	movw	r24, r26
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <readPressure+0x252>
     c8c:	96 95       	lsr	r25
     c8e:	87 95       	ror	r24
     c90:	77 95       	ror	r23
     c92:	67 95       	ror	r22
     c94:	ea 95       	dec	r30
     c96:	d2 f7       	brpl	.-12     	; 0xc8c <readPressure+0x24a>
     c98:	7c d4       	rcall	.+2296   	; 0x1592 <__mulsi3>
     c9a:	99 23       	and	r25, r25
     c9c:	64 f0       	brlt	.+24     	; 0xcb6 <readPressure+0x274>
	if (B7 < 0x80000000) {
     c9e:	66 0f       	add	r22, r22
     ca0:	77 1f       	adc	r23, r23
		p = (B7 * 2)/B4;
     ca2:	88 1f       	adc	r24, r24
     ca4:	99 1f       	adc	r25, r25
     ca6:	2d 81       	ldd	r18, Y+5	; 0x05
     ca8:	3e 81       	ldd	r19, Y+6	; 0x06
     caa:	4f 81       	ldd	r20, Y+7	; 0x07
     cac:	58 85       	ldd	r21, Y+8	; 0x08
     cae:	80 d4       	rcall	.+2304   	; 0x15b0 <__udivmodsi4>
     cb0:	49 01       	movw	r8, r18
     cb2:	5a 01       	movw	r10, r20
     cb4:	0b c0       	rjmp	.+22     	; 0xccc <readPressure+0x28a>
     cb6:	2d 81       	ldd	r18, Y+5	; 0x05
     cb8:	3e 81       	ldd	r19, Y+6	; 0x06
	} else {
		p = (B7/B4) * 2;
     cba:	4f 81       	ldd	r20, Y+7	; 0x07
     cbc:	58 85       	ldd	r21, Y+8	; 0x08
     cbe:	78 d4       	rcall	.+2288   	; 0x15b0 <__udivmodsi4>
     cc0:	49 01       	movw	r8, r18
     cc2:	5a 01       	movw	r10, r20
     cc4:	88 0c       	add	r8, r8
     cc6:	99 1c       	adc	r9, r9
     cc8:	aa 1c       	adc	r10, r10
     cca:	bb 1c       	adc	r11, r11
     ccc:	99 27       	eor	r25, r25
     cce:	b7 fc       	sbrc	r11, 7
	}
	X1 = (p >> 8) * (p >> 8);
     cd0:	9a 95       	dec	r25
     cd2:	8b 2d       	mov	r24, r11
     cd4:	7a 2d       	mov	r23, r10
     cd6:	69 2d       	mov	r22, r9
     cd8:	9b 01       	movw	r18, r22
	X1 = (X1 * 3038) >> 16;
     cda:	ac 01       	movw	r20, r24
     cdc:	5a d4       	rcall	.+2228   	; 0x1592 <__mulsi3>
     cde:	9b 01       	movw	r18, r22
     ce0:	ac 01       	movw	r20, r24
     ce2:	ae ed       	ldi	r26, 0xDE	; 222
     ce4:	bb e0       	ldi	r27, 0x0B	; 11
     ce6:	a8 d4       	rcall	.+2384   	; 0x1638 <__muluhisi3>
     ce8:	6b 01       	movw	r12, r22
     cea:	7c 01       	movw	r14, r24
     cec:	a3 e4       	ldi	r26, 0x43	; 67
     cee:	b3 ee       	ldi	r27, 0xE3	; 227
	X2 = (-7357 * p) >> 16;
	p = p + ((X1 + X2 + (int32_t)3791) >> 4);
     cf0:	a5 01       	movw	r20, r10
     cf2:	94 01       	movw	r18, r8
     cf4:	ad d4       	rcall	.+2394   	; 0x1650 <__mulohisi3>
     cf6:	bb 27       	eor	r27, r27
     cf8:	97 fd       	sbrc	r25, 7
     cfa:	b0 95       	com	r27
     cfc:	ab 2f       	mov	r26, r27
     cfe:	67 01       	movw	r12, r14
     d00:	ff 24       	eor	r15, r15
     d02:	d7 fc       	sbrc	r13, 7
     d04:	f0 94       	com	r15
     d06:	ef 2c       	mov	r14, r15
     d08:	8c 0d       	add	r24, r12
     d0a:	9d 1d       	adc	r25, r13
     d0c:	ae 1d       	adc	r26, r14
     d0e:	bf 1d       	adc	r27, r15
     d10:	81 53       	subi	r24, 0x31	; 49
     d12:	91 4f       	sbci	r25, 0xF1	; 241
     d14:	af 4f       	sbci	r26, 0xFF	; 255
     d16:	bf 4f       	sbci	r27, 0xFF	; 255
     d18:	68 94       	set
     d1a:	13 f8       	bld	r1, 3
     d1c:	b5 95       	asr	r27
     d1e:	a7 95       	ror	r26
     d20:	97 95       	ror	r25
     d22:	87 95       	ror	r24
     d24:	16 94       	lsr	r1
     d26:	d1 f7       	brne	.-12     	; 0xd1c <readPressure+0x2da>
     d28:	bc 01       	movw	r22, r24
     d2a:	cd 01       	movw	r24, r26
     d2c:	68 0d       	add	r22, r8
	return p;
     d2e:	79 1d       	adc	r23, r9
     d30:	8a 1d       	adc	r24, r10
     d32:	9b 1d       	adc	r25, r11
     d34:	28 96       	adiw	r28, 0x08	; 8
     d36:	0f b6       	in	r0, 0x3f	; 63
     d38:	f8 94       	cli
}
     d3a:	de bf       	out	0x3e, r29	; 62
     d3c:	0f be       	out	0x3f, r0	; 63
     d3e:	cd bf       	out	0x3d, r28	; 61
     d40:	df 91       	pop	r29
     d42:	cf 91       	pop	r28
     d44:	1f 91       	pop	r17
     d46:	0f 91       	pop	r16
     d48:	ff 90       	pop	r15
     d4a:	ef 90       	pop	r14
     d4c:	df 90       	pop	r13
     d4e:	cf 90       	pop	r12
     d50:	bf 90       	pop	r11
     d52:	af 90       	pop	r10
     d54:	9f 90       	pop	r9
     d56:	8f 90       	pop	r8
     d58:	7f 90       	pop	r7
     d5a:	6f 90       	pop	r6
     d5c:	5f 90       	pop	r5
     d5e:	4f 90       	pop	r4
     d60:	08 95       	ret

00000d62 <readAbsAltitude>:
     d62:	6f de       	rcall	.-802    	; 0xa42 <readPressure>
     d64:	c2 d1       	rcall	.+900    	; 0x10ea <__floatsisf>
     d66:	20 e8       	ldi	r18, 0x80	; 128

float readAbsAltitude(void) {
	float p = readPressure();
	return (44330 * (1.0 - pow((p/101325), 0.1903)));
     d68:	36 ee       	ldi	r19, 0xE6	; 230
     d6a:	45 ec       	ldi	r20, 0xC5	; 197
     d6c:	57 e4       	ldi	r21, 0x47	; 71
     d6e:	22 d1       	rcall	.+580    	; 0xfb4 <__divsf3>
     d70:	21 e0       	ldi	r18, 0x01	; 1
     d72:	3e ed       	ldi	r19, 0xDE	; 222
     d74:	42 e4       	ldi	r20, 0x42	; 66
     d76:	5e e3       	ldi	r21, 0x3E	; 62
     d78:	a7 d2       	rcall	.+1358   	; 0x12c8 <pow>
     d7a:	9b 01       	movw	r18, r22
     d7c:	ac 01       	movw	r20, r24
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	80 e8       	ldi	r24, 0x80	; 128
     d84:	9f e3       	ldi	r25, 0x3F	; 63
     d86:	b1 d0       	rcall	.+354    	; 0xeea <__subsf3>
     d88:	20 e0       	ldi	r18, 0x00	; 0
     d8a:	3a e2       	ldi	r19, 0x2A	; 42
     d8c:	4d e2       	ldi	r20, 0x2D	; 45
     d8e:	57 e4       	ldi	r21, 0x47	; 71
     d90:	38 c2       	rjmp	.+1136   	; 0x1202 <__mulsf3>

00000d92 <main>:
}
     d92:	83 e0       	ldi	r24, 0x03	; 3
//******************************************************

FILE uart_str = FDEV_SETUP_STREAM(uartPutch, uartGetch, _FDEV_SETUP_RW);

int main(void) {
	DDRB = 0x03;
     d94:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xF0;
     d96:	80 ef       	ldi	r24, 0xF0	; 240
     d98:	8a b9       	out	0x0a, r24	; 10
	float temp, alt;
	int pi, pd;
	int32_t p;
	uint32_t UP;
	stdout = stdin = &uart_str;
     d9a:	e5 e7       	ldi	r30, 0x75	; 117
     d9c:	f2 e0       	ldi	r31, 0x02	; 2
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	91 83       	std	Z+1, r25	; 0x01
     da4:	80 83       	st	Z, r24
     da6:	93 83       	std	Z+3, r25	; 0x03
     da8:	82 83       	std	Z+2, r24	; 0x02
    uartInit();
     daa:	7a db       	rcall	.-2316   	; 0x4a0 <uartInit>
	begin(ULTRAHIGHRES);
     dac:	83 e0       	ldi	r24, 0x03	; 3
     dae:	88 db       	rcall	.-2288   	; 0x4c0 <begin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     db0:	2f ef       	ldi	r18, 0xFF	; 255
     db2:	83 ec       	ldi	r24, 0xC3	; 195
     db4:	99 e0       	ldi	r25, 0x09	; 9
     db6:	21 50       	subi	r18, 0x01	; 1
     db8:	80 40       	sbci	r24, 0x00	; 0
     dba:	90 40       	sbci	r25, 0x00	; 0
     dbc:	e1 f7       	brne	.-8      	; 0xdb6 <main+0x24>
     dbe:	00 c0       	rjmp	.+0      	; 0xdc0 <main+0x2e>
	_delay_ms(200);
	start();
     dc0:	00 00       	nop
     dc2:	63 da       	rcall	.-2874   	; 0x28a <start>
	
    while (1) {
		
		
		UP = readRawPressure();
		printf("\nRaw Pressure = %lu",UP);
     dc4:	0f 2e       	mov	r0, r31
     dc6:	f8 ef       	ldi	r31, 0xF8	; 248
     dc8:	af 2e       	mov	r10, r31
     dca:	f1 e0       	ldi	r31, 0x01	; 1
     dcc:	bf 2e       	mov	r11, r31
     dce:	f0 2d       	mov	r31, r0
		p =readPressure();
		printf("\nPressao = %ld", p);
     dd0:	0c e0       	ldi	r16, 0x0C	; 12
     dd2:	12 e0       	ldi	r17, 0x02	; 2
		
		alt = readAbsAltitude();
		//Gambs
		pi = alt;
		pd = (alt - pi)*10;
		printf("\nAltidude = %d.%dm\n",pi,pd);
     dd4:	cb e1       	ldi	r28, 0x1B	; 27
     dd6:	d2 e0       	ldi	r29, 0x02	; 2
		
		temp = readTemperature();
		//Gambs
		pi = temp;
		pd = (temp - pi)*10;
		printf("\nTempratura real = %d.%doC\n",pi,pd);
     dd8:	0f 2e       	mov	r0, r31
     dda:	ff e2       	ldi	r31, 0x2F	; 47
     ddc:	8f 2e       	mov	r8, r31
     dde:	f2 e0       	ldi	r31, 0x02	; 2
     de0:	9f 2e       	mov	r9, r31
	start();
	
    while (1) {
		
		
		UP = readRawPressure();
     de2:	f0 2d       	mov	r31, r0
     de4:	c0 dd       	rcall	.-1152   	; 0x966 <readRawPressure>
		printf("\nRaw Pressure = %lu",UP);
     de6:	9f 93       	push	r25
     de8:	8f 93       	push	r24
     dea:	7f 93       	push	r23
     dec:	6f 93       	push	r22
     dee:	bf 92       	push	r11
     df0:	af 92       	push	r10
		p =readPressure();
     df2:	64 d4       	rcall	.+2248   	; 0x16bc <printf>
     df4:	26 de       	rcall	.-948    	; 0xa42 <readPressure>
		printf("\nPressao = %ld", p);
     df6:	9f 93       	push	r25
     df8:	8f 93       	push	r24
     dfa:	7f 93       	push	r23
     dfc:	6f 93       	push	r22
     dfe:	1f 93       	push	r17
		
		alt = readAbsAltitude();
     e00:	0f 93       	push	r16
     e02:	5c d4       	rcall	.+2232   	; 0x16bc <printf>
     e04:	ae df       	rcall	.-164    	; 0xd62 <readAbsAltitude>
		//Gambs
		pi = alt;
     e06:	2b 01       	movw	r4, r22
     e08:	3c 01       	movw	r6, r24
     e0a:	3c d1       	rcall	.+632    	; 0x1084 <__fixsfsi>
     e0c:	6b 01       	movw	r12, r22
		pd = (alt - pi)*10;
		printf("\nAltidude = %d.%dm\n",pi,pd);
     e0e:	7c 01       	movw	r14, r24
     e10:	07 2e       	mov	r0, r23
     e12:	00 0c       	add	r0, r0
     e14:	88 0b       	sbc	r24, r24
     e16:	99 0b       	sbc	r25, r25
     e18:	68 d1       	rcall	.+720    	; 0x10ea <__floatsisf>
     e1a:	9b 01       	movw	r18, r22
     e1c:	ac 01       	movw	r20, r24
     e1e:	c3 01       	movw	r24, r6
     e20:	b2 01       	movw	r22, r4
     e22:	63 d0       	rcall	.+198    	; 0xeea <__subsf3>
     e24:	20 e0       	ldi	r18, 0x00	; 0
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	40 e2       	ldi	r20, 0x20	; 32
     e2a:	51 e4       	ldi	r21, 0x41	; 65
     e2c:	ea d1       	rcall	.+980    	; 0x1202 <__mulsf3>
     e2e:	2a d1       	rcall	.+596    	; 0x1084 <__fixsfsi>
     e30:	7f 93       	push	r23
     e32:	6f 93       	push	r22
     e34:	df 92       	push	r13
     e36:	cf 92       	push	r12
     e38:	df 93       	push	r29
		
		temp = readTemperature();
     e3a:	cf 93       	push	r28
     e3c:	3f d4       	rcall	.+2174   	; 0x16bc <printf>
     e3e:	f8 dc       	rcall	.-1552   	; 0x830 <readTemperature>
		//Gambs
		pi = temp;
     e40:	2b 01       	movw	r4, r22
     e42:	3c 01       	movw	r6, r24
     e44:	1f d1       	rcall	.+574    	; 0x1084 <__fixsfsi>
		pd = (temp - pi)*10;
     e46:	6b 01       	movw	r12, r22
     e48:	7c 01       	movw	r14, r24
     e4a:	07 2e       	mov	r0, r23
     e4c:	00 0c       	add	r0, r0
     e4e:	88 0b       	sbc	r24, r24
     e50:	99 0b       	sbc	r25, r25
     e52:	4b d1       	rcall	.+662    	; 0x10ea <__floatsisf>
     e54:	9b 01       	movw	r18, r22
     e56:	ac 01       	movw	r20, r24
     e58:	c3 01       	movw	r24, r6
     e5a:	b2 01       	movw	r22, r4
     e5c:	46 d0       	rcall	.+140    	; 0xeea <__subsf3>
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	40 e2       	ldi	r20, 0x20	; 32
     e64:	51 e4       	ldi	r21, 0x41	; 65
     e66:	cd d1       	rcall	.+922    	; 0x1202 <__mulsf3>
     e68:	0d d1       	rcall	.+538    	; 0x1084 <__fixsfsi>
		printf("\nTempratura real = %d.%doC\n",pi,pd);
     e6a:	66 2e       	mov	r6, r22
     e6c:	77 2e       	mov	r7, r23
     e6e:	7f 93       	push	r23
     e70:	6f 93       	push	r22
     e72:	df 92       	push	r13
     e74:	cf 92       	push	r12
		
		clearScreen();
     e76:	9f 92       	push	r9
     e78:	8f 92       	push	r8
		blink();
     e7a:	20 d4       	rcall	.+2112   	; 0x16bc <printf>
		sendString("Temperatura:");
     e7c:	e8 da       	rcall	.-2608   	; 0x44e <clearScreen>
     e7e:	ea da       	rcall	.-2604   	; 0x454 <blink>
     e80:	8b e4       	ldi	r24, 0x4B	; 75
		setCursor(1,0);
     e82:	92 e0       	ldi	r25, 0x02	; 2
     e84:	42 da       	rcall	.-2940   	; 0x30a <sendString>
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	70 e0       	ldi	r23, 0x00	; 0
     e8a:	81 e0       	ldi	r24, 0x01	; 1
		sendInteger(pi);
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	67 da       	rcall	.-2866   	; 0x35e <setCursor>
		setCursor(1,2);
     e90:	c6 01       	movw	r24, r12
     e92:	49 da       	rcall	.-2926   	; 0x326 <sendInteger>
     e94:	62 e0       	ldi	r22, 0x02	; 2
     e96:	70 e0       	ldi	r23, 0x00	; 0
     e98:	81 e0       	ldi	r24, 0x01	; 1
     e9a:	90 e0       	ldi	r25, 0x00	; 0
		sendString(".");
     e9c:	60 da       	rcall	.-2880   	; 0x35e <setCursor>
     e9e:	88 e5       	ldi	r24, 0x58	; 88
     ea0:	92 e0       	ldi	r25, 0x02	; 2
		setCursor(1,3);
     ea2:	33 da       	rcall	.-2970   	; 0x30a <sendString>
     ea4:	63 e0       	ldi	r22, 0x03	; 3
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	58 da       	rcall	.-2896   	; 0x35e <setCursor>
		sendInteger(pd);
     eae:	86 2d       	mov	r24, r6
     eb0:	97 2d       	mov	r25, r7
     eb2:	39 da       	rcall	.-2958   	; 0x326 <sendInteger>
     eb4:	64 e0       	ldi	r22, 0x04	; 4
		setCursor(1,4);
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	50 da       	rcall	.-2912   	; 0x35e <setCursor>
     ebe:	8a e5       	ldi	r24, 0x5A	; 90
     ec0:	92 e0       	ldi	r25, 0x02	; 2
		sendString("oC");
     ec2:	23 da       	rcall	.-3002   	; 0x30a <sendString>
     ec4:	9f ef       	ldi	r25, 0xFF	; 255
     ec6:	2b e7       	ldi	r18, 0x7B	; 123
     ec8:	82 e9       	ldi	r24, 0x92	; 146
     eca:	91 50       	subi	r25, 0x01	; 1
     ecc:	20 40       	sbci	r18, 0x00	; 0
     ece:	80 40       	sbci	r24, 0x00	; 0
     ed0:	e1 f7       	brne	.-8      	; 0xeca <main+0x138>
     ed2:	00 c0       	rjmp	.+0      	; 0xed4 <main+0x142>
     ed4:	00 00       	nop
     ed6:	c1 da       	rcall	.-2686   	; 0x45a <noBlink>
     ed8:	8d b7       	in	r24, 0x3d	; 61
     eda:	9e b7       	in	r25, 0x3e	; 62
		_delay_ms(3000);
		noBlink();
     edc:	48 96       	adiw	r24, 0x18	; 24
     ede:	0f b6       	in	r0, 0x3f	; 63
     ee0:	f8 94       	cli
     ee2:	9e bf       	out	0x3e, r25	; 62
     ee4:	0f be       	out	0x3f, r0	; 63
     ee6:	8d bf       	out	0x3d, r24	; 61
     ee8:	7d cf       	rjmp	.-262    	; 0xde4 <main+0x52>

00000eea <__subsf3>:
     eea:	50 58       	subi	r21, 0x80	; 128

00000eec <__addsf3>:
     eec:	bb 27       	eor	r27, r27
     eee:	aa 27       	eor	r26, r26
     ef0:	0e d0       	rcall	.+28     	; 0xf0e <__addsf3x>
     ef2:	4d c1       	rjmp	.+666    	; 0x118e <__fp_round>
     ef4:	3e d1       	rcall	.+636    	; 0x1172 <__fp_pscA>
     ef6:	30 f0       	brcs	.+12     	; 0xf04 <__addsf3+0x18>
     ef8:	43 d1       	rcall	.+646    	; 0x1180 <__fp_pscB>
     efa:	20 f0       	brcs	.+8      	; 0xf04 <__addsf3+0x18>
     efc:	31 f4       	brne	.+12     	; 0xf0a <__addsf3+0x1e>
     efe:	9f 3f       	cpi	r25, 0xFF	; 255
     f00:	11 f4       	brne	.+4      	; 0xf06 <__addsf3+0x1a>
     f02:	1e f4       	brtc	.+6      	; 0xf0a <__addsf3+0x1e>
     f04:	33 c1       	rjmp	.+614    	; 0x116c <__fp_nan>
     f06:	0e f4       	brtc	.+2      	; 0xf0a <__addsf3+0x1e>
     f08:	e0 95       	com	r30
     f0a:	e7 fb       	bst	r30, 7
     f0c:	29 c1       	rjmp	.+594    	; 0x1160 <__fp_inf>

00000f0e <__addsf3x>:
     f0e:	e9 2f       	mov	r30, r25
     f10:	4f d1       	rcall	.+670    	; 0x11b0 <__fp_split3>
     f12:	80 f3       	brcs	.-32     	; 0xef4 <__addsf3+0x8>
     f14:	ba 17       	cp	r27, r26
     f16:	62 07       	cpc	r22, r18
     f18:	73 07       	cpc	r23, r19
     f1a:	84 07       	cpc	r24, r20
     f1c:	95 07       	cpc	r25, r21
     f1e:	18 f0       	brcs	.+6      	; 0xf26 <__addsf3x+0x18>
     f20:	71 f4       	brne	.+28     	; 0xf3e <__addsf3x+0x30>
     f22:	9e f5       	brtc	.+102    	; 0xf8a <__addsf3x+0x7c>
     f24:	67 c1       	rjmp	.+718    	; 0x11f4 <__fp_zero>
     f26:	0e f4       	brtc	.+2      	; 0xf2a <__addsf3x+0x1c>
     f28:	e0 95       	com	r30
     f2a:	0b 2e       	mov	r0, r27
     f2c:	ba 2f       	mov	r27, r26
     f2e:	a0 2d       	mov	r26, r0
     f30:	0b 01       	movw	r0, r22
     f32:	b9 01       	movw	r22, r18
     f34:	90 01       	movw	r18, r0
     f36:	0c 01       	movw	r0, r24
     f38:	ca 01       	movw	r24, r20
     f3a:	a0 01       	movw	r20, r0
     f3c:	11 24       	eor	r1, r1
     f3e:	ff 27       	eor	r31, r31
     f40:	59 1b       	sub	r21, r25
     f42:	99 f0       	breq	.+38     	; 0xf6a <__addsf3x+0x5c>
     f44:	59 3f       	cpi	r21, 0xF9	; 249
     f46:	50 f4       	brcc	.+20     	; 0xf5c <__addsf3x+0x4e>
     f48:	50 3e       	cpi	r21, 0xE0	; 224
     f4a:	68 f1       	brcs	.+90     	; 0xfa6 <__addsf3x+0x98>
     f4c:	1a 16       	cp	r1, r26
     f4e:	f0 40       	sbci	r31, 0x00	; 0
     f50:	a2 2f       	mov	r26, r18
     f52:	23 2f       	mov	r18, r19
     f54:	34 2f       	mov	r19, r20
     f56:	44 27       	eor	r20, r20
     f58:	58 5f       	subi	r21, 0xF8	; 248
     f5a:	f3 cf       	rjmp	.-26     	; 0xf42 <__addsf3x+0x34>
     f5c:	46 95       	lsr	r20
     f5e:	37 95       	ror	r19
     f60:	27 95       	ror	r18
     f62:	a7 95       	ror	r26
     f64:	f0 40       	sbci	r31, 0x00	; 0
     f66:	53 95       	inc	r21
     f68:	c9 f7       	brne	.-14     	; 0xf5c <__addsf3x+0x4e>
     f6a:	7e f4       	brtc	.+30     	; 0xf8a <__addsf3x+0x7c>
     f6c:	1f 16       	cp	r1, r31
     f6e:	ba 0b       	sbc	r27, r26
     f70:	62 0b       	sbc	r22, r18
     f72:	73 0b       	sbc	r23, r19
     f74:	84 0b       	sbc	r24, r20
     f76:	ba f0       	brmi	.+46     	; 0xfa6 <__addsf3x+0x98>
     f78:	91 50       	subi	r25, 0x01	; 1
     f7a:	a1 f0       	breq	.+40     	; 0xfa4 <__addsf3x+0x96>
     f7c:	ff 0f       	add	r31, r31
     f7e:	bb 1f       	adc	r27, r27
     f80:	66 1f       	adc	r22, r22
     f82:	77 1f       	adc	r23, r23
     f84:	88 1f       	adc	r24, r24
     f86:	c2 f7       	brpl	.-16     	; 0xf78 <__addsf3x+0x6a>
     f88:	0e c0       	rjmp	.+28     	; 0xfa6 <__addsf3x+0x98>
     f8a:	ba 0f       	add	r27, r26
     f8c:	62 1f       	adc	r22, r18
     f8e:	73 1f       	adc	r23, r19
     f90:	84 1f       	adc	r24, r20
     f92:	48 f4       	brcc	.+18     	; 0xfa6 <__addsf3x+0x98>
     f94:	87 95       	ror	r24
     f96:	77 95       	ror	r23
     f98:	67 95       	ror	r22
     f9a:	b7 95       	ror	r27
     f9c:	f7 95       	ror	r31
     f9e:	9e 3f       	cpi	r25, 0xFE	; 254
     fa0:	08 f0       	brcs	.+2      	; 0xfa4 <__addsf3x+0x96>
     fa2:	b3 cf       	rjmp	.-154    	; 0xf0a <__addsf3+0x1e>
     fa4:	93 95       	inc	r25
     fa6:	88 0f       	add	r24, r24
     fa8:	08 f0       	brcs	.+2      	; 0xfac <__addsf3x+0x9e>
     faa:	99 27       	eor	r25, r25
     fac:	ee 0f       	add	r30, r30
     fae:	97 95       	ror	r25
     fb0:	87 95       	ror	r24
     fb2:	08 95       	ret

00000fb4 <__divsf3>:
     fb4:	0c d0       	rcall	.+24     	; 0xfce <__divsf3x>
     fb6:	eb c0       	rjmp	.+470    	; 0x118e <__fp_round>
     fb8:	e3 d0       	rcall	.+454    	; 0x1180 <__fp_pscB>
     fba:	40 f0       	brcs	.+16     	; 0xfcc <__divsf3+0x18>
     fbc:	da d0       	rcall	.+436    	; 0x1172 <__fp_pscA>
     fbe:	30 f0       	brcs	.+12     	; 0xfcc <__divsf3+0x18>
     fc0:	21 f4       	brne	.+8      	; 0xfca <__divsf3+0x16>
     fc2:	5f 3f       	cpi	r21, 0xFF	; 255
     fc4:	19 f0       	breq	.+6      	; 0xfcc <__divsf3+0x18>
     fc6:	cc c0       	rjmp	.+408    	; 0x1160 <__fp_inf>
     fc8:	51 11       	cpse	r21, r1
     fca:	15 c1       	rjmp	.+554    	; 0x11f6 <__fp_szero>
     fcc:	cf c0       	rjmp	.+414    	; 0x116c <__fp_nan>

00000fce <__divsf3x>:
     fce:	f0 d0       	rcall	.+480    	; 0x11b0 <__fp_split3>
     fd0:	98 f3       	brcs	.-26     	; 0xfb8 <__divsf3+0x4>

00000fd2 <__divsf3_pse>:
     fd2:	99 23       	and	r25, r25
     fd4:	c9 f3       	breq	.-14     	; 0xfc8 <__divsf3+0x14>
     fd6:	55 23       	and	r21, r21
     fd8:	b1 f3       	breq	.-20     	; 0xfc6 <__divsf3+0x12>
     fda:	95 1b       	sub	r25, r21
     fdc:	55 0b       	sbc	r21, r21
     fde:	bb 27       	eor	r27, r27
     fe0:	aa 27       	eor	r26, r26
     fe2:	62 17       	cp	r22, r18
     fe4:	73 07       	cpc	r23, r19
     fe6:	84 07       	cpc	r24, r20
     fe8:	38 f0       	brcs	.+14     	; 0xff8 <__divsf3_pse+0x26>
     fea:	9f 5f       	subi	r25, 0xFF	; 255
     fec:	5f 4f       	sbci	r21, 0xFF	; 255
     fee:	22 0f       	add	r18, r18
     ff0:	33 1f       	adc	r19, r19
     ff2:	44 1f       	adc	r20, r20
     ff4:	aa 1f       	adc	r26, r26
     ff6:	a9 f3       	breq	.-22     	; 0xfe2 <__divsf3_pse+0x10>
     ff8:	33 d0       	rcall	.+102    	; 0x1060 <__divsf3_pse+0x8e>
     ffa:	0e 2e       	mov	r0, r30
     ffc:	3a f0       	brmi	.+14     	; 0x100c <__divsf3_pse+0x3a>
     ffe:	e0 e8       	ldi	r30, 0x80	; 128
    1000:	30 d0       	rcall	.+96     	; 0x1062 <__divsf3_pse+0x90>
    1002:	91 50       	subi	r25, 0x01	; 1
    1004:	50 40       	sbci	r21, 0x00	; 0
    1006:	e6 95       	lsr	r30
    1008:	00 1c       	adc	r0, r0
    100a:	ca f7       	brpl	.-14     	; 0xffe <__divsf3_pse+0x2c>
    100c:	29 d0       	rcall	.+82     	; 0x1060 <__divsf3_pse+0x8e>
    100e:	fe 2f       	mov	r31, r30
    1010:	27 d0       	rcall	.+78     	; 0x1060 <__divsf3_pse+0x8e>
    1012:	66 0f       	add	r22, r22
    1014:	77 1f       	adc	r23, r23
    1016:	88 1f       	adc	r24, r24
    1018:	bb 1f       	adc	r27, r27
    101a:	26 17       	cp	r18, r22
    101c:	37 07       	cpc	r19, r23
    101e:	48 07       	cpc	r20, r24
    1020:	ab 07       	cpc	r26, r27
    1022:	b0 e8       	ldi	r27, 0x80	; 128
    1024:	09 f0       	breq	.+2      	; 0x1028 <__divsf3_pse+0x56>
    1026:	bb 0b       	sbc	r27, r27
    1028:	80 2d       	mov	r24, r0
    102a:	bf 01       	movw	r22, r30
    102c:	ff 27       	eor	r31, r31
    102e:	93 58       	subi	r25, 0x83	; 131
    1030:	5f 4f       	sbci	r21, 0xFF	; 255
    1032:	2a f0       	brmi	.+10     	; 0x103e <__divsf3_pse+0x6c>
    1034:	9e 3f       	cpi	r25, 0xFE	; 254
    1036:	51 05       	cpc	r21, r1
    1038:	68 f0       	brcs	.+26     	; 0x1054 <__divsf3_pse+0x82>
    103a:	92 c0       	rjmp	.+292    	; 0x1160 <__fp_inf>
    103c:	dc c0       	rjmp	.+440    	; 0x11f6 <__fp_szero>
    103e:	5f 3f       	cpi	r21, 0xFF	; 255
    1040:	ec f3       	brlt	.-6      	; 0x103c <__divsf3_pse+0x6a>
    1042:	98 3e       	cpi	r25, 0xE8	; 232
    1044:	dc f3       	brlt	.-10     	; 0x103c <__divsf3_pse+0x6a>
    1046:	86 95       	lsr	r24
    1048:	77 95       	ror	r23
    104a:	67 95       	ror	r22
    104c:	b7 95       	ror	r27
    104e:	f7 95       	ror	r31
    1050:	9f 5f       	subi	r25, 0xFF	; 255
    1052:	c9 f7       	brne	.-14     	; 0x1046 <__divsf3_pse+0x74>
    1054:	88 0f       	add	r24, r24
    1056:	91 1d       	adc	r25, r1
    1058:	96 95       	lsr	r25
    105a:	87 95       	ror	r24
    105c:	97 f9       	bld	r25, 7
    105e:	08 95       	ret
    1060:	e1 e0       	ldi	r30, 0x01	; 1
    1062:	66 0f       	add	r22, r22
    1064:	77 1f       	adc	r23, r23
    1066:	88 1f       	adc	r24, r24
    1068:	bb 1f       	adc	r27, r27
    106a:	62 17       	cp	r22, r18
    106c:	73 07       	cpc	r23, r19
    106e:	84 07       	cpc	r24, r20
    1070:	ba 07       	cpc	r27, r26
    1072:	20 f0       	brcs	.+8      	; 0x107c <__divsf3_pse+0xaa>
    1074:	62 1b       	sub	r22, r18
    1076:	73 0b       	sbc	r23, r19
    1078:	84 0b       	sbc	r24, r20
    107a:	ba 0b       	sbc	r27, r26
    107c:	ee 1f       	adc	r30, r30
    107e:	88 f7       	brcc	.-30     	; 0x1062 <__divsf3_pse+0x90>
    1080:	e0 95       	com	r30
    1082:	08 95       	ret

00001084 <__fixsfsi>:
    1084:	04 d0       	rcall	.+8      	; 0x108e <__fixunssfsi>
    1086:	68 94       	set
    1088:	b1 11       	cpse	r27, r1
    108a:	b5 c0       	rjmp	.+362    	; 0x11f6 <__fp_szero>
    108c:	08 95       	ret

0000108e <__fixunssfsi>:
    108e:	98 d0       	rcall	.+304    	; 0x11c0 <__fp_splitA>
    1090:	88 f0       	brcs	.+34     	; 0x10b4 <__fixunssfsi+0x26>
    1092:	9f 57       	subi	r25, 0x7F	; 127
    1094:	90 f0       	brcs	.+36     	; 0x10ba <__fixunssfsi+0x2c>
    1096:	b9 2f       	mov	r27, r25
    1098:	99 27       	eor	r25, r25
    109a:	b7 51       	subi	r27, 0x17	; 23
    109c:	a0 f0       	brcs	.+40     	; 0x10c6 <__fixunssfsi+0x38>
    109e:	d1 f0       	breq	.+52     	; 0x10d4 <__fixunssfsi+0x46>
    10a0:	66 0f       	add	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	88 1f       	adc	r24, r24
    10a6:	99 1f       	adc	r25, r25
    10a8:	1a f0       	brmi	.+6      	; 0x10b0 <__fixunssfsi+0x22>
    10aa:	ba 95       	dec	r27
    10ac:	c9 f7       	brne	.-14     	; 0x10a0 <__fixunssfsi+0x12>
    10ae:	12 c0       	rjmp	.+36     	; 0x10d4 <__fixunssfsi+0x46>
    10b0:	b1 30       	cpi	r27, 0x01	; 1
    10b2:	81 f0       	breq	.+32     	; 0x10d4 <__fixunssfsi+0x46>
    10b4:	9f d0       	rcall	.+318    	; 0x11f4 <__fp_zero>
    10b6:	b1 e0       	ldi	r27, 0x01	; 1
    10b8:	08 95       	ret
    10ba:	9c c0       	rjmp	.+312    	; 0x11f4 <__fp_zero>
    10bc:	67 2f       	mov	r22, r23
    10be:	78 2f       	mov	r23, r24
    10c0:	88 27       	eor	r24, r24
    10c2:	b8 5f       	subi	r27, 0xF8	; 248
    10c4:	39 f0       	breq	.+14     	; 0x10d4 <__fixunssfsi+0x46>
    10c6:	b9 3f       	cpi	r27, 0xF9	; 249
    10c8:	cc f3       	brlt	.-14     	; 0x10bc <__fixunssfsi+0x2e>
    10ca:	86 95       	lsr	r24
    10cc:	77 95       	ror	r23
    10ce:	67 95       	ror	r22
    10d0:	b3 95       	inc	r27
    10d2:	d9 f7       	brne	.-10     	; 0x10ca <__fixunssfsi+0x3c>
    10d4:	3e f4       	brtc	.+14     	; 0x10e4 <__fixunssfsi+0x56>
    10d6:	90 95       	com	r25
    10d8:	80 95       	com	r24
    10da:	70 95       	com	r23
    10dc:	61 95       	neg	r22
    10de:	7f 4f       	sbci	r23, 0xFF	; 255
    10e0:	8f 4f       	sbci	r24, 0xFF	; 255
    10e2:	9f 4f       	sbci	r25, 0xFF	; 255
    10e4:	08 95       	ret

000010e6 <__floatunsisf>:
    10e6:	e8 94       	clt
    10e8:	09 c0       	rjmp	.+18     	; 0x10fc <__floatsisf+0x12>

000010ea <__floatsisf>:
    10ea:	97 fb       	bst	r25, 7
    10ec:	3e f4       	brtc	.+14     	; 0x10fc <__floatsisf+0x12>
    10ee:	90 95       	com	r25
    10f0:	80 95       	com	r24
    10f2:	70 95       	com	r23
    10f4:	61 95       	neg	r22
    10f6:	7f 4f       	sbci	r23, 0xFF	; 255
    10f8:	8f 4f       	sbci	r24, 0xFF	; 255
    10fa:	9f 4f       	sbci	r25, 0xFF	; 255
    10fc:	99 23       	and	r25, r25
    10fe:	a9 f0       	breq	.+42     	; 0x112a <__floatsisf+0x40>
    1100:	f9 2f       	mov	r31, r25
    1102:	96 e9       	ldi	r25, 0x96	; 150
    1104:	bb 27       	eor	r27, r27
    1106:	93 95       	inc	r25
    1108:	f6 95       	lsr	r31
    110a:	87 95       	ror	r24
    110c:	77 95       	ror	r23
    110e:	67 95       	ror	r22
    1110:	b7 95       	ror	r27
    1112:	f1 11       	cpse	r31, r1
    1114:	f8 cf       	rjmp	.-16     	; 0x1106 <__floatsisf+0x1c>
    1116:	fa f4       	brpl	.+62     	; 0x1156 <__floatsisf+0x6c>
    1118:	bb 0f       	add	r27, r27
    111a:	11 f4       	brne	.+4      	; 0x1120 <__floatsisf+0x36>
    111c:	60 ff       	sbrs	r22, 0
    111e:	1b c0       	rjmp	.+54     	; 0x1156 <__floatsisf+0x6c>
    1120:	6f 5f       	subi	r22, 0xFF	; 255
    1122:	7f 4f       	sbci	r23, 0xFF	; 255
    1124:	8f 4f       	sbci	r24, 0xFF	; 255
    1126:	9f 4f       	sbci	r25, 0xFF	; 255
    1128:	16 c0       	rjmp	.+44     	; 0x1156 <__floatsisf+0x6c>
    112a:	88 23       	and	r24, r24
    112c:	11 f0       	breq	.+4      	; 0x1132 <__floatsisf+0x48>
    112e:	96 e9       	ldi	r25, 0x96	; 150
    1130:	11 c0       	rjmp	.+34     	; 0x1154 <__floatsisf+0x6a>
    1132:	77 23       	and	r23, r23
    1134:	21 f0       	breq	.+8      	; 0x113e <__floatsisf+0x54>
    1136:	9e e8       	ldi	r25, 0x8E	; 142
    1138:	87 2f       	mov	r24, r23
    113a:	76 2f       	mov	r23, r22
    113c:	05 c0       	rjmp	.+10     	; 0x1148 <__floatsisf+0x5e>
    113e:	66 23       	and	r22, r22
    1140:	71 f0       	breq	.+28     	; 0x115e <__floatsisf+0x74>
    1142:	96 e8       	ldi	r25, 0x86	; 134
    1144:	86 2f       	mov	r24, r22
    1146:	70 e0       	ldi	r23, 0x00	; 0
    1148:	60 e0       	ldi	r22, 0x00	; 0
    114a:	2a f0       	brmi	.+10     	; 0x1156 <__floatsisf+0x6c>
    114c:	9a 95       	dec	r25
    114e:	66 0f       	add	r22, r22
    1150:	77 1f       	adc	r23, r23
    1152:	88 1f       	adc	r24, r24
    1154:	da f7       	brpl	.-10     	; 0x114c <__floatsisf+0x62>
    1156:	88 0f       	add	r24, r24
    1158:	96 95       	lsr	r25
    115a:	87 95       	ror	r24
    115c:	97 f9       	bld	r25, 7
    115e:	08 95       	ret

00001160 <__fp_inf>:
    1160:	97 f9       	bld	r25, 7
    1162:	9f 67       	ori	r25, 0x7F	; 127
    1164:	80 e8       	ldi	r24, 0x80	; 128
    1166:	70 e0       	ldi	r23, 0x00	; 0
    1168:	60 e0       	ldi	r22, 0x00	; 0
    116a:	08 95       	ret

0000116c <__fp_nan>:
    116c:	9f ef       	ldi	r25, 0xFF	; 255
    116e:	80 ec       	ldi	r24, 0xC0	; 192
    1170:	08 95       	ret

00001172 <__fp_pscA>:
    1172:	00 24       	eor	r0, r0
    1174:	0a 94       	dec	r0
    1176:	16 16       	cp	r1, r22
    1178:	17 06       	cpc	r1, r23
    117a:	18 06       	cpc	r1, r24
    117c:	09 06       	cpc	r0, r25
    117e:	08 95       	ret

00001180 <__fp_pscB>:
    1180:	00 24       	eor	r0, r0
    1182:	0a 94       	dec	r0
    1184:	12 16       	cp	r1, r18
    1186:	13 06       	cpc	r1, r19
    1188:	14 06       	cpc	r1, r20
    118a:	05 06       	cpc	r0, r21
    118c:	08 95       	ret

0000118e <__fp_round>:
    118e:	09 2e       	mov	r0, r25
    1190:	03 94       	inc	r0
    1192:	00 0c       	add	r0, r0
    1194:	11 f4       	brne	.+4      	; 0x119a <__fp_round+0xc>
    1196:	88 23       	and	r24, r24
    1198:	52 f0       	brmi	.+20     	; 0x11ae <__fp_round+0x20>
    119a:	bb 0f       	add	r27, r27
    119c:	40 f4       	brcc	.+16     	; 0x11ae <__fp_round+0x20>
    119e:	bf 2b       	or	r27, r31
    11a0:	11 f4       	brne	.+4      	; 0x11a6 <__fp_round+0x18>
    11a2:	60 ff       	sbrs	r22, 0
    11a4:	04 c0       	rjmp	.+8      	; 0x11ae <__fp_round+0x20>
    11a6:	6f 5f       	subi	r22, 0xFF	; 255
    11a8:	7f 4f       	sbci	r23, 0xFF	; 255
    11aa:	8f 4f       	sbci	r24, 0xFF	; 255
    11ac:	9f 4f       	sbci	r25, 0xFF	; 255
    11ae:	08 95       	ret

000011b0 <__fp_split3>:
    11b0:	57 fd       	sbrc	r21, 7
    11b2:	90 58       	subi	r25, 0x80	; 128
    11b4:	44 0f       	add	r20, r20
    11b6:	55 1f       	adc	r21, r21
    11b8:	59 f0       	breq	.+22     	; 0x11d0 <__fp_splitA+0x10>
    11ba:	5f 3f       	cpi	r21, 0xFF	; 255
    11bc:	71 f0       	breq	.+28     	; 0x11da <__fp_splitA+0x1a>
    11be:	47 95       	ror	r20

000011c0 <__fp_splitA>:
    11c0:	88 0f       	add	r24, r24
    11c2:	97 fb       	bst	r25, 7
    11c4:	99 1f       	adc	r25, r25
    11c6:	61 f0       	breq	.+24     	; 0x11e0 <__fp_splitA+0x20>
    11c8:	9f 3f       	cpi	r25, 0xFF	; 255
    11ca:	79 f0       	breq	.+30     	; 0x11ea <__fp_splitA+0x2a>
    11cc:	87 95       	ror	r24
    11ce:	08 95       	ret
    11d0:	12 16       	cp	r1, r18
    11d2:	13 06       	cpc	r1, r19
    11d4:	14 06       	cpc	r1, r20
    11d6:	55 1f       	adc	r21, r21
    11d8:	f2 cf       	rjmp	.-28     	; 0x11be <__fp_split3+0xe>
    11da:	46 95       	lsr	r20
    11dc:	f1 df       	rcall	.-30     	; 0x11c0 <__fp_splitA>
    11de:	08 c0       	rjmp	.+16     	; 0x11f0 <__fp_splitA+0x30>
    11e0:	16 16       	cp	r1, r22
    11e2:	17 06       	cpc	r1, r23
    11e4:	18 06       	cpc	r1, r24
    11e6:	99 1f       	adc	r25, r25
    11e8:	f1 cf       	rjmp	.-30     	; 0x11cc <__fp_splitA+0xc>
    11ea:	86 95       	lsr	r24
    11ec:	71 05       	cpc	r23, r1
    11ee:	61 05       	cpc	r22, r1
    11f0:	08 94       	sec
    11f2:	08 95       	ret

000011f4 <__fp_zero>:
    11f4:	e8 94       	clt

000011f6 <__fp_szero>:
    11f6:	bb 27       	eor	r27, r27
    11f8:	66 27       	eor	r22, r22
    11fa:	77 27       	eor	r23, r23
    11fc:	cb 01       	movw	r24, r22
    11fe:	97 f9       	bld	r25, 7
    1200:	08 95       	ret

00001202 <__mulsf3>:
    1202:	0b d0       	rcall	.+22     	; 0x121a <__mulsf3x>
    1204:	c4 cf       	rjmp	.-120    	; 0x118e <__fp_round>
    1206:	b5 df       	rcall	.-150    	; 0x1172 <__fp_pscA>
    1208:	28 f0       	brcs	.+10     	; 0x1214 <__mulsf3+0x12>
    120a:	ba df       	rcall	.-140    	; 0x1180 <__fp_pscB>
    120c:	18 f0       	brcs	.+6      	; 0x1214 <__mulsf3+0x12>
    120e:	95 23       	and	r25, r21
    1210:	09 f0       	breq	.+2      	; 0x1214 <__mulsf3+0x12>
    1212:	a6 cf       	rjmp	.-180    	; 0x1160 <__fp_inf>
    1214:	ab cf       	rjmp	.-170    	; 0x116c <__fp_nan>
    1216:	11 24       	eor	r1, r1
    1218:	ee cf       	rjmp	.-36     	; 0x11f6 <__fp_szero>

0000121a <__mulsf3x>:
    121a:	ca df       	rcall	.-108    	; 0x11b0 <__fp_split3>
    121c:	a0 f3       	brcs	.-24     	; 0x1206 <__mulsf3+0x4>

0000121e <__mulsf3_pse>:
    121e:	95 9f       	mul	r25, r21
    1220:	d1 f3       	breq	.-12     	; 0x1216 <__mulsf3+0x14>
    1222:	95 0f       	add	r25, r21
    1224:	50 e0       	ldi	r21, 0x00	; 0
    1226:	55 1f       	adc	r21, r21
    1228:	62 9f       	mul	r22, r18
    122a:	f0 01       	movw	r30, r0
    122c:	72 9f       	mul	r23, r18
    122e:	bb 27       	eor	r27, r27
    1230:	f0 0d       	add	r31, r0
    1232:	b1 1d       	adc	r27, r1
    1234:	63 9f       	mul	r22, r19
    1236:	aa 27       	eor	r26, r26
    1238:	f0 0d       	add	r31, r0
    123a:	b1 1d       	adc	r27, r1
    123c:	aa 1f       	adc	r26, r26
    123e:	64 9f       	mul	r22, r20
    1240:	66 27       	eor	r22, r22
    1242:	b0 0d       	add	r27, r0
    1244:	a1 1d       	adc	r26, r1
    1246:	66 1f       	adc	r22, r22
    1248:	82 9f       	mul	r24, r18
    124a:	22 27       	eor	r18, r18
    124c:	b0 0d       	add	r27, r0
    124e:	a1 1d       	adc	r26, r1
    1250:	62 1f       	adc	r22, r18
    1252:	73 9f       	mul	r23, r19
    1254:	b0 0d       	add	r27, r0
    1256:	a1 1d       	adc	r26, r1
    1258:	62 1f       	adc	r22, r18
    125a:	83 9f       	mul	r24, r19
    125c:	a0 0d       	add	r26, r0
    125e:	61 1d       	adc	r22, r1
    1260:	22 1f       	adc	r18, r18
    1262:	74 9f       	mul	r23, r20
    1264:	33 27       	eor	r19, r19
    1266:	a0 0d       	add	r26, r0
    1268:	61 1d       	adc	r22, r1
    126a:	23 1f       	adc	r18, r19
    126c:	84 9f       	mul	r24, r20
    126e:	60 0d       	add	r22, r0
    1270:	21 1d       	adc	r18, r1
    1272:	82 2f       	mov	r24, r18
    1274:	76 2f       	mov	r23, r22
    1276:	6a 2f       	mov	r22, r26
    1278:	11 24       	eor	r1, r1
    127a:	9f 57       	subi	r25, 0x7F	; 127
    127c:	50 40       	sbci	r21, 0x00	; 0
    127e:	8a f0       	brmi	.+34     	; 0x12a2 <__mulsf3_pse+0x84>
    1280:	e1 f0       	breq	.+56     	; 0x12ba <__mulsf3_pse+0x9c>
    1282:	88 23       	and	r24, r24
    1284:	4a f0       	brmi	.+18     	; 0x1298 <__mulsf3_pse+0x7a>
    1286:	ee 0f       	add	r30, r30
    1288:	ff 1f       	adc	r31, r31
    128a:	bb 1f       	adc	r27, r27
    128c:	66 1f       	adc	r22, r22
    128e:	77 1f       	adc	r23, r23
    1290:	88 1f       	adc	r24, r24
    1292:	91 50       	subi	r25, 0x01	; 1
    1294:	50 40       	sbci	r21, 0x00	; 0
    1296:	a9 f7       	brne	.-22     	; 0x1282 <__mulsf3_pse+0x64>
    1298:	9e 3f       	cpi	r25, 0xFE	; 254
    129a:	51 05       	cpc	r21, r1
    129c:	70 f0       	brcs	.+28     	; 0x12ba <__mulsf3_pse+0x9c>
    129e:	60 cf       	rjmp	.-320    	; 0x1160 <__fp_inf>
    12a0:	aa cf       	rjmp	.-172    	; 0x11f6 <__fp_szero>
    12a2:	5f 3f       	cpi	r21, 0xFF	; 255
    12a4:	ec f3       	brlt	.-6      	; 0x12a0 <__mulsf3_pse+0x82>
    12a6:	98 3e       	cpi	r25, 0xE8	; 232
    12a8:	dc f3       	brlt	.-10     	; 0x12a0 <__mulsf3_pse+0x82>
    12aa:	86 95       	lsr	r24
    12ac:	77 95       	ror	r23
    12ae:	67 95       	ror	r22
    12b0:	b7 95       	ror	r27
    12b2:	f7 95       	ror	r31
    12b4:	e7 95       	ror	r30
    12b6:	9f 5f       	subi	r25, 0xFF	; 255
    12b8:	c1 f7       	brne	.-16     	; 0x12aa <__mulsf3_pse+0x8c>
    12ba:	fe 2b       	or	r31, r30
    12bc:	88 0f       	add	r24, r24
    12be:	91 1d       	adc	r25, r1
    12c0:	96 95       	lsr	r25
    12c2:	87 95       	ror	r24
    12c4:	97 f9       	bld	r25, 7
    12c6:	08 95       	ret

000012c8 <pow>:
    12c8:	fa 01       	movw	r30, r20
    12ca:	ee 0f       	add	r30, r30
    12cc:	ff 1f       	adc	r31, r31
    12ce:	30 96       	adiw	r30, 0x00	; 0
    12d0:	21 05       	cpc	r18, r1
    12d2:	31 05       	cpc	r19, r1
    12d4:	99 f1       	breq	.+102    	; 0x133c <pow+0x74>
    12d6:	61 15       	cp	r22, r1
    12d8:	71 05       	cpc	r23, r1
    12da:	61 f4       	brne	.+24     	; 0x12f4 <pow+0x2c>
    12dc:	80 38       	cpi	r24, 0x80	; 128
    12de:	bf e3       	ldi	r27, 0x3F	; 63
    12e0:	9b 07       	cpc	r25, r27
    12e2:	49 f1       	breq	.+82     	; 0x1336 <pow+0x6e>
    12e4:	68 94       	set
    12e6:	90 38       	cpi	r25, 0x80	; 128
    12e8:	81 05       	cpc	r24, r1
    12ea:	61 f0       	breq	.+24     	; 0x1304 <pow+0x3c>
    12ec:	80 38       	cpi	r24, 0x80	; 128
    12ee:	bf ef       	ldi	r27, 0xFF	; 255
    12f0:	9b 07       	cpc	r25, r27
    12f2:	41 f0       	breq	.+16     	; 0x1304 <pow+0x3c>
    12f4:	99 23       	and	r25, r25
    12f6:	42 f5       	brpl	.+80     	; 0x1348 <pow+0x80>
    12f8:	ff 3f       	cpi	r31, 0xFF	; 255
    12fa:	e1 05       	cpc	r30, r1
    12fc:	31 05       	cpc	r19, r1
    12fe:	21 05       	cpc	r18, r1
    1300:	11 f1       	breq	.+68     	; 0x1346 <pow+0x7e>
    1302:	e8 94       	clt
    1304:	08 94       	sec
    1306:	e7 95       	ror	r30
    1308:	d9 01       	movw	r26, r18
    130a:	aa 23       	and	r26, r26
    130c:	29 f4       	brne	.+10     	; 0x1318 <pow+0x50>
    130e:	ab 2f       	mov	r26, r27
    1310:	be 2f       	mov	r27, r30
    1312:	f8 5f       	subi	r31, 0xF8	; 248
    1314:	d0 f3       	brcs	.-12     	; 0x130a <pow+0x42>
    1316:	10 c0       	rjmp	.+32     	; 0x1338 <pow+0x70>
    1318:	ff 5f       	subi	r31, 0xFF	; 255
    131a:	70 f4       	brcc	.+28     	; 0x1338 <pow+0x70>
    131c:	a6 95       	lsr	r26
    131e:	e0 f7       	brcc	.-8      	; 0x1318 <pow+0x50>
    1320:	f7 39       	cpi	r31, 0x97	; 151
    1322:	50 f0       	brcs	.+20     	; 0x1338 <pow+0x70>
    1324:	19 f0       	breq	.+6      	; 0x132c <pow+0x64>
    1326:	ff 3a       	cpi	r31, 0xAF	; 175
    1328:	38 f4       	brcc	.+14     	; 0x1338 <pow+0x70>
    132a:	9f 77       	andi	r25, 0x7F	; 127
    132c:	9f 93       	push	r25
    132e:	0c d0       	rcall	.+24     	; 0x1348 <pow+0x80>
    1330:	0f 90       	pop	r0
    1332:	07 fc       	sbrc	r0, 7
    1334:	90 58       	subi	r25, 0x80	; 128
    1336:	08 95       	ret
    1338:	3e f0       	brts	.+14     	; 0x1348 <pow+0x80>
    133a:	18 cf       	rjmp	.-464    	; 0x116c <__fp_nan>
    133c:	60 e0       	ldi	r22, 0x00	; 0
    133e:	70 e0       	ldi	r23, 0x00	; 0
    1340:	80 e8       	ldi	r24, 0x80	; 128
    1342:	9f e3       	ldi	r25, 0x3F	; 63
    1344:	08 95       	ret
    1346:	4f e7       	ldi	r20, 0x7F	; 127
    1348:	9f 77       	andi	r25, 0x7F	; 127
    134a:	5f 93       	push	r21
    134c:	4f 93       	push	r20
    134e:	3f 93       	push	r19
    1350:	2f 93       	push	r18
    1352:	9e d0       	rcall	.+316    	; 0x1490 <log>
    1354:	2f 91       	pop	r18
    1356:	3f 91       	pop	r19
    1358:	4f 91       	pop	r20
    135a:	5f 91       	pop	r21
    135c:	52 df       	rcall	.-348    	; 0x1202 <__mulsf3>
    135e:	05 c0       	rjmp	.+10     	; 0x136a <exp>
    1360:	19 f4       	brne	.+6      	; 0x1368 <pow+0xa0>
    1362:	0e f0       	brts	.+2      	; 0x1366 <pow+0x9e>
    1364:	fd ce       	rjmp	.-518    	; 0x1160 <__fp_inf>
    1366:	46 cf       	rjmp	.-372    	; 0x11f4 <__fp_zero>
    1368:	01 cf       	rjmp	.-510    	; 0x116c <__fp_nan>

0000136a <exp>:
    136a:	2a df       	rcall	.-428    	; 0x11c0 <__fp_splitA>
    136c:	c8 f3       	brcs	.-14     	; 0x1360 <pow+0x98>
    136e:	96 38       	cpi	r25, 0x86	; 134
    1370:	c0 f7       	brcc	.-16     	; 0x1362 <pow+0x9a>
    1372:	07 f8       	bld	r0, 7
    1374:	0f 92       	push	r0
    1376:	e8 94       	clt
    1378:	2b e3       	ldi	r18, 0x3B	; 59
    137a:	3a ea       	ldi	r19, 0xAA	; 170
    137c:	48 eb       	ldi	r20, 0xB8	; 184
    137e:	5f e7       	ldi	r21, 0x7F	; 127
    1380:	4e df       	rcall	.-356    	; 0x121e <__mulsf3_pse>
    1382:	0f 92       	push	r0
    1384:	0f 92       	push	r0
    1386:	0f 92       	push	r0
    1388:	4d b7       	in	r20, 0x3d	; 61
    138a:	5e b7       	in	r21, 0x3e	; 62
    138c:	0f 92       	push	r0
    138e:	c0 d0       	rcall	.+384    	; 0x1510 <modf>
    1390:	e8 ea       	ldi	r30, 0xA8	; 168
    1392:	f0 e0       	ldi	r31, 0x00	; 0
    1394:	16 d0       	rcall	.+44     	; 0x13c2 <__fp_powser>
    1396:	4f 91       	pop	r20
    1398:	5f 91       	pop	r21
    139a:	ef 91       	pop	r30
    139c:	ff 91       	pop	r31
    139e:	e5 95       	asr	r30
    13a0:	ee 1f       	adc	r30, r30
    13a2:	ff 1f       	adc	r31, r31
    13a4:	49 f0       	breq	.+18     	; 0x13b8 <exp+0x4e>
    13a6:	fe 57       	subi	r31, 0x7E	; 126
    13a8:	e0 68       	ori	r30, 0x80	; 128
    13aa:	44 27       	eor	r20, r20
    13ac:	ee 0f       	add	r30, r30
    13ae:	44 1f       	adc	r20, r20
    13b0:	fa 95       	dec	r31
    13b2:	e1 f7       	brne	.-8      	; 0x13ac <exp+0x42>
    13b4:	41 95       	neg	r20
    13b6:	55 0b       	sbc	r21, r21
    13b8:	32 d0       	rcall	.+100    	; 0x141e <ldexp>
    13ba:	0f 90       	pop	r0
    13bc:	07 fe       	sbrs	r0, 7
    13be:	26 c0       	rjmp	.+76     	; 0x140c <inverse>
    13c0:	08 95       	ret

000013c2 <__fp_powser>:
    13c2:	df 93       	push	r29
    13c4:	cf 93       	push	r28
    13c6:	1f 93       	push	r17
    13c8:	0f 93       	push	r16
    13ca:	ff 92       	push	r15
    13cc:	ef 92       	push	r14
    13ce:	df 92       	push	r13
    13d0:	7b 01       	movw	r14, r22
    13d2:	8c 01       	movw	r16, r24
    13d4:	68 94       	set
    13d6:	05 c0       	rjmp	.+10     	; 0x13e2 <__fp_powser+0x20>
    13d8:	da 2e       	mov	r13, r26
    13da:	ef 01       	movw	r28, r30
    13dc:	1e df       	rcall	.-452    	; 0x121a <__mulsf3x>
    13de:	fe 01       	movw	r30, r28
    13e0:	e8 94       	clt
    13e2:	a5 91       	lpm	r26, Z+
    13e4:	25 91       	lpm	r18, Z+
    13e6:	35 91       	lpm	r19, Z+
    13e8:	45 91       	lpm	r20, Z+
    13ea:	55 91       	lpm	r21, Z+
    13ec:	ae f3       	brts	.-22     	; 0x13d8 <__fp_powser+0x16>
    13ee:	ef 01       	movw	r28, r30
    13f0:	8e dd       	rcall	.-1252   	; 0xf0e <__addsf3x>
    13f2:	fe 01       	movw	r30, r28
    13f4:	97 01       	movw	r18, r14
    13f6:	a8 01       	movw	r20, r16
    13f8:	da 94       	dec	r13
    13fa:	79 f7       	brne	.-34     	; 0x13da <__fp_powser+0x18>
    13fc:	df 90       	pop	r13
    13fe:	ef 90       	pop	r14
    1400:	ff 90       	pop	r15
    1402:	0f 91       	pop	r16
    1404:	1f 91       	pop	r17
    1406:	cf 91       	pop	r28
    1408:	df 91       	pop	r29
    140a:	08 95       	ret

0000140c <inverse>:
    140c:	9b 01       	movw	r18, r22
    140e:	ac 01       	movw	r20, r24
    1410:	60 e0       	ldi	r22, 0x00	; 0
    1412:	70 e0       	ldi	r23, 0x00	; 0
    1414:	80 e8       	ldi	r24, 0x80	; 128
    1416:	9f e3       	ldi	r25, 0x3F	; 63
    1418:	cd cd       	rjmp	.-1126   	; 0xfb4 <__divsf3>
    141a:	a2 ce       	rjmp	.-700    	; 0x1160 <__fp_inf>
    141c:	ac c0       	rjmp	.+344    	; 0x1576 <__fp_mpack>

0000141e <ldexp>:
    141e:	d0 de       	rcall	.-608    	; 0x11c0 <__fp_splitA>
    1420:	e8 f3       	brcs	.-6      	; 0x141c <inverse+0x10>
    1422:	99 23       	and	r25, r25
    1424:	d9 f3       	breq	.-10     	; 0x141c <inverse+0x10>
    1426:	94 0f       	add	r25, r20
    1428:	51 1d       	adc	r21, r1
    142a:	bb f3       	brvs	.-18     	; 0x141a <inverse+0xe>
    142c:	91 50       	subi	r25, 0x01	; 1
    142e:	50 40       	sbci	r21, 0x00	; 0
    1430:	94 f0       	brlt	.+36     	; 0x1456 <ldexp+0x38>
    1432:	59 f0       	breq	.+22     	; 0x144a <ldexp+0x2c>
    1434:	88 23       	and	r24, r24
    1436:	32 f0       	brmi	.+12     	; 0x1444 <ldexp+0x26>
    1438:	66 0f       	add	r22, r22
    143a:	77 1f       	adc	r23, r23
    143c:	88 1f       	adc	r24, r24
    143e:	91 50       	subi	r25, 0x01	; 1
    1440:	50 40       	sbci	r21, 0x00	; 0
    1442:	c1 f7       	brne	.-16     	; 0x1434 <ldexp+0x16>
    1444:	9e 3f       	cpi	r25, 0xFE	; 254
    1446:	51 05       	cpc	r21, r1
    1448:	44 f7       	brge	.-48     	; 0x141a <inverse+0xe>
    144a:	88 0f       	add	r24, r24
    144c:	91 1d       	adc	r25, r1
    144e:	96 95       	lsr	r25
    1450:	87 95       	ror	r24
    1452:	97 f9       	bld	r25, 7
    1454:	08 95       	ret
    1456:	5f 3f       	cpi	r21, 0xFF	; 255
    1458:	ac f0       	brlt	.+42     	; 0x1484 <ldexp+0x66>
    145a:	98 3e       	cpi	r25, 0xE8	; 232
    145c:	9c f0       	brlt	.+38     	; 0x1484 <ldexp+0x66>
    145e:	bb 27       	eor	r27, r27
    1460:	86 95       	lsr	r24
    1462:	77 95       	ror	r23
    1464:	67 95       	ror	r22
    1466:	b7 95       	ror	r27
    1468:	08 f4       	brcc	.+2      	; 0x146c <ldexp+0x4e>
    146a:	b1 60       	ori	r27, 0x01	; 1
    146c:	93 95       	inc	r25
    146e:	c1 f7       	brne	.-16     	; 0x1460 <ldexp+0x42>
    1470:	bb 0f       	add	r27, r27
    1472:	58 f7       	brcc	.-42     	; 0x144a <ldexp+0x2c>
    1474:	11 f4       	brne	.+4      	; 0x147a <ldexp+0x5c>
    1476:	60 ff       	sbrs	r22, 0
    1478:	e8 cf       	rjmp	.-48     	; 0x144a <ldexp+0x2c>
    147a:	6f 5f       	subi	r22, 0xFF	; 255
    147c:	7f 4f       	sbci	r23, 0xFF	; 255
    147e:	8f 4f       	sbci	r24, 0xFF	; 255
    1480:	9f 4f       	sbci	r25, 0xFF	; 255
    1482:	e3 cf       	rjmp	.-58     	; 0x144a <ldexp+0x2c>
    1484:	b8 ce       	rjmp	.-656    	; 0x11f6 <__fp_szero>
    1486:	0e f0       	brts	.+2      	; 0x148a <ldexp+0x6c>
    1488:	76 c0       	rjmp	.+236    	; 0x1576 <__fp_mpack>
    148a:	70 ce       	rjmp	.-800    	; 0x116c <__fp_nan>
    148c:	68 94       	set
    148e:	68 ce       	rjmp	.-816    	; 0x1160 <__fp_inf>

00001490 <log>:
    1490:	97 de       	rcall	.-722    	; 0x11c0 <__fp_splitA>
    1492:	c8 f3       	brcs	.-14     	; 0x1486 <ldexp+0x68>
    1494:	99 23       	and	r25, r25
    1496:	d1 f3       	breq	.-12     	; 0x148c <ldexp+0x6e>
    1498:	c6 f3       	brts	.-16     	; 0x148a <ldexp+0x6c>
    149a:	df 93       	push	r29
    149c:	cf 93       	push	r28
    149e:	1f 93       	push	r17
    14a0:	0f 93       	push	r16
    14a2:	ff 92       	push	r15
    14a4:	c9 2f       	mov	r28, r25
    14a6:	dd 27       	eor	r29, r29
    14a8:	88 23       	and	r24, r24
    14aa:	2a f0       	brmi	.+10     	; 0x14b6 <log+0x26>
    14ac:	21 97       	sbiw	r28, 0x01	; 1
    14ae:	66 0f       	add	r22, r22
    14b0:	77 1f       	adc	r23, r23
    14b2:	88 1f       	adc	r24, r24
    14b4:	da f7       	brpl	.-10     	; 0x14ac <log+0x1c>
    14b6:	20 e0       	ldi	r18, 0x00	; 0
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	40 e8       	ldi	r20, 0x80	; 128
    14bc:	5f eb       	ldi	r21, 0xBF	; 191
    14be:	9f e3       	ldi	r25, 0x3F	; 63
    14c0:	88 39       	cpi	r24, 0x98	; 152
    14c2:	20 f0       	brcs	.+8      	; 0x14cc <log+0x3c>
    14c4:	80 3e       	cpi	r24, 0xE0	; 224
    14c6:	30 f0       	brcs	.+12     	; 0x14d4 <log+0x44>
    14c8:	21 96       	adiw	r28, 0x01	; 1
    14ca:	8f 77       	andi	r24, 0x7F	; 127
    14cc:	0f dd       	rcall	.-1506   	; 0xeec <__addsf3>
    14ce:	e0 ed       	ldi	r30, 0xD0	; 208
    14d0:	f0 e0       	ldi	r31, 0x00	; 0
    14d2:	03 c0       	rjmp	.+6      	; 0x14da <log+0x4a>
    14d4:	0b dd       	rcall	.-1514   	; 0xeec <__addsf3>
    14d6:	ed ef       	ldi	r30, 0xFD	; 253
    14d8:	f0 e0       	ldi	r31, 0x00	; 0
    14da:	73 df       	rcall	.-282    	; 0x13c2 <__fp_powser>
    14dc:	8b 01       	movw	r16, r22
    14de:	be 01       	movw	r22, r28
    14e0:	ec 01       	movw	r28, r24
    14e2:	fb 2e       	mov	r15, r27
    14e4:	6f 57       	subi	r22, 0x7F	; 127
    14e6:	71 09       	sbc	r23, r1
    14e8:	75 95       	asr	r23
    14ea:	77 1f       	adc	r23, r23
    14ec:	88 0b       	sbc	r24, r24
    14ee:	99 0b       	sbc	r25, r25
    14f0:	fc dd       	rcall	.-1032   	; 0x10ea <__floatsisf>
    14f2:	28 e1       	ldi	r18, 0x18	; 24
    14f4:	32 e7       	ldi	r19, 0x72	; 114
    14f6:	41 e3       	ldi	r20, 0x31	; 49
    14f8:	5f e3       	ldi	r21, 0x3F	; 63
    14fa:	8f de       	rcall	.-738    	; 0x121a <__mulsf3x>
    14fc:	af 2d       	mov	r26, r15
    14fe:	98 01       	movw	r18, r16
    1500:	ae 01       	movw	r20, r28
    1502:	ff 90       	pop	r15
    1504:	0f 91       	pop	r16
    1506:	1f 91       	pop	r17
    1508:	cf 91       	pop	r28
    150a:	df 91       	pop	r29
    150c:	00 dd       	rcall	.-1536   	; 0xf0e <__addsf3x>
    150e:	3f ce       	rjmp	.-898    	; 0x118e <__fp_round>

00001510 <modf>:
    1510:	fa 01       	movw	r30, r20
    1512:	dc 01       	movw	r26, r24
    1514:	aa 0f       	add	r26, r26
    1516:	bb 1f       	adc	r27, r27
    1518:	9b 01       	movw	r18, r22
    151a:	ac 01       	movw	r20, r24
    151c:	bf 57       	subi	r27, 0x7F	; 127
    151e:	28 f4       	brcc	.+10     	; 0x152a <modf+0x1a>
    1520:	22 27       	eor	r18, r18
    1522:	33 27       	eor	r19, r19
    1524:	44 27       	eor	r20, r20
    1526:	50 78       	andi	r21, 0x80	; 128
    1528:	1f c0       	rjmp	.+62     	; 0x1568 <modf+0x58>
    152a:	b7 51       	subi	r27, 0x17	; 23
    152c:	88 f4       	brcc	.+34     	; 0x1550 <modf+0x40>
    152e:	ab 2f       	mov	r26, r27
    1530:	00 24       	eor	r0, r0
    1532:	46 95       	lsr	r20
    1534:	37 95       	ror	r19
    1536:	27 95       	ror	r18
    1538:	01 1c       	adc	r0, r1
    153a:	a3 95       	inc	r26
    153c:	d2 f3       	brmi	.-12     	; 0x1532 <modf+0x22>
    153e:	00 20       	and	r0, r0
    1540:	69 f0       	breq	.+26     	; 0x155c <modf+0x4c>
    1542:	22 0f       	add	r18, r18
    1544:	33 1f       	adc	r19, r19
    1546:	44 1f       	adc	r20, r20
    1548:	b3 95       	inc	r27
    154a:	da f3       	brmi	.-10     	; 0x1542 <modf+0x32>
    154c:	0d d0       	rcall	.+26     	; 0x1568 <modf+0x58>
    154e:	cd cc       	rjmp	.-1638   	; 0xeea <__subsf3>
    1550:	61 30       	cpi	r22, 0x01	; 1
    1552:	71 05       	cpc	r23, r1
    1554:	a0 e8       	ldi	r26, 0x80	; 128
    1556:	8a 07       	cpc	r24, r26
    1558:	b9 46       	sbci	r27, 0x69	; 105
    155a:	30 f4       	brcc	.+12     	; 0x1568 <modf+0x58>
    155c:	9b 01       	movw	r18, r22
    155e:	ac 01       	movw	r20, r24
    1560:	66 27       	eor	r22, r22
    1562:	77 27       	eor	r23, r23
    1564:	88 27       	eor	r24, r24
    1566:	90 78       	andi	r25, 0x80	; 128
    1568:	30 96       	adiw	r30, 0x00	; 0
    156a:	21 f0       	breq	.+8      	; 0x1574 <modf+0x64>
    156c:	20 83       	st	Z, r18
    156e:	31 83       	std	Z+1, r19	; 0x01
    1570:	42 83       	std	Z+2, r20	; 0x02
    1572:	53 83       	std	Z+3, r21	; 0x03
    1574:	08 95       	ret

00001576 <__fp_mpack>:
    1576:	9f 3f       	cpi	r25, 0xFF	; 255
    1578:	31 f0       	breq	.+12     	; 0x1586 <__fp_mpack_finite+0xc>

0000157a <__fp_mpack_finite>:
    157a:	91 50       	subi	r25, 0x01	; 1
    157c:	20 f4       	brcc	.+8      	; 0x1586 <__fp_mpack_finite+0xc>
    157e:	87 95       	ror	r24
    1580:	77 95       	ror	r23
    1582:	67 95       	ror	r22
    1584:	b7 95       	ror	r27
    1586:	88 0f       	add	r24, r24
    1588:	91 1d       	adc	r25, r1
    158a:	96 95       	lsr	r25
    158c:	87 95       	ror	r24
    158e:	97 f9       	bld	r25, 7
    1590:	08 95       	ret

00001592 <__mulsi3>:
    1592:	db 01       	movw	r26, r22
    1594:	8f 93       	push	r24
    1596:	9f 93       	push	r25
    1598:	4f d0       	rcall	.+158    	; 0x1638 <__muluhisi3>
    159a:	bf 91       	pop	r27
    159c:	af 91       	pop	r26
    159e:	a2 9f       	mul	r26, r18
    15a0:	80 0d       	add	r24, r0
    15a2:	91 1d       	adc	r25, r1
    15a4:	a3 9f       	mul	r26, r19
    15a6:	90 0d       	add	r25, r0
    15a8:	b2 9f       	mul	r27, r18
    15aa:	90 0d       	add	r25, r0
    15ac:	11 24       	eor	r1, r1
    15ae:	08 95       	ret

000015b0 <__udivmodsi4>:
    15b0:	a1 e2       	ldi	r26, 0x21	; 33
    15b2:	1a 2e       	mov	r1, r26
    15b4:	aa 1b       	sub	r26, r26
    15b6:	bb 1b       	sub	r27, r27
    15b8:	fd 01       	movw	r30, r26
    15ba:	0d c0       	rjmp	.+26     	; 0x15d6 <__udivmodsi4_ep>

000015bc <__udivmodsi4_loop>:
    15bc:	aa 1f       	adc	r26, r26
    15be:	bb 1f       	adc	r27, r27
    15c0:	ee 1f       	adc	r30, r30
    15c2:	ff 1f       	adc	r31, r31
    15c4:	a2 17       	cp	r26, r18
    15c6:	b3 07       	cpc	r27, r19
    15c8:	e4 07       	cpc	r30, r20
    15ca:	f5 07       	cpc	r31, r21
    15cc:	20 f0       	brcs	.+8      	; 0x15d6 <__udivmodsi4_ep>
    15ce:	a2 1b       	sub	r26, r18
    15d0:	b3 0b       	sbc	r27, r19
    15d2:	e4 0b       	sbc	r30, r20
    15d4:	f5 0b       	sbc	r31, r21

000015d6 <__udivmodsi4_ep>:
    15d6:	66 1f       	adc	r22, r22
    15d8:	77 1f       	adc	r23, r23
    15da:	88 1f       	adc	r24, r24
    15dc:	99 1f       	adc	r25, r25
    15de:	1a 94       	dec	r1
    15e0:	69 f7       	brne	.-38     	; 0x15bc <__udivmodsi4_loop>
    15e2:	60 95       	com	r22
    15e4:	70 95       	com	r23
    15e6:	80 95       	com	r24
    15e8:	90 95       	com	r25
    15ea:	9b 01       	movw	r18, r22
    15ec:	ac 01       	movw	r20, r24
    15ee:	bd 01       	movw	r22, r26
    15f0:	cf 01       	movw	r24, r30
    15f2:	08 95       	ret

000015f4 <__divmodsi4>:
    15f4:	05 2e       	mov	r0, r21
    15f6:	97 fb       	bst	r25, 7
    15f8:	16 f4       	brtc	.+4      	; 0x15fe <__divmodsi4+0xa>
    15fa:	00 94       	com	r0
    15fc:	0f d0       	rcall	.+30     	; 0x161c <__negsi2>
    15fe:	57 fd       	sbrc	r21, 7
    1600:	05 d0       	rcall	.+10     	; 0x160c <__divmodsi4_neg2>
    1602:	d6 df       	rcall	.-84     	; 0x15b0 <__udivmodsi4>
    1604:	07 fc       	sbrc	r0, 7
    1606:	02 d0       	rcall	.+4      	; 0x160c <__divmodsi4_neg2>
    1608:	46 f4       	brtc	.+16     	; 0x161a <__divmodsi4_exit>
    160a:	08 c0       	rjmp	.+16     	; 0x161c <__negsi2>

0000160c <__divmodsi4_neg2>:
    160c:	50 95       	com	r21
    160e:	40 95       	com	r20
    1610:	30 95       	com	r19
    1612:	21 95       	neg	r18
    1614:	3f 4f       	sbci	r19, 0xFF	; 255
    1616:	4f 4f       	sbci	r20, 0xFF	; 255
    1618:	5f 4f       	sbci	r21, 0xFF	; 255

0000161a <__divmodsi4_exit>:
    161a:	08 95       	ret

0000161c <__negsi2>:
    161c:	90 95       	com	r25
    161e:	80 95       	com	r24
    1620:	70 95       	com	r23
    1622:	61 95       	neg	r22
    1624:	7f 4f       	sbci	r23, 0xFF	; 255
    1626:	8f 4f       	sbci	r24, 0xFF	; 255
    1628:	9f 4f       	sbci	r25, 0xFF	; 255
    162a:	08 95       	ret

0000162c <__tablejump2__>:
    162c:	ee 0f       	add	r30, r30
    162e:	ff 1f       	adc	r31, r31
    1630:	05 90       	lpm	r0, Z+
    1632:	f4 91       	lpm	r31, Z
    1634:	e0 2d       	mov	r30, r0
    1636:	09 94       	ijmp

00001638 <__muluhisi3>:
    1638:	0f d0       	rcall	.+30     	; 0x1658 <__umulhisi3>
    163a:	a5 9f       	mul	r26, r21
    163c:	90 0d       	add	r25, r0
    163e:	b4 9f       	mul	r27, r20
    1640:	90 0d       	add	r25, r0
    1642:	a4 9f       	mul	r26, r20
    1644:	80 0d       	add	r24, r0
    1646:	91 1d       	adc	r25, r1
    1648:	11 24       	eor	r1, r1
    164a:	08 95       	ret

0000164c <__mulshisi3>:
    164c:	b7 ff       	sbrs	r27, 7
    164e:	f4 cf       	rjmp	.-24     	; 0x1638 <__muluhisi3>

00001650 <__mulohisi3>:
    1650:	f3 df       	rcall	.-26     	; 0x1638 <__muluhisi3>
    1652:	82 1b       	sub	r24, r18
    1654:	93 0b       	sbc	r25, r19
    1656:	08 95       	ret

00001658 <__umulhisi3>:
    1658:	a2 9f       	mul	r26, r18
    165a:	b0 01       	movw	r22, r0
    165c:	b3 9f       	mul	r27, r19
    165e:	c0 01       	movw	r24, r0
    1660:	a3 9f       	mul	r26, r19
    1662:	70 0d       	add	r23, r0
    1664:	81 1d       	adc	r24, r1
    1666:	11 24       	eor	r1, r1
    1668:	91 1d       	adc	r25, r1
    166a:	b2 9f       	mul	r27, r18
    166c:	70 0d       	add	r23, r0
    166e:	81 1d       	adc	r24, r1
    1670:	11 24       	eor	r1, r1
    1672:	91 1d       	adc	r25, r1
    1674:	08 95       	ret

00001676 <__itoa_ncheck>:
    1676:	bb 27       	eor	r27, r27
    1678:	4a 30       	cpi	r20, 0x0A	; 10
    167a:	31 f4       	brne	.+12     	; 0x1688 <__itoa_ncheck+0x12>
    167c:	99 23       	and	r25, r25
    167e:	22 f4       	brpl	.+8      	; 0x1688 <__itoa_ncheck+0x12>
    1680:	bd e2       	ldi	r27, 0x2D	; 45
    1682:	90 95       	com	r25
    1684:	81 95       	neg	r24
    1686:	9f 4f       	sbci	r25, 0xFF	; 255
    1688:	01 c0       	rjmp	.+2      	; 0x168c <__utoa_common>

0000168a <__utoa_ncheck>:
    168a:	bb 27       	eor	r27, r27

0000168c <__utoa_common>:
    168c:	fb 01       	movw	r30, r22
    168e:	55 27       	eor	r21, r21
    1690:	aa 27       	eor	r26, r26
    1692:	88 0f       	add	r24, r24
    1694:	99 1f       	adc	r25, r25
    1696:	aa 1f       	adc	r26, r26
    1698:	a4 17       	cp	r26, r20
    169a:	10 f0       	brcs	.+4      	; 0x16a0 <__utoa_common+0x14>
    169c:	a4 1b       	sub	r26, r20
    169e:	83 95       	inc	r24
    16a0:	50 51       	subi	r21, 0x10	; 16
    16a2:	b9 f7       	brne	.-18     	; 0x1692 <__utoa_common+0x6>
    16a4:	a0 5d       	subi	r26, 0xD0	; 208
    16a6:	aa 33       	cpi	r26, 0x3A	; 58
    16a8:	08 f0       	brcs	.+2      	; 0x16ac <__utoa_common+0x20>
    16aa:	a9 5d       	subi	r26, 0xD9	; 217
    16ac:	a1 93       	st	Z+, r26
    16ae:	00 97       	sbiw	r24, 0x00	; 0
    16b0:	79 f7       	brne	.-34     	; 0x1690 <__utoa_common+0x4>
    16b2:	b1 11       	cpse	r27, r1
    16b4:	b1 93       	st	Z+, r27
    16b6:	11 92       	st	Z+, r1
    16b8:	cb 01       	movw	r24, r22
    16ba:	2b c2       	rjmp	.+1110   	; 0x1b12 <strrev>

000016bc <printf>:
    16bc:	a0 e0       	ldi	r26, 0x00	; 0
    16be:	b0 e0       	ldi	r27, 0x00	; 0
    16c0:	e3 e6       	ldi	r30, 0x63	; 99
    16c2:	fb e0       	ldi	r31, 0x0B	; 11
    16c4:	e0 c2       	rjmp	.+1472   	; 0x1c86 <__prologue_saves__+0x20>
    16c6:	ae 01       	movw	r20, r28
    16c8:	4b 5f       	subi	r20, 0xFB	; 251
    16ca:	5f 4f       	sbci	r21, 0xFF	; 255
    16cc:	fa 01       	movw	r30, r20
    16ce:	61 91       	ld	r22, Z+
    16d0:	71 91       	ld	r23, Z+
    16d2:	af 01       	movw	r20, r30
    16d4:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <__iob+0x2>
    16d8:	90 91 78 02 	lds	r25, 0x0278	; 0x800278 <__iob+0x3>
    16dc:	32 d0       	rcall	.+100    	; 0x1742 <vfprintf>
    16de:	e2 e0       	ldi	r30, 0x02	; 2
    16e0:	ee c2       	rjmp	.+1500   	; 0x1cbe <__epilogue_restores__+0x20>

000016e2 <puts>:
    16e2:	0f 93       	push	r16
    16e4:	1f 93       	push	r17
    16e6:	cf 93       	push	r28
    16e8:	df 93       	push	r29
    16ea:	e0 91 77 02 	lds	r30, 0x0277	; 0x800277 <__iob+0x2>
    16ee:	f0 91 78 02 	lds	r31, 0x0278	; 0x800278 <__iob+0x3>
    16f2:	23 81       	ldd	r18, Z+3	; 0x03
    16f4:	21 ff       	sbrs	r18, 1
    16f6:	1b c0       	rjmp	.+54     	; 0x172e <puts+0x4c>
    16f8:	8c 01       	movw	r16, r24
    16fa:	d0 e0       	ldi	r29, 0x00	; 0
    16fc:	c0 e0       	ldi	r28, 0x00	; 0
    16fe:	f8 01       	movw	r30, r16
    1700:	81 91       	ld	r24, Z+
    1702:	8f 01       	movw	r16, r30
    1704:	60 91 77 02 	lds	r22, 0x0277	; 0x800277 <__iob+0x2>
    1708:	70 91 78 02 	lds	r23, 0x0278	; 0x800278 <__iob+0x3>
    170c:	db 01       	movw	r26, r22
    170e:	18 96       	adiw	r26, 0x08	; 8
    1710:	ed 91       	ld	r30, X+
    1712:	fc 91       	ld	r31, X
    1714:	19 97       	sbiw	r26, 0x09	; 9
    1716:	88 23       	and	r24, r24
    1718:	31 f0       	breq	.+12     	; 0x1726 <puts+0x44>
    171a:	09 95       	icall
    171c:	89 2b       	or	r24, r25
    171e:	79 f3       	breq	.-34     	; 0x16fe <puts+0x1c>
    1720:	df ef       	ldi	r29, 0xFF	; 255
    1722:	cf ef       	ldi	r28, 0xFF	; 255
    1724:	ec cf       	rjmp	.-40     	; 0x16fe <puts+0x1c>
    1726:	8a e0       	ldi	r24, 0x0A	; 10
    1728:	09 95       	icall
    172a:	89 2b       	or	r24, r25
    172c:	19 f0       	breq	.+6      	; 0x1734 <puts+0x52>
    172e:	8f ef       	ldi	r24, 0xFF	; 255
    1730:	9f ef       	ldi	r25, 0xFF	; 255
    1732:	02 c0       	rjmp	.+4      	; 0x1738 <puts+0x56>
    1734:	8d 2f       	mov	r24, r29
    1736:	9c 2f       	mov	r25, r28
    1738:	df 91       	pop	r29
    173a:	cf 91       	pop	r28
    173c:	1f 91       	pop	r17
    173e:	0f 91       	pop	r16
    1740:	08 95       	ret

00001742 <vfprintf>:
    1742:	ab e0       	ldi	r26, 0x0B	; 11
    1744:	b0 e0       	ldi	r27, 0x00	; 0
    1746:	e6 ea       	ldi	r30, 0xA6	; 166
    1748:	fb e0       	ldi	r31, 0x0B	; 11
    174a:	8d c2       	rjmp	.+1306   	; 0x1c66 <__prologue_saves__>
    174c:	6c 01       	movw	r12, r24
    174e:	7b 01       	movw	r14, r22
    1750:	8a 01       	movw	r16, r20
    1752:	fc 01       	movw	r30, r24
    1754:	17 82       	std	Z+7, r1	; 0x07
    1756:	16 82       	std	Z+6, r1	; 0x06
    1758:	83 81       	ldd	r24, Z+3	; 0x03
    175a:	81 ff       	sbrs	r24, 1
    175c:	bf c1       	rjmp	.+894    	; 0x1adc <vfprintf+0x39a>
    175e:	ce 01       	movw	r24, r28
    1760:	01 96       	adiw	r24, 0x01	; 1
    1762:	3c 01       	movw	r6, r24
    1764:	f6 01       	movw	r30, r12
    1766:	93 81       	ldd	r25, Z+3	; 0x03
    1768:	f7 01       	movw	r30, r14
    176a:	93 fd       	sbrc	r25, 3
    176c:	85 91       	lpm	r24, Z+
    176e:	93 ff       	sbrs	r25, 3
    1770:	81 91       	ld	r24, Z+
    1772:	7f 01       	movw	r14, r30
    1774:	88 23       	and	r24, r24
    1776:	09 f4       	brne	.+2      	; 0x177a <vfprintf+0x38>
    1778:	ad c1       	rjmp	.+858    	; 0x1ad4 <vfprintf+0x392>
    177a:	85 32       	cpi	r24, 0x25	; 37
    177c:	39 f4       	brne	.+14     	; 0x178c <vfprintf+0x4a>
    177e:	93 fd       	sbrc	r25, 3
    1780:	85 91       	lpm	r24, Z+
    1782:	93 ff       	sbrs	r25, 3
    1784:	81 91       	ld	r24, Z+
    1786:	7f 01       	movw	r14, r30
    1788:	85 32       	cpi	r24, 0x25	; 37
    178a:	21 f4       	brne	.+8      	; 0x1794 <vfprintf+0x52>
    178c:	b6 01       	movw	r22, r12
    178e:	90 e0       	ldi	r25, 0x00	; 0
    1790:	d0 d1       	rcall	.+928    	; 0x1b32 <fputc>
    1792:	e8 cf       	rjmp	.-48     	; 0x1764 <vfprintf+0x22>
    1794:	91 2c       	mov	r9, r1
    1796:	21 2c       	mov	r2, r1
    1798:	31 2c       	mov	r3, r1
    179a:	ff e1       	ldi	r31, 0x1F	; 31
    179c:	f3 15       	cp	r31, r3
    179e:	d8 f0       	brcs	.+54     	; 0x17d6 <vfprintf+0x94>
    17a0:	8b 32       	cpi	r24, 0x2B	; 43
    17a2:	79 f0       	breq	.+30     	; 0x17c2 <vfprintf+0x80>
    17a4:	38 f4       	brcc	.+14     	; 0x17b4 <vfprintf+0x72>
    17a6:	80 32       	cpi	r24, 0x20	; 32
    17a8:	79 f0       	breq	.+30     	; 0x17c8 <vfprintf+0x86>
    17aa:	83 32       	cpi	r24, 0x23	; 35
    17ac:	a1 f4       	brne	.+40     	; 0x17d6 <vfprintf+0x94>
    17ae:	23 2d       	mov	r18, r3
    17b0:	20 61       	ori	r18, 0x10	; 16
    17b2:	1d c0       	rjmp	.+58     	; 0x17ee <vfprintf+0xac>
    17b4:	8d 32       	cpi	r24, 0x2D	; 45
    17b6:	61 f0       	breq	.+24     	; 0x17d0 <vfprintf+0x8e>
    17b8:	80 33       	cpi	r24, 0x30	; 48
    17ba:	69 f4       	brne	.+26     	; 0x17d6 <vfprintf+0x94>
    17bc:	23 2d       	mov	r18, r3
    17be:	21 60       	ori	r18, 0x01	; 1
    17c0:	16 c0       	rjmp	.+44     	; 0x17ee <vfprintf+0xac>
    17c2:	83 2d       	mov	r24, r3
    17c4:	82 60       	ori	r24, 0x02	; 2
    17c6:	38 2e       	mov	r3, r24
    17c8:	e3 2d       	mov	r30, r3
    17ca:	e4 60       	ori	r30, 0x04	; 4
    17cc:	3e 2e       	mov	r3, r30
    17ce:	2a c0       	rjmp	.+84     	; 0x1824 <vfprintf+0xe2>
    17d0:	f3 2d       	mov	r31, r3
    17d2:	f8 60       	ori	r31, 0x08	; 8
    17d4:	1d c0       	rjmp	.+58     	; 0x1810 <vfprintf+0xce>
    17d6:	37 fc       	sbrc	r3, 7
    17d8:	2d c0       	rjmp	.+90     	; 0x1834 <vfprintf+0xf2>
    17da:	20 ed       	ldi	r18, 0xD0	; 208
    17dc:	28 0f       	add	r18, r24
    17de:	2a 30       	cpi	r18, 0x0A	; 10
    17e0:	40 f0       	brcs	.+16     	; 0x17f2 <vfprintf+0xb0>
    17e2:	8e 32       	cpi	r24, 0x2E	; 46
    17e4:	b9 f4       	brne	.+46     	; 0x1814 <vfprintf+0xd2>
    17e6:	36 fc       	sbrc	r3, 6
    17e8:	75 c1       	rjmp	.+746    	; 0x1ad4 <vfprintf+0x392>
    17ea:	23 2d       	mov	r18, r3
    17ec:	20 64       	ori	r18, 0x40	; 64
    17ee:	32 2e       	mov	r3, r18
    17f0:	19 c0       	rjmp	.+50     	; 0x1824 <vfprintf+0xe2>
    17f2:	36 fe       	sbrs	r3, 6
    17f4:	06 c0       	rjmp	.+12     	; 0x1802 <vfprintf+0xc0>
    17f6:	8a e0       	ldi	r24, 0x0A	; 10
    17f8:	98 9e       	mul	r9, r24
    17fa:	20 0d       	add	r18, r0
    17fc:	11 24       	eor	r1, r1
    17fe:	92 2e       	mov	r9, r18
    1800:	11 c0       	rjmp	.+34     	; 0x1824 <vfprintf+0xe2>
    1802:	ea e0       	ldi	r30, 0x0A	; 10
    1804:	2e 9e       	mul	r2, r30
    1806:	20 0d       	add	r18, r0
    1808:	11 24       	eor	r1, r1
    180a:	22 2e       	mov	r2, r18
    180c:	f3 2d       	mov	r31, r3
    180e:	f0 62       	ori	r31, 0x20	; 32
    1810:	3f 2e       	mov	r3, r31
    1812:	08 c0       	rjmp	.+16     	; 0x1824 <vfprintf+0xe2>
    1814:	8c 36       	cpi	r24, 0x6C	; 108
    1816:	21 f4       	brne	.+8      	; 0x1820 <vfprintf+0xde>
    1818:	83 2d       	mov	r24, r3
    181a:	80 68       	ori	r24, 0x80	; 128
    181c:	38 2e       	mov	r3, r24
    181e:	02 c0       	rjmp	.+4      	; 0x1824 <vfprintf+0xe2>
    1820:	88 36       	cpi	r24, 0x68	; 104
    1822:	41 f4       	brne	.+16     	; 0x1834 <vfprintf+0xf2>
    1824:	f7 01       	movw	r30, r14
    1826:	93 fd       	sbrc	r25, 3
    1828:	85 91       	lpm	r24, Z+
    182a:	93 ff       	sbrs	r25, 3
    182c:	81 91       	ld	r24, Z+
    182e:	7f 01       	movw	r14, r30
    1830:	81 11       	cpse	r24, r1
    1832:	b3 cf       	rjmp	.-154    	; 0x179a <vfprintf+0x58>
    1834:	98 2f       	mov	r25, r24
    1836:	9f 7d       	andi	r25, 0xDF	; 223
    1838:	95 54       	subi	r25, 0x45	; 69
    183a:	93 30       	cpi	r25, 0x03	; 3
    183c:	28 f4       	brcc	.+10     	; 0x1848 <vfprintf+0x106>
    183e:	0c 5f       	subi	r16, 0xFC	; 252
    1840:	1f 4f       	sbci	r17, 0xFF	; 255
    1842:	9f e3       	ldi	r25, 0x3F	; 63
    1844:	99 83       	std	Y+1, r25	; 0x01
    1846:	0d c0       	rjmp	.+26     	; 0x1862 <vfprintf+0x120>
    1848:	83 36       	cpi	r24, 0x63	; 99
    184a:	31 f0       	breq	.+12     	; 0x1858 <vfprintf+0x116>
    184c:	83 37       	cpi	r24, 0x73	; 115
    184e:	71 f0       	breq	.+28     	; 0x186c <vfprintf+0x12a>
    1850:	83 35       	cpi	r24, 0x53	; 83
    1852:	09 f0       	breq	.+2      	; 0x1856 <vfprintf+0x114>
    1854:	55 c0       	rjmp	.+170    	; 0x1900 <vfprintf+0x1be>
    1856:	20 c0       	rjmp	.+64     	; 0x1898 <vfprintf+0x156>
    1858:	f8 01       	movw	r30, r16
    185a:	80 81       	ld	r24, Z
    185c:	89 83       	std	Y+1, r24	; 0x01
    185e:	0e 5f       	subi	r16, 0xFE	; 254
    1860:	1f 4f       	sbci	r17, 0xFF	; 255
    1862:	88 24       	eor	r8, r8
    1864:	83 94       	inc	r8
    1866:	91 2c       	mov	r9, r1
    1868:	53 01       	movw	r10, r6
    186a:	12 c0       	rjmp	.+36     	; 0x1890 <vfprintf+0x14e>
    186c:	28 01       	movw	r4, r16
    186e:	f2 e0       	ldi	r31, 0x02	; 2
    1870:	4f 0e       	add	r4, r31
    1872:	51 1c       	adc	r5, r1
    1874:	f8 01       	movw	r30, r16
    1876:	a0 80       	ld	r10, Z
    1878:	b1 80       	ldd	r11, Z+1	; 0x01
    187a:	36 fe       	sbrs	r3, 6
    187c:	03 c0       	rjmp	.+6      	; 0x1884 <vfprintf+0x142>
    187e:	69 2d       	mov	r22, r9
    1880:	70 e0       	ldi	r23, 0x00	; 0
    1882:	02 c0       	rjmp	.+4      	; 0x1888 <vfprintf+0x146>
    1884:	6f ef       	ldi	r22, 0xFF	; 255
    1886:	7f ef       	ldi	r23, 0xFF	; 255
    1888:	c5 01       	movw	r24, r10
    188a:	38 d1       	rcall	.+624    	; 0x1afc <strnlen>
    188c:	4c 01       	movw	r8, r24
    188e:	82 01       	movw	r16, r4
    1890:	f3 2d       	mov	r31, r3
    1892:	ff 77       	andi	r31, 0x7F	; 127
    1894:	3f 2e       	mov	r3, r31
    1896:	15 c0       	rjmp	.+42     	; 0x18c2 <vfprintf+0x180>
    1898:	28 01       	movw	r4, r16
    189a:	22 e0       	ldi	r18, 0x02	; 2
    189c:	42 0e       	add	r4, r18
    189e:	51 1c       	adc	r5, r1
    18a0:	f8 01       	movw	r30, r16
    18a2:	a0 80       	ld	r10, Z
    18a4:	b1 80       	ldd	r11, Z+1	; 0x01
    18a6:	36 fe       	sbrs	r3, 6
    18a8:	03 c0       	rjmp	.+6      	; 0x18b0 <vfprintf+0x16e>
    18aa:	69 2d       	mov	r22, r9
    18ac:	70 e0       	ldi	r23, 0x00	; 0
    18ae:	02 c0       	rjmp	.+4      	; 0x18b4 <vfprintf+0x172>
    18b0:	6f ef       	ldi	r22, 0xFF	; 255
    18b2:	7f ef       	ldi	r23, 0xFF	; 255
    18b4:	c5 01       	movw	r24, r10
    18b6:	17 d1       	rcall	.+558    	; 0x1ae6 <strnlen_P>
    18b8:	4c 01       	movw	r8, r24
    18ba:	f3 2d       	mov	r31, r3
    18bc:	f0 68       	ori	r31, 0x80	; 128
    18be:	3f 2e       	mov	r3, r31
    18c0:	82 01       	movw	r16, r4
    18c2:	33 fc       	sbrc	r3, 3
    18c4:	19 c0       	rjmp	.+50     	; 0x18f8 <vfprintf+0x1b6>
    18c6:	82 2d       	mov	r24, r2
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	88 16       	cp	r8, r24
    18cc:	99 06       	cpc	r9, r25
    18ce:	a0 f4       	brcc	.+40     	; 0x18f8 <vfprintf+0x1b6>
    18d0:	b6 01       	movw	r22, r12
    18d2:	80 e2       	ldi	r24, 0x20	; 32
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	2d d1       	rcall	.+602    	; 0x1b32 <fputc>
    18d8:	2a 94       	dec	r2
    18da:	f5 cf       	rjmp	.-22     	; 0x18c6 <vfprintf+0x184>
    18dc:	f5 01       	movw	r30, r10
    18de:	37 fc       	sbrc	r3, 7
    18e0:	85 91       	lpm	r24, Z+
    18e2:	37 fe       	sbrs	r3, 7
    18e4:	81 91       	ld	r24, Z+
    18e6:	5f 01       	movw	r10, r30
    18e8:	b6 01       	movw	r22, r12
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	22 d1       	rcall	.+580    	; 0x1b32 <fputc>
    18ee:	21 10       	cpse	r2, r1
    18f0:	2a 94       	dec	r2
    18f2:	21 e0       	ldi	r18, 0x01	; 1
    18f4:	82 1a       	sub	r8, r18
    18f6:	91 08       	sbc	r9, r1
    18f8:	81 14       	cp	r8, r1
    18fa:	91 04       	cpc	r9, r1
    18fc:	79 f7       	brne	.-34     	; 0x18dc <vfprintf+0x19a>
    18fe:	e1 c0       	rjmp	.+450    	; 0x1ac2 <vfprintf+0x380>
    1900:	84 36       	cpi	r24, 0x64	; 100
    1902:	11 f0       	breq	.+4      	; 0x1908 <vfprintf+0x1c6>
    1904:	89 36       	cpi	r24, 0x69	; 105
    1906:	39 f5       	brne	.+78     	; 0x1956 <vfprintf+0x214>
    1908:	f8 01       	movw	r30, r16
    190a:	37 fe       	sbrs	r3, 7
    190c:	07 c0       	rjmp	.+14     	; 0x191c <vfprintf+0x1da>
    190e:	60 81       	ld	r22, Z
    1910:	71 81       	ldd	r23, Z+1	; 0x01
    1912:	82 81       	ldd	r24, Z+2	; 0x02
    1914:	93 81       	ldd	r25, Z+3	; 0x03
    1916:	0c 5f       	subi	r16, 0xFC	; 252
    1918:	1f 4f       	sbci	r17, 0xFF	; 255
    191a:	08 c0       	rjmp	.+16     	; 0x192c <vfprintf+0x1ea>
    191c:	60 81       	ld	r22, Z
    191e:	71 81       	ldd	r23, Z+1	; 0x01
    1920:	07 2e       	mov	r0, r23
    1922:	00 0c       	add	r0, r0
    1924:	88 0b       	sbc	r24, r24
    1926:	99 0b       	sbc	r25, r25
    1928:	0e 5f       	subi	r16, 0xFE	; 254
    192a:	1f 4f       	sbci	r17, 0xFF	; 255
    192c:	f3 2d       	mov	r31, r3
    192e:	ff 76       	andi	r31, 0x6F	; 111
    1930:	3f 2e       	mov	r3, r31
    1932:	97 ff       	sbrs	r25, 7
    1934:	09 c0       	rjmp	.+18     	; 0x1948 <vfprintf+0x206>
    1936:	90 95       	com	r25
    1938:	80 95       	com	r24
    193a:	70 95       	com	r23
    193c:	61 95       	neg	r22
    193e:	7f 4f       	sbci	r23, 0xFF	; 255
    1940:	8f 4f       	sbci	r24, 0xFF	; 255
    1942:	9f 4f       	sbci	r25, 0xFF	; 255
    1944:	f0 68       	ori	r31, 0x80	; 128
    1946:	3f 2e       	mov	r3, r31
    1948:	2a e0       	ldi	r18, 0x0A	; 10
    194a:	30 e0       	ldi	r19, 0x00	; 0
    194c:	a3 01       	movw	r20, r6
    194e:	2d d1       	rcall	.+602    	; 0x1baa <__ultoa_invert>
    1950:	88 2e       	mov	r8, r24
    1952:	86 18       	sub	r8, r6
    1954:	44 c0       	rjmp	.+136    	; 0x19de <vfprintf+0x29c>
    1956:	85 37       	cpi	r24, 0x75	; 117
    1958:	31 f4       	brne	.+12     	; 0x1966 <vfprintf+0x224>
    195a:	23 2d       	mov	r18, r3
    195c:	2f 7e       	andi	r18, 0xEF	; 239
    195e:	b2 2e       	mov	r11, r18
    1960:	2a e0       	ldi	r18, 0x0A	; 10
    1962:	30 e0       	ldi	r19, 0x00	; 0
    1964:	25 c0       	rjmp	.+74     	; 0x19b0 <vfprintf+0x26e>
    1966:	93 2d       	mov	r25, r3
    1968:	99 7f       	andi	r25, 0xF9	; 249
    196a:	b9 2e       	mov	r11, r25
    196c:	8f 36       	cpi	r24, 0x6F	; 111
    196e:	c1 f0       	breq	.+48     	; 0x19a0 <vfprintf+0x25e>
    1970:	18 f4       	brcc	.+6      	; 0x1978 <vfprintf+0x236>
    1972:	88 35       	cpi	r24, 0x58	; 88
    1974:	79 f0       	breq	.+30     	; 0x1994 <vfprintf+0x252>
    1976:	ae c0       	rjmp	.+348    	; 0x1ad4 <vfprintf+0x392>
    1978:	80 37       	cpi	r24, 0x70	; 112
    197a:	19 f0       	breq	.+6      	; 0x1982 <vfprintf+0x240>
    197c:	88 37       	cpi	r24, 0x78	; 120
    197e:	21 f0       	breq	.+8      	; 0x1988 <vfprintf+0x246>
    1980:	a9 c0       	rjmp	.+338    	; 0x1ad4 <vfprintf+0x392>
    1982:	e9 2f       	mov	r30, r25
    1984:	e0 61       	ori	r30, 0x10	; 16
    1986:	be 2e       	mov	r11, r30
    1988:	b4 fe       	sbrs	r11, 4
    198a:	0d c0       	rjmp	.+26     	; 0x19a6 <vfprintf+0x264>
    198c:	fb 2d       	mov	r31, r11
    198e:	f4 60       	ori	r31, 0x04	; 4
    1990:	bf 2e       	mov	r11, r31
    1992:	09 c0       	rjmp	.+18     	; 0x19a6 <vfprintf+0x264>
    1994:	34 fe       	sbrs	r3, 4
    1996:	0a c0       	rjmp	.+20     	; 0x19ac <vfprintf+0x26a>
    1998:	29 2f       	mov	r18, r25
    199a:	26 60       	ori	r18, 0x06	; 6
    199c:	b2 2e       	mov	r11, r18
    199e:	06 c0       	rjmp	.+12     	; 0x19ac <vfprintf+0x26a>
    19a0:	28 e0       	ldi	r18, 0x08	; 8
    19a2:	30 e0       	ldi	r19, 0x00	; 0
    19a4:	05 c0       	rjmp	.+10     	; 0x19b0 <vfprintf+0x26e>
    19a6:	20 e1       	ldi	r18, 0x10	; 16
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	02 c0       	rjmp	.+4      	; 0x19b0 <vfprintf+0x26e>
    19ac:	20 e1       	ldi	r18, 0x10	; 16
    19ae:	32 e0       	ldi	r19, 0x02	; 2
    19b0:	f8 01       	movw	r30, r16
    19b2:	b7 fe       	sbrs	r11, 7
    19b4:	07 c0       	rjmp	.+14     	; 0x19c4 <vfprintf+0x282>
    19b6:	60 81       	ld	r22, Z
    19b8:	71 81       	ldd	r23, Z+1	; 0x01
    19ba:	82 81       	ldd	r24, Z+2	; 0x02
    19bc:	93 81       	ldd	r25, Z+3	; 0x03
    19be:	0c 5f       	subi	r16, 0xFC	; 252
    19c0:	1f 4f       	sbci	r17, 0xFF	; 255
    19c2:	06 c0       	rjmp	.+12     	; 0x19d0 <vfprintf+0x28e>
    19c4:	60 81       	ld	r22, Z
    19c6:	71 81       	ldd	r23, Z+1	; 0x01
    19c8:	80 e0       	ldi	r24, 0x00	; 0
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	0e 5f       	subi	r16, 0xFE	; 254
    19ce:	1f 4f       	sbci	r17, 0xFF	; 255
    19d0:	a3 01       	movw	r20, r6
    19d2:	eb d0       	rcall	.+470    	; 0x1baa <__ultoa_invert>
    19d4:	88 2e       	mov	r8, r24
    19d6:	86 18       	sub	r8, r6
    19d8:	fb 2d       	mov	r31, r11
    19da:	ff 77       	andi	r31, 0x7F	; 127
    19dc:	3f 2e       	mov	r3, r31
    19de:	36 fe       	sbrs	r3, 6
    19e0:	0d c0       	rjmp	.+26     	; 0x19fc <vfprintf+0x2ba>
    19e2:	23 2d       	mov	r18, r3
    19e4:	2e 7f       	andi	r18, 0xFE	; 254
    19e6:	a2 2e       	mov	r10, r18
    19e8:	89 14       	cp	r8, r9
    19ea:	58 f4       	brcc	.+22     	; 0x1a02 <vfprintf+0x2c0>
    19ec:	34 fe       	sbrs	r3, 4
    19ee:	0b c0       	rjmp	.+22     	; 0x1a06 <vfprintf+0x2c4>
    19f0:	32 fc       	sbrc	r3, 2
    19f2:	09 c0       	rjmp	.+18     	; 0x1a06 <vfprintf+0x2c4>
    19f4:	83 2d       	mov	r24, r3
    19f6:	8e 7e       	andi	r24, 0xEE	; 238
    19f8:	a8 2e       	mov	r10, r24
    19fa:	05 c0       	rjmp	.+10     	; 0x1a06 <vfprintf+0x2c4>
    19fc:	b8 2c       	mov	r11, r8
    19fe:	a3 2c       	mov	r10, r3
    1a00:	03 c0       	rjmp	.+6      	; 0x1a08 <vfprintf+0x2c6>
    1a02:	b8 2c       	mov	r11, r8
    1a04:	01 c0       	rjmp	.+2      	; 0x1a08 <vfprintf+0x2c6>
    1a06:	b9 2c       	mov	r11, r9
    1a08:	a4 fe       	sbrs	r10, 4
    1a0a:	0f c0       	rjmp	.+30     	; 0x1a2a <vfprintf+0x2e8>
    1a0c:	fe 01       	movw	r30, r28
    1a0e:	e8 0d       	add	r30, r8
    1a10:	f1 1d       	adc	r31, r1
    1a12:	80 81       	ld	r24, Z
    1a14:	80 33       	cpi	r24, 0x30	; 48
    1a16:	21 f4       	brne	.+8      	; 0x1a20 <vfprintf+0x2de>
    1a18:	9a 2d       	mov	r25, r10
    1a1a:	99 7e       	andi	r25, 0xE9	; 233
    1a1c:	a9 2e       	mov	r10, r25
    1a1e:	09 c0       	rjmp	.+18     	; 0x1a32 <vfprintf+0x2f0>
    1a20:	a2 fe       	sbrs	r10, 2
    1a22:	06 c0       	rjmp	.+12     	; 0x1a30 <vfprintf+0x2ee>
    1a24:	b3 94       	inc	r11
    1a26:	b3 94       	inc	r11
    1a28:	04 c0       	rjmp	.+8      	; 0x1a32 <vfprintf+0x2f0>
    1a2a:	8a 2d       	mov	r24, r10
    1a2c:	86 78       	andi	r24, 0x86	; 134
    1a2e:	09 f0       	breq	.+2      	; 0x1a32 <vfprintf+0x2f0>
    1a30:	b3 94       	inc	r11
    1a32:	a3 fc       	sbrc	r10, 3
    1a34:	10 c0       	rjmp	.+32     	; 0x1a56 <vfprintf+0x314>
    1a36:	a0 fe       	sbrs	r10, 0
    1a38:	06 c0       	rjmp	.+12     	; 0x1a46 <vfprintf+0x304>
    1a3a:	b2 14       	cp	r11, r2
    1a3c:	80 f4       	brcc	.+32     	; 0x1a5e <vfprintf+0x31c>
    1a3e:	28 0c       	add	r2, r8
    1a40:	92 2c       	mov	r9, r2
    1a42:	9b 18       	sub	r9, r11
    1a44:	0d c0       	rjmp	.+26     	; 0x1a60 <vfprintf+0x31e>
    1a46:	b2 14       	cp	r11, r2
    1a48:	58 f4       	brcc	.+22     	; 0x1a60 <vfprintf+0x31e>
    1a4a:	b6 01       	movw	r22, r12
    1a4c:	80 e2       	ldi	r24, 0x20	; 32
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	70 d0       	rcall	.+224    	; 0x1b32 <fputc>
    1a52:	b3 94       	inc	r11
    1a54:	f8 cf       	rjmp	.-16     	; 0x1a46 <vfprintf+0x304>
    1a56:	b2 14       	cp	r11, r2
    1a58:	18 f4       	brcc	.+6      	; 0x1a60 <vfprintf+0x31e>
    1a5a:	2b 18       	sub	r2, r11
    1a5c:	02 c0       	rjmp	.+4      	; 0x1a62 <vfprintf+0x320>
    1a5e:	98 2c       	mov	r9, r8
    1a60:	21 2c       	mov	r2, r1
    1a62:	a4 fe       	sbrs	r10, 4
    1a64:	0f c0       	rjmp	.+30     	; 0x1a84 <vfprintf+0x342>
    1a66:	b6 01       	movw	r22, r12
    1a68:	80 e3       	ldi	r24, 0x30	; 48
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	62 d0       	rcall	.+196    	; 0x1b32 <fputc>
    1a6e:	a2 fe       	sbrs	r10, 2
    1a70:	16 c0       	rjmp	.+44     	; 0x1a9e <vfprintf+0x35c>
    1a72:	a1 fc       	sbrc	r10, 1
    1a74:	03 c0       	rjmp	.+6      	; 0x1a7c <vfprintf+0x33a>
    1a76:	88 e7       	ldi	r24, 0x78	; 120
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	02 c0       	rjmp	.+4      	; 0x1a80 <vfprintf+0x33e>
    1a7c:	88 e5       	ldi	r24, 0x58	; 88
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	b6 01       	movw	r22, r12
    1a82:	0c c0       	rjmp	.+24     	; 0x1a9c <vfprintf+0x35a>
    1a84:	8a 2d       	mov	r24, r10
    1a86:	86 78       	andi	r24, 0x86	; 134
    1a88:	51 f0       	breq	.+20     	; 0x1a9e <vfprintf+0x35c>
    1a8a:	a1 fe       	sbrs	r10, 1
    1a8c:	02 c0       	rjmp	.+4      	; 0x1a92 <vfprintf+0x350>
    1a8e:	8b e2       	ldi	r24, 0x2B	; 43
    1a90:	01 c0       	rjmp	.+2      	; 0x1a94 <vfprintf+0x352>
    1a92:	80 e2       	ldi	r24, 0x20	; 32
    1a94:	a7 fc       	sbrc	r10, 7
    1a96:	8d e2       	ldi	r24, 0x2D	; 45
    1a98:	b6 01       	movw	r22, r12
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	4a d0       	rcall	.+148    	; 0x1b32 <fputc>
    1a9e:	89 14       	cp	r8, r9
    1aa0:	30 f4       	brcc	.+12     	; 0x1aae <vfprintf+0x36c>
    1aa2:	b6 01       	movw	r22, r12
    1aa4:	80 e3       	ldi	r24, 0x30	; 48
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	44 d0       	rcall	.+136    	; 0x1b32 <fputc>
    1aaa:	9a 94       	dec	r9
    1aac:	f8 cf       	rjmp	.-16     	; 0x1a9e <vfprintf+0x35c>
    1aae:	8a 94       	dec	r8
    1ab0:	f3 01       	movw	r30, r6
    1ab2:	e8 0d       	add	r30, r8
    1ab4:	f1 1d       	adc	r31, r1
    1ab6:	80 81       	ld	r24, Z
    1ab8:	b6 01       	movw	r22, r12
    1aba:	90 e0       	ldi	r25, 0x00	; 0
    1abc:	3a d0       	rcall	.+116    	; 0x1b32 <fputc>
    1abe:	81 10       	cpse	r8, r1
    1ac0:	f6 cf       	rjmp	.-20     	; 0x1aae <vfprintf+0x36c>
    1ac2:	22 20       	and	r2, r2
    1ac4:	09 f4       	brne	.+2      	; 0x1ac8 <vfprintf+0x386>
    1ac6:	4e ce       	rjmp	.-868    	; 0x1764 <vfprintf+0x22>
    1ac8:	b6 01       	movw	r22, r12
    1aca:	80 e2       	ldi	r24, 0x20	; 32
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	31 d0       	rcall	.+98     	; 0x1b32 <fputc>
    1ad0:	2a 94       	dec	r2
    1ad2:	f7 cf       	rjmp	.-18     	; 0x1ac2 <vfprintf+0x380>
    1ad4:	f6 01       	movw	r30, r12
    1ad6:	86 81       	ldd	r24, Z+6	; 0x06
    1ad8:	97 81       	ldd	r25, Z+7	; 0x07
    1ada:	02 c0       	rjmp	.+4      	; 0x1ae0 <vfprintf+0x39e>
    1adc:	8f ef       	ldi	r24, 0xFF	; 255
    1ade:	9f ef       	ldi	r25, 0xFF	; 255
    1ae0:	2b 96       	adiw	r28, 0x0b	; 11
    1ae2:	e2 e1       	ldi	r30, 0x12	; 18
    1ae4:	dc c0       	rjmp	.+440    	; 0x1c9e <__epilogue_restores__>

00001ae6 <strnlen_P>:
    1ae6:	fc 01       	movw	r30, r24
    1ae8:	05 90       	lpm	r0, Z+
    1aea:	61 50       	subi	r22, 0x01	; 1
    1aec:	70 40       	sbci	r23, 0x00	; 0
    1aee:	01 10       	cpse	r0, r1
    1af0:	d8 f7       	brcc	.-10     	; 0x1ae8 <strnlen_P+0x2>
    1af2:	80 95       	com	r24
    1af4:	90 95       	com	r25
    1af6:	8e 0f       	add	r24, r30
    1af8:	9f 1f       	adc	r25, r31
    1afa:	08 95       	ret

00001afc <strnlen>:
    1afc:	fc 01       	movw	r30, r24
    1afe:	61 50       	subi	r22, 0x01	; 1
    1b00:	70 40       	sbci	r23, 0x00	; 0
    1b02:	01 90       	ld	r0, Z+
    1b04:	01 10       	cpse	r0, r1
    1b06:	d8 f7       	brcc	.-10     	; 0x1afe <strnlen+0x2>
    1b08:	80 95       	com	r24
    1b0a:	90 95       	com	r25
    1b0c:	8e 0f       	add	r24, r30
    1b0e:	9f 1f       	adc	r25, r31
    1b10:	08 95       	ret

00001b12 <strrev>:
    1b12:	dc 01       	movw	r26, r24
    1b14:	fc 01       	movw	r30, r24
    1b16:	67 2f       	mov	r22, r23
    1b18:	71 91       	ld	r23, Z+
    1b1a:	77 23       	and	r23, r23
    1b1c:	e1 f7       	brne	.-8      	; 0x1b16 <strrev+0x4>
    1b1e:	32 97       	sbiw	r30, 0x02	; 2
    1b20:	04 c0       	rjmp	.+8      	; 0x1b2a <strrev+0x18>
    1b22:	7c 91       	ld	r23, X
    1b24:	6d 93       	st	X+, r22
    1b26:	70 83       	st	Z, r23
    1b28:	62 91       	ld	r22, -Z
    1b2a:	ae 17       	cp	r26, r30
    1b2c:	bf 07       	cpc	r27, r31
    1b2e:	c8 f3       	brcs	.-14     	; 0x1b22 <strrev+0x10>
    1b30:	08 95       	ret

00001b32 <fputc>:
    1b32:	0f 93       	push	r16
    1b34:	1f 93       	push	r17
    1b36:	cf 93       	push	r28
    1b38:	df 93       	push	r29
    1b3a:	fb 01       	movw	r30, r22
    1b3c:	23 81       	ldd	r18, Z+3	; 0x03
    1b3e:	21 fd       	sbrc	r18, 1
    1b40:	03 c0       	rjmp	.+6      	; 0x1b48 <fputc+0x16>
    1b42:	8f ef       	ldi	r24, 0xFF	; 255
    1b44:	9f ef       	ldi	r25, 0xFF	; 255
    1b46:	2c c0       	rjmp	.+88     	; 0x1ba0 <fputc+0x6e>
    1b48:	22 ff       	sbrs	r18, 2
    1b4a:	16 c0       	rjmp	.+44     	; 0x1b78 <fputc+0x46>
    1b4c:	46 81       	ldd	r20, Z+6	; 0x06
    1b4e:	57 81       	ldd	r21, Z+7	; 0x07
    1b50:	24 81       	ldd	r18, Z+4	; 0x04
    1b52:	35 81       	ldd	r19, Z+5	; 0x05
    1b54:	42 17       	cp	r20, r18
    1b56:	53 07       	cpc	r21, r19
    1b58:	44 f4       	brge	.+16     	; 0x1b6a <fputc+0x38>
    1b5a:	a0 81       	ld	r26, Z
    1b5c:	b1 81       	ldd	r27, Z+1	; 0x01
    1b5e:	9d 01       	movw	r18, r26
    1b60:	2f 5f       	subi	r18, 0xFF	; 255
    1b62:	3f 4f       	sbci	r19, 0xFF	; 255
    1b64:	31 83       	std	Z+1, r19	; 0x01
    1b66:	20 83       	st	Z, r18
    1b68:	8c 93       	st	X, r24
    1b6a:	26 81       	ldd	r18, Z+6	; 0x06
    1b6c:	37 81       	ldd	r19, Z+7	; 0x07
    1b6e:	2f 5f       	subi	r18, 0xFF	; 255
    1b70:	3f 4f       	sbci	r19, 0xFF	; 255
    1b72:	37 83       	std	Z+7, r19	; 0x07
    1b74:	26 83       	std	Z+6, r18	; 0x06
    1b76:	14 c0       	rjmp	.+40     	; 0x1ba0 <fputc+0x6e>
    1b78:	8b 01       	movw	r16, r22
    1b7a:	ec 01       	movw	r28, r24
    1b7c:	fb 01       	movw	r30, r22
    1b7e:	00 84       	ldd	r0, Z+8	; 0x08
    1b80:	f1 85       	ldd	r31, Z+9	; 0x09
    1b82:	e0 2d       	mov	r30, r0
    1b84:	09 95       	icall
    1b86:	89 2b       	or	r24, r25
    1b88:	e1 f6       	brne	.-72     	; 0x1b42 <fputc+0x10>
    1b8a:	d8 01       	movw	r26, r16
    1b8c:	16 96       	adiw	r26, 0x06	; 6
    1b8e:	8d 91       	ld	r24, X+
    1b90:	9c 91       	ld	r25, X
    1b92:	17 97       	sbiw	r26, 0x07	; 7
    1b94:	01 96       	adiw	r24, 0x01	; 1
    1b96:	17 96       	adiw	r26, 0x07	; 7
    1b98:	9c 93       	st	X, r25
    1b9a:	8e 93       	st	-X, r24
    1b9c:	16 97       	sbiw	r26, 0x06	; 6
    1b9e:	ce 01       	movw	r24, r28
    1ba0:	df 91       	pop	r29
    1ba2:	cf 91       	pop	r28
    1ba4:	1f 91       	pop	r17
    1ba6:	0f 91       	pop	r16
    1ba8:	08 95       	ret

00001baa <__ultoa_invert>:
    1baa:	fa 01       	movw	r30, r20
    1bac:	aa 27       	eor	r26, r26
    1bae:	28 30       	cpi	r18, 0x08	; 8
    1bb0:	51 f1       	breq	.+84     	; 0x1c06 <__ultoa_invert+0x5c>
    1bb2:	20 31       	cpi	r18, 0x10	; 16
    1bb4:	81 f1       	breq	.+96     	; 0x1c16 <__ultoa_invert+0x6c>
    1bb6:	e8 94       	clt
    1bb8:	6f 93       	push	r22
    1bba:	6e 7f       	andi	r22, 0xFE	; 254
    1bbc:	6e 5f       	subi	r22, 0xFE	; 254
    1bbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc4:	af 4f       	sbci	r26, 0xFF	; 255
    1bc6:	b1 e0       	ldi	r27, 0x01	; 1
    1bc8:	3e d0       	rcall	.+124    	; 0x1c46 <__ultoa_invert+0x9c>
    1bca:	b4 e0       	ldi	r27, 0x04	; 4
    1bcc:	3c d0       	rcall	.+120    	; 0x1c46 <__ultoa_invert+0x9c>
    1bce:	67 0f       	add	r22, r23
    1bd0:	78 1f       	adc	r23, r24
    1bd2:	89 1f       	adc	r24, r25
    1bd4:	9a 1f       	adc	r25, r26
    1bd6:	a1 1d       	adc	r26, r1
    1bd8:	68 0f       	add	r22, r24
    1bda:	79 1f       	adc	r23, r25
    1bdc:	8a 1f       	adc	r24, r26
    1bde:	91 1d       	adc	r25, r1
    1be0:	a1 1d       	adc	r26, r1
    1be2:	6a 0f       	add	r22, r26
    1be4:	71 1d       	adc	r23, r1
    1be6:	81 1d       	adc	r24, r1
    1be8:	91 1d       	adc	r25, r1
    1bea:	a1 1d       	adc	r26, r1
    1bec:	20 d0       	rcall	.+64     	; 0x1c2e <__ultoa_invert+0x84>
    1bee:	09 f4       	brne	.+2      	; 0x1bf2 <__ultoa_invert+0x48>
    1bf0:	68 94       	set
    1bf2:	3f 91       	pop	r19
    1bf4:	2a e0       	ldi	r18, 0x0A	; 10
    1bf6:	26 9f       	mul	r18, r22
    1bf8:	11 24       	eor	r1, r1
    1bfa:	30 19       	sub	r19, r0
    1bfc:	30 5d       	subi	r19, 0xD0	; 208
    1bfe:	31 93       	st	Z+, r19
    1c00:	de f6       	brtc	.-74     	; 0x1bb8 <__ultoa_invert+0xe>
    1c02:	cf 01       	movw	r24, r30
    1c04:	08 95       	ret
    1c06:	46 2f       	mov	r20, r22
    1c08:	47 70       	andi	r20, 0x07	; 7
    1c0a:	40 5d       	subi	r20, 0xD0	; 208
    1c0c:	41 93       	st	Z+, r20
    1c0e:	b3 e0       	ldi	r27, 0x03	; 3
    1c10:	0f d0       	rcall	.+30     	; 0x1c30 <__ultoa_invert+0x86>
    1c12:	c9 f7       	brne	.-14     	; 0x1c06 <__ultoa_invert+0x5c>
    1c14:	f6 cf       	rjmp	.-20     	; 0x1c02 <__ultoa_invert+0x58>
    1c16:	46 2f       	mov	r20, r22
    1c18:	4f 70       	andi	r20, 0x0F	; 15
    1c1a:	40 5d       	subi	r20, 0xD0	; 208
    1c1c:	4a 33       	cpi	r20, 0x3A	; 58
    1c1e:	18 f0       	brcs	.+6      	; 0x1c26 <__ultoa_invert+0x7c>
    1c20:	49 5d       	subi	r20, 0xD9	; 217
    1c22:	31 fd       	sbrc	r19, 1
    1c24:	40 52       	subi	r20, 0x20	; 32
    1c26:	41 93       	st	Z+, r20
    1c28:	02 d0       	rcall	.+4      	; 0x1c2e <__ultoa_invert+0x84>
    1c2a:	a9 f7       	brne	.-22     	; 0x1c16 <__ultoa_invert+0x6c>
    1c2c:	ea cf       	rjmp	.-44     	; 0x1c02 <__ultoa_invert+0x58>
    1c2e:	b4 e0       	ldi	r27, 0x04	; 4
    1c30:	a6 95       	lsr	r26
    1c32:	97 95       	ror	r25
    1c34:	87 95       	ror	r24
    1c36:	77 95       	ror	r23
    1c38:	67 95       	ror	r22
    1c3a:	ba 95       	dec	r27
    1c3c:	c9 f7       	brne	.-14     	; 0x1c30 <__ultoa_invert+0x86>
    1c3e:	00 97       	sbiw	r24, 0x00	; 0
    1c40:	61 05       	cpc	r22, r1
    1c42:	71 05       	cpc	r23, r1
    1c44:	08 95       	ret
    1c46:	9b 01       	movw	r18, r22
    1c48:	ac 01       	movw	r20, r24
    1c4a:	0a 2e       	mov	r0, r26
    1c4c:	06 94       	lsr	r0
    1c4e:	57 95       	ror	r21
    1c50:	47 95       	ror	r20
    1c52:	37 95       	ror	r19
    1c54:	27 95       	ror	r18
    1c56:	ba 95       	dec	r27
    1c58:	c9 f7       	brne	.-14     	; 0x1c4c <__ultoa_invert+0xa2>
    1c5a:	62 0f       	add	r22, r18
    1c5c:	73 1f       	adc	r23, r19
    1c5e:	84 1f       	adc	r24, r20
    1c60:	95 1f       	adc	r25, r21
    1c62:	a0 1d       	adc	r26, r0
    1c64:	08 95       	ret

00001c66 <__prologue_saves__>:
    1c66:	2f 92       	push	r2
    1c68:	3f 92       	push	r3
    1c6a:	4f 92       	push	r4
    1c6c:	5f 92       	push	r5
    1c6e:	6f 92       	push	r6
    1c70:	7f 92       	push	r7
    1c72:	8f 92       	push	r8
    1c74:	9f 92       	push	r9
    1c76:	af 92       	push	r10
    1c78:	bf 92       	push	r11
    1c7a:	cf 92       	push	r12
    1c7c:	df 92       	push	r13
    1c7e:	ef 92       	push	r14
    1c80:	ff 92       	push	r15
    1c82:	0f 93       	push	r16
    1c84:	1f 93       	push	r17
    1c86:	cf 93       	push	r28
    1c88:	df 93       	push	r29
    1c8a:	cd b7       	in	r28, 0x3d	; 61
    1c8c:	de b7       	in	r29, 0x3e	; 62
    1c8e:	ca 1b       	sub	r28, r26
    1c90:	db 0b       	sbc	r29, r27
    1c92:	0f b6       	in	r0, 0x3f	; 63
    1c94:	f8 94       	cli
    1c96:	de bf       	out	0x3e, r29	; 62
    1c98:	0f be       	out	0x3f, r0	; 63
    1c9a:	cd bf       	out	0x3d, r28	; 61
    1c9c:	09 94       	ijmp

00001c9e <__epilogue_restores__>:
    1c9e:	2a 88       	ldd	r2, Y+18	; 0x12
    1ca0:	39 88       	ldd	r3, Y+17	; 0x11
    1ca2:	48 88       	ldd	r4, Y+16	; 0x10
    1ca4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ca6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ca8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1caa:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cac:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cae:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cb0:	b9 84       	ldd	r11, Y+9	; 0x09
    1cb2:	c8 84       	ldd	r12, Y+8	; 0x08
    1cb4:	df 80       	ldd	r13, Y+7	; 0x07
    1cb6:	ee 80       	ldd	r14, Y+6	; 0x06
    1cb8:	fd 80       	ldd	r15, Y+5	; 0x05
    1cba:	0c 81       	ldd	r16, Y+4	; 0x04
    1cbc:	1b 81       	ldd	r17, Y+3	; 0x03
    1cbe:	aa 81       	ldd	r26, Y+2	; 0x02
    1cc0:	b9 81       	ldd	r27, Y+1	; 0x01
    1cc2:	ce 0f       	add	r28, r30
    1cc4:	d1 1d       	adc	r29, r1
    1cc6:	0f b6       	in	r0, 0x3f	; 63
    1cc8:	f8 94       	cli
    1cca:	de bf       	out	0x3e, r29	; 62
    1ccc:	0f be       	out	0x3f, r0	; 63
    1cce:	cd bf       	out	0x3d, r28	; 61
    1cd0:	ed 01       	movw	r28, r26
    1cd2:	08 95       	ret

00001cd4 <_exit>:
    1cd4:	f8 94       	cli

00001cd6 <__stop_program>:
    1cd6:	ff cf       	rjmp	.-2      	; 0x1cd6 <__stop_program>
